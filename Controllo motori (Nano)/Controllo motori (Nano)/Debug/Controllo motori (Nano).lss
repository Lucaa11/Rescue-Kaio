
Controllo motori (Nano).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800100  00000926  000009ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000926  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000146  00800104  00800104  000009be  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  00000a30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a4a  00000000  00000000  00000b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b47  00000000  00000000  000025a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a13  00000000  00000000  000030e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000418  00000000  00000000  00003afc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006cb  00000000  00000000  00003f14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d6d  00000000  00000000  000045df  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  0000534c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 9e 00 	jmp	0x13c	; 0x13c <__vector_1>
   8:	0c 94 b1 01 	jmp	0x362	; 0x362 <__vector_2>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 6f 00 	jmp	0xde	; 0xde <__vector_7>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 79 00 	jmp	0xf2	; 0xf2 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e2       	ldi	r30, 0x26	; 38
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 30       	cpi	r26, 0x04	; 4
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a4 e0       	ldi	r26, 0x04	; 4
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 34       	cpi	r26, 0x4A	; 74
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 bb 01 	call	0x376	; 0x376 <main>
  9e:	0c 94 91 04 	jmp	0x922	; 0x922 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <InitADC>:
#include "ADC.h"

/*-------------ADC-----------------*/
void InitADC(void){
	
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));    //16Mhz/128 = 125Khz the ADC reference clock
  a6:	ea e7       	ldi	r30, 0x7A	; 122
  a8:	f0 e0       	ldi	r31, 0x00	; 0
  aa:	80 81       	ld	r24, Z
  ac:	87 60       	ori	r24, 0x07	; 7
  ae:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);                //Voltage reference from Avcc (5v)
  b0:	ac e7       	ldi	r26, 0x7C	; 124
  b2:	b0 e0       	ldi	r27, 0x00	; 0
  b4:	8c 91       	ld	r24, X
  b6:	80 64       	ori	r24, 0x40	; 64
  b8:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADEN);                //Turn on ADC
  ba:	80 81       	ld	r24, Z
  bc:	80 68       	ori	r24, 0x80	; 128
  be:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);                //Do an initial conversion because this one is the slowest and to ensure that everything is up and running
  c0:	80 81       	ld	r24, Z
  c2:	80 64       	ori	r24, 0x40	; 64
  c4:	80 83       	st	Z, r24
  c6:	08 95       	ret

000000c8 <InitISR>:

volatile unsigned long topRaggiunti = 0;
volatile unsigned long ciao = 0;

void InitISR(void){
	PORTD|=(1<<PD3);
  c8:	5b 9a       	sbi	0x0b, 3	; 11
	EIMSK|=(1<<INT0)|(1<<INT1);
  ca:	8d b3       	in	r24, 0x1d	; 29
  cc:	83 60       	ori	r24, 0x03	; 3
  ce:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC01)|(1<<ISC00)|(1<<ISC11)|(1<<ISC10);
  d0:	e9 e6       	ldi	r30, 0x69	; 105
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	80 81       	ld	r24, Z
  d6:	8f 60       	ori	r24, 0x0F	; 15
  d8:	80 83       	st	Z, r24
	sei();
  da:	78 94       	sei
  dc:	08 95       	ret

000000de <__vector_7>:

}


	
ISR(TIMER2_COMPA_vect){
  de:	1f 92       	push	r1
  e0:	0f 92       	push	r0
  e2:	0f b6       	in	r0, 0x3f	; 63
  e4:	0f 92       	push	r0
  e6:	11 24       	eor	r1, r1
	//OCR1A = CalculatePID(1);
	//dutyMDxA = CalculatePID(MDxA);
	//dutyMSxD = CalculatePID(MSxD);
	//dutyMDxD = CalculatePID(MDxD);
	
}
  e8:	0f 90       	pop	r0
  ea:	0f be       	out	0x3f, r0	; 63
  ec:	0f 90       	pop	r0
  ee:	1f 90       	pop	r1
  f0:	18 95       	reti

000000f2 <__vector_14>:

ISR(TIMER0_COMPA_vect){
  f2:	1f 92       	push	r1
  f4:	0f 92       	push	r0
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	0f 92       	push	r0
  fa:	11 24       	eor	r1, r1
  fc:	8f 93       	push	r24
  fe:	9f 93       	push	r25
 100:	af 93       	push	r26
 102:	bf 93       	push	r27
	topRaggiunti++;	
 104:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 108:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 10c:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 110:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 114:	01 96       	adiw	r24, 0x01	; 1
 116:	a1 1d       	adc	r26, r1
 118:	b1 1d       	adc	r27, r1
 11a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__data_end>
 11e:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <__data_end+0x1>
 122:	a0 93 06 01 	sts	0x0106, r26	; 0x800106 <__data_end+0x2>
 126:	b0 93 07 01 	sts	0x0107, r27	; 0x800107 <__data_end+0x3>
	
}
 12a:	bf 91       	pop	r27
 12c:	af 91       	pop	r26
 12e:	9f 91       	pop	r25
 130:	8f 91       	pop	r24
 132:	0f 90       	pop	r0
 134:	0f be       	out	0x3f, r0	; 63
 136:	0f 90       	pop	r0
 138:	1f 90       	pop	r1
 13a:	18 95       	reti

0000013c <__vector_1>:

ISR(INT0_vect){	
 13c:	1f 92       	push	r1
 13e:	0f 92       	push	r0
 140:	0f b6       	in	r0, 0x3f	; 63
 142:	0f 92       	push	r0
 144:	11 24       	eor	r1, r1
 146:	4f 92       	push	r4
 148:	5f 92       	push	r5
 14a:	6f 92       	push	r6
 14c:	7f 92       	push	r7
 14e:	8f 92       	push	r8
 150:	9f 92       	push	r9
 152:	af 92       	push	r10
 154:	bf 92       	push	r11
 156:	cf 92       	push	r12
 158:	df 92       	push	r13
 15a:	ef 92       	push	r14
 15c:	ff 92       	push	r15
 15e:	2f 93       	push	r18
 160:	3f 93       	push	r19
 162:	4f 93       	push	r20
 164:	5f 93       	push	r21
 166:	6f 93       	push	r22
 168:	7f 93       	push	r23
 16a:	8f 93       	push	r24
 16c:	9f 93       	push	r25
 16e:	af 93       	push	r26
 170:	bf 93       	push	r27
 172:	ef 93       	push	r30
 174:	ff 93       	push	r31

	tImp1 = TCNT0;
 176:	86 b5       	in	r24, 0x26	; 38
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	a0 e0       	ldi	r26, 0x00	; 0
 17c:	b0 e0       	ldi	r27, 0x00	; 0
 17e:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <tImp1>
 182:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <tImp1+0x1>
 186:	a0 93 56 01 	sts	0x0156, r26	; 0x800156 <tImp1+0x2>
 18a:	b0 93 57 01 	sts	0x0157, r27	; 0x800157 <tImp1+0x3>
	topRaggiuntiProv1=topRaggiunti;
 18e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <__data_end>
 192:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <__data_end+0x1>
 196:	a0 91 06 01 	lds	r26, 0x0106	; 0x800106 <__data_end+0x2>
 19a:	b0 91 07 01 	lds	r27, 0x0107	; 0x800107 <__data_end+0x3>
 19e:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <topRaggiuntiProv1>
 1a2:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <topRaggiuntiProv1+0x1>
 1a6:	a0 93 0e 01 	sts	0x010E, r26	; 0x80010e <topRaggiuntiProv1+0x2>
 1aa:	b0 93 0f 01 	sts	0x010F, r27	; 0x80010f <topRaggiuntiProv1+0x3>
	if(topRaggiuntiProv1==vTopRaggiunti1){
 1ae:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <topRaggiuntiProv1>
 1b2:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <topRaggiuntiProv1+0x1>
 1b6:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <topRaggiuntiProv1+0x2>
 1ba:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <topRaggiuntiProv1+0x3>
 1be:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <vTopRaggiunti1>
 1c2:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <vTopRaggiunti1+0x1>
 1c6:	a0 91 aa 01 	lds	r26, 0x01AA	; 0x8001aa <vTopRaggiunti1+0x2>
 1ca:	b0 91 ab 01 	lds	r27, 0x01AB	; 0x8001ab <vTopRaggiunti1+0x3>
 1ce:	48 17       	cp	r20, r24
 1d0:	59 07       	cpc	r21, r25
 1d2:	6a 07       	cpc	r22, r26
 1d4:	7b 07       	cpc	r23, r27
 1d6:	e9 f4       	brne	.+58     	; 0x212 <__vector_1+0xd6>
		difftImp1 = tImp1 - vtImp1;
 1d8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <tImp1>
 1dc:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <tImp1+0x1>
 1e0:	a0 91 56 01 	lds	r26, 0x0156	; 0x800156 <tImp1+0x2>
 1e4:	b0 91 57 01 	lds	r27, 0x0157	; 0x800157 <tImp1+0x3>
 1e8:	40 91 30 01 	lds	r20, 0x0130	; 0x800130 <vtImp1>
 1ec:	50 91 31 01 	lds	r21, 0x0131	; 0x800131 <vtImp1+0x1>
 1f0:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <vtImp1+0x2>
 1f4:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <vtImp1+0x3>
 1f8:	84 1b       	sub	r24, r20
 1fa:	95 0b       	sbc	r25, r21
 1fc:	a6 0b       	sbc	r26, r22
 1fe:	b7 0b       	sbc	r27, r23
 200:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <difftImp1>
 204:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <difftImp1+0x1>
 208:	a0 93 6a 01 	sts	0x016A, r26	; 0x80016a <difftImp1+0x2>
 20c:	b0 93 6b 01 	sts	0x016B, r27	; 0x80016b <difftImp1+0x3>
 210:	4b c0       	rjmp	.+150    	; 0x2a8 <__vector_1+0x16c>
	}
	else{
		difftImp1 = (OCR0A - vtImp1) + (tImp1) + ((topRaggiuntiProv1-vTopRaggiunti1-1)*OCR0A);
 212:	e7 b5       	in	r30, 0x27	; 39
 214:	80 90 30 01 	lds	r8, 0x0130	; 0x800130 <vtImp1>
 218:	90 90 31 01 	lds	r9, 0x0131	; 0x800131 <vtImp1+0x1>
 21c:	a0 90 32 01 	lds	r10, 0x0132	; 0x800132 <vtImp1+0x2>
 220:	b0 90 33 01 	lds	r11, 0x0133	; 0x800133 <vtImp1+0x3>
 224:	c0 90 54 01 	lds	r12, 0x0154	; 0x800154 <tImp1>
 228:	d0 90 55 01 	lds	r13, 0x0155	; 0x800155 <tImp1+0x1>
 22c:	e0 90 56 01 	lds	r14, 0x0156	; 0x800156 <tImp1+0x2>
 230:	f0 90 57 01 	lds	r15, 0x0157	; 0x800157 <tImp1+0x3>
 234:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <topRaggiuntiProv1>
 238:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <topRaggiuntiProv1+0x1>
 23c:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <topRaggiuntiProv1+0x2>
 240:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <topRaggiuntiProv1+0x3>
 244:	40 90 a8 01 	lds	r4, 0x01A8	; 0x8001a8 <vTopRaggiunti1>
 248:	50 90 a9 01 	lds	r5, 0x01A9	; 0x8001a9 <vTopRaggiunti1+0x1>
 24c:	60 90 aa 01 	lds	r6, 0x01AA	; 0x8001aa <vTopRaggiunti1+0x2>
 250:	70 90 ab 01 	lds	r7, 0x01AB	; 0x8001ab <vTopRaggiunti1+0x3>
 254:	a7 b5       	in	r26, 0x27	; 39
 256:	41 50       	subi	r20, 0x01	; 1
 258:	51 09       	sbc	r21, r1
 25a:	61 09       	sbc	r22, r1
 25c:	71 09       	sbc	r23, r1
 25e:	9a 01       	movw	r18, r20
 260:	ab 01       	movw	r20, r22
 262:	24 19       	sub	r18, r4
 264:	35 09       	sbc	r19, r5
 266:	46 09       	sbc	r20, r6
 268:	57 09       	sbc	r21, r7
 26a:	b0 e0       	ldi	r27, 0x00	; 0
 26c:	0e 94 77 04 	call	0x8ee	; 0x8ee <__muluhisi3>
 270:	4e 2e       	mov	r4, r30
 272:	51 2c       	mov	r5, r1
 274:	61 2c       	mov	r6, r1
 276:	71 2c       	mov	r7, r1
 278:	a3 01       	movw	r20, r6
 27a:	92 01       	movw	r18, r4
 27c:	28 19       	sub	r18, r8
 27e:	39 09       	sbc	r19, r9
 280:	4a 09       	sbc	r20, r10
 282:	5b 09       	sbc	r21, r11
 284:	c2 0e       	add	r12, r18
 286:	d3 1e       	adc	r13, r19
 288:	e4 1e       	adc	r14, r20
 28a:	f5 1e       	adc	r15, r21
 28c:	dc 01       	movw	r26, r24
 28e:	cb 01       	movw	r24, r22
 290:	8c 0d       	add	r24, r12
 292:	9d 1d       	adc	r25, r13
 294:	ae 1d       	adc	r26, r14
 296:	bf 1d       	adc	r27, r15
 298:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <difftImp1>
 29c:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <difftImp1+0x1>
 2a0:	a0 93 6a 01 	sts	0x016A, r26	; 0x80016a <difftImp1+0x2>
 2a4:	b0 93 6b 01 	sts	0x016B, r27	; 0x80016b <difftImp1+0x3>
		
	}
	speed[1] = 250000.0 / (622.0*difftImp1);
 2a8:	60 91 68 01 	lds	r22, 0x0168	; 0x800168 <difftImp1>
 2ac:	70 91 69 01 	lds	r23, 0x0169	; 0x800169 <difftImp1+0x1>
 2b0:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <difftImp1+0x2>
 2b4:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <difftImp1+0x3>
 2b8:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <__floatunsisf>
 2bc:	20 e0       	ldi	r18, 0x00	; 0
 2be:	30 e8       	ldi	r19, 0x80	; 128
 2c0:	4b e1       	ldi	r20, 0x1B	; 27
 2c2:	54 e4       	ldi	r21, 0x44	; 68
 2c4:	0e 94 0a 04 	call	0x814	; 0x814 <__mulsf3>
 2c8:	9b 01       	movw	r18, r22
 2ca:	ac 01       	movw	r20, r24
 2cc:	60 e0       	ldi	r22, 0x00	; 0
 2ce:	74 e2       	ldi	r23, 0x24	; 36
 2d0:	84 e7       	ldi	r24, 0x74	; 116
 2d2:	98 e4       	ldi	r25, 0x48	; 72
 2d4:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__divsf3>
 2d8:	60 93 e4 01 	sts	0x01E4, r22	; 0x8001e4 <speed+0x4>
 2dc:	70 93 e5 01 	sts	0x01E5, r23	; 0x8001e5 <speed+0x5>
 2e0:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <speed+0x6>
 2e4:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <speed+0x7>
	vtImp1 = tImp1;
 2e8:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <tImp1>
 2ec:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <tImp1+0x1>
 2f0:	a0 91 56 01 	lds	r26, 0x0156	; 0x800156 <tImp1+0x2>
 2f4:	b0 91 57 01 	lds	r27, 0x0157	; 0x800157 <tImp1+0x3>
 2f8:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <vtImp1>
 2fc:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <vtImp1+0x1>
 300:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <vtImp1+0x2>
 304:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <vtImp1+0x3>
	vTopRaggiunti1 = topRaggiuntiProv1;
 308:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <topRaggiuntiProv1>
 30c:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <topRaggiuntiProv1+0x1>
 310:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <topRaggiuntiProv1+0x2>
 314:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <topRaggiuntiProv1+0x3>
 318:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <vTopRaggiunti1>
 31c:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <vTopRaggiunti1+0x1>
 320:	a0 93 aa 01 	sts	0x01AA, r26	; 0x8001aa <vTopRaggiunti1+0x2>
 324:	b0 93 ab 01 	sts	0x01AB, r27	; 0x8001ab <vTopRaggiunti1+0x3>
}
 328:	ff 91       	pop	r31
 32a:	ef 91       	pop	r30
 32c:	bf 91       	pop	r27
 32e:	af 91       	pop	r26
 330:	9f 91       	pop	r25
 332:	8f 91       	pop	r24
 334:	7f 91       	pop	r23
 336:	6f 91       	pop	r22
 338:	5f 91       	pop	r21
 33a:	4f 91       	pop	r20
 33c:	3f 91       	pop	r19
 33e:	2f 91       	pop	r18
 340:	ff 90       	pop	r15
 342:	ef 90       	pop	r14
 344:	df 90       	pop	r13
 346:	cf 90       	pop	r12
 348:	bf 90       	pop	r11
 34a:	af 90       	pop	r10
 34c:	9f 90       	pop	r9
 34e:	8f 90       	pop	r8
 350:	7f 90       	pop	r7
 352:	6f 90       	pop	r6
 354:	5f 90       	pop	r5
 356:	4f 90       	pop	r4
 358:	0f 90       	pop	r0
 35a:	0f be       	out	0x3f, r0	; 63
 35c:	0f 90       	pop	r0
 35e:	1f 90       	pop	r1
 360:	18 95       	reti

00000362 <__vector_2>:

ISR(INT1_vect){
 362:	1f 92       	push	r1
 364:	0f 92       	push	r0
 366:	0f b6       	in	r0, 0x3f	; 63
 368:	0f 92       	push	r0
 36a:	11 24       	eor	r1, r1
}
 36c:	0f 90       	pop	r0
 36e:	0f be       	out	0x3f, r0	; 63
 370:	0f 90       	pop	r0
 372:	1f 90       	pop	r1
 374:	18 95       	reti

00000376 <main>:
#include "ADC.h"
int main(void)
{
	
	//init_millis(F_CPU);
	Serial_Init();
 376:	0e 94 22 02 	call	0x444	; 0x444 <Serial_Init>
	InitADC();
 37a:	0e 94 53 00 	call	0xa6	; 0xa6 <InitADC>
	Serial_Send("xd");
 37e:	80 e0       	ldi	r24, 0x00	; 0
 380:	91 e0       	ldi	r25, 0x01	; 1
 382:	0e 94 45 02 	call	0x48a	; 0x48a <Serial_Send_String>
	SerialN();
 386:	0e 94 67 02 	call	0x4ce	; 0x4ce <SerialN>
	InitPWM();
 38a:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <InitPWM>
	InitISR();
 38e:	0e 94 64 00 	call	0xc8	; 0xc8 <InitISR>
	DDRC=0;
 392:	17 b8       	out	0x07, r1	; 7
	DDRD=0;
 394:	1a b8       	out	0x0a, r1	; 10
	servo(180);
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	84 e3       	ldi	r24, 0x34	; 52
 39c:	93 e4       	ldi	r25, 0x43	; 67
 39e:	0e 94 09 02 	call	0x412	; 0x412 <servo>
 3a2:	ff cf       	rjmp	.-2      	; 0x3a2 <main+0x2c>

000003a4 <InitPWM>:
	duty[N] = proportional[N] + integral[N]*Ki + derivative[N]*Kd;
	if (duty[N]<0) duty[N]=0;
	if (duty[N]>1023) duty[N]=1023;
	old_error[N] = error[N];
	return duty[N];
}
 3a4:	e0 e8       	ldi	r30, 0x80	; 128
 3a6:	f0 e0       	ldi	r31, 0x00	; 0
 3a8:	80 81       	ld	r24, Z
 3aa:	83 6a       	ori	r24, 0xA3	; 163
 3ac:	80 83       	st	Z, r24
 3ae:	e1 e8       	ldi	r30, 0x81	; 129
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	80 81       	ld	r24, Z
 3b4:	8c 60       	ori	r24, 0x0C	; 12
 3b6:	80 83       	st	Z, r24
 3b8:	e0 eb       	ldi	r30, 0xB0	; 176
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	80 81       	ld	r24, Z
 3be:	80 83       	st	Z, r24
 3c0:	e1 eb       	ldi	r30, 0xB1	; 177
 3c2:	f0 e0       	ldi	r31, 0x00	; 0
 3c4:	80 81       	ld	r24, Z
 3c6:	8b 60       	ori	r24, 0x0B	; 11
 3c8:	80 83       	st	Z, r24
 3ca:	22 e0       	ldi	r18, 0x02	; 2
 3cc:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
 3d0:	8f ef       	ldi	r24, 0xFF	; 255
 3d2:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
 3d6:	94 b5       	in	r25, 0x24	; 36
 3d8:	92 60       	ori	r25, 0x02	; 2
 3da:	94 bd       	out	0x24, r25	; 36
 3dc:	95 b5       	in	r25, 0x25	; 37
 3de:	9b 60       	ori	r25, 0x0B	; 11
 3e0:	95 bd       	out	0x25, r25	; 37
 3e2:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
 3e6:	87 bd       	out	0x27, r24	; 39
 3e8:	86 bd       	out	0x26, r24	; 38
 3ea:	84 b9       	out	0x04, r24	; 4
 3ec:	ec e0       	ldi	r30, 0x0C	; 12
 3ee:	f2 e0       	ldi	r31, 0x02	; 2
 3f0:	14 82       	std	Z+4, r1	; 0x04
 3f2:	15 82       	std	Z+5, r1	; 0x05
 3f4:	16 82       	std	Z+6, r1	; 0x06
 3f6:	17 82       	std	Z+7, r1	; 0x07
 3f8:	10 86       	std	Z+8, r1	; 0x08
 3fa:	11 86       	std	Z+9, r1	; 0x09
 3fc:	12 86       	std	Z+10, r1	; 0x0a
 3fe:	13 86       	std	Z+11, r1	; 0x0b
 400:	14 86       	std	Z+12, r1	; 0x0c
 402:	15 86       	std	Z+13, r1	; 0x0d
 404:	16 86       	std	Z+14, r1	; 0x0e
 406:	17 86       	std	Z+15, r1	; 0x0f
 408:	10 8a       	std	Z+16, r1	; 0x10
 40a:	11 8a       	std	Z+17, r1	; 0x11
 40c:	12 8a       	std	Z+18, r1	; 0x12
 40e:	13 8a       	std	Z+19, r1	; 0x13
 410:	08 95       	ret

00000412 <servo>:
void servo(double degrees){
	OCR1A=degrees*(156-30)/180+30;
 412:	20 e0       	ldi	r18, 0x00	; 0
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	4c ef       	ldi	r20, 0xFC	; 252
 418:	52 e4       	ldi	r21, 0x42	; 66
 41a:	0e 94 0a 04 	call	0x814	; 0x814 <__mulsf3>
 41e:	20 e0       	ldi	r18, 0x00	; 0
 420:	30 e0       	ldi	r19, 0x00	; 0
 422:	44 e3       	ldi	r20, 0x34	; 52
 424:	53 e4       	ldi	r21, 0x43	; 67
 426:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__divsf3>
 42a:	20 e0       	ldi	r18, 0x00	; 0
 42c:	30 e0       	ldi	r19, 0x00	; 0
 42e:	40 ef       	ldi	r20, 0xF0	; 240
 430:	51 e4       	ldi	r21, 0x41	; 65
 432:	0e 94 6f 02 	call	0x4de	; 0x4de <__addsf3>
 436:	0e 94 4d 03 	call	0x69a	; 0x69a <__fixunssfsi>
 43a:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 43e:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 442:	08 95       	ret

00000444 <Serial_Init>:
 444:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <BAUD0>
 448:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <BAUD0+0x1>
 44c:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <BAUD0+0x2>
 450:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <BAUD0+0x3>
 454:	89 2f       	mov	r24, r25
 456:	9a 2f       	mov	r25, r26
 458:	ab 2f       	mov	r26, r27
 45a:	bb 27       	eor	r27, r27
 45c:	a7 fd       	sbrc	r26, 7
 45e:	ba 95       	dec	r27
 460:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 464:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <BAUD0>
 468:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 46c:	88 e1       	ldi	r24, 0x18	; 24
 46e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 472:	86 e0       	ldi	r24, 0x06	; 6
 474:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 478:	08 95       	ret

0000047a <Serial_Tx>:
 47a:	e0 ec       	ldi	r30, 0xC0	; 192
 47c:	f0 e0       	ldi	r31, 0x00	; 0
 47e:	90 81       	ld	r25, Z
 480:	95 ff       	sbrs	r25, 5
 482:	fd cf       	rjmp	.-6      	; 0x47e <Serial_Tx+0x4>
 484:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 488:	08 95       	ret

0000048a <Serial_Send_String>:
 48a:	ef 92       	push	r14
 48c:	ff 92       	push	r15
 48e:	0f 93       	push	r16
 490:	1f 93       	push	r17
 492:	cf 93       	push	r28
 494:	df 93       	push	r29
 496:	8c 01       	movw	r16, r24
 498:	7c 01       	movw	r14, r24
 49a:	c0 e0       	ldi	r28, 0x00	; 0
 49c:	d0 e0       	ldi	r29, 0x00	; 0
 49e:	06 c0       	rjmp	.+12     	; 0x4ac <Serial_Send_String+0x22>
 4a0:	f7 01       	movw	r30, r14
 4a2:	81 91       	ld	r24, Z+
 4a4:	7f 01       	movw	r14, r30
 4a6:	0e 94 3d 02 	call	0x47a	; 0x47a <Serial_Tx>
 4aa:	21 96       	adiw	r28, 0x01	; 1
 4ac:	f8 01       	movw	r30, r16
 4ae:	01 90       	ld	r0, Z+
 4b0:	00 20       	and	r0, r0
 4b2:	e9 f7       	brne	.-6      	; 0x4ae <Serial_Send_String+0x24>
 4b4:	31 97       	sbiw	r30, 0x01	; 1
 4b6:	e0 1b       	sub	r30, r16
 4b8:	f1 0b       	sbc	r31, r17
 4ba:	ce 17       	cp	r28, r30
 4bc:	df 07       	cpc	r29, r31
 4be:	80 f3       	brcs	.-32     	; 0x4a0 <Serial_Send_String+0x16>
 4c0:	df 91       	pop	r29
 4c2:	cf 91       	pop	r28
 4c4:	1f 91       	pop	r17
 4c6:	0f 91       	pop	r16
 4c8:	ff 90       	pop	r15
 4ca:	ef 90       	pop	r14
 4cc:	08 95       	ret

000004ce <SerialN>:
 4ce:	8d e0       	ldi	r24, 0x0D	; 13
 4d0:	0e 94 3d 02 	call	0x47a	; 0x47a <Serial_Tx>
 4d4:	8a e0       	ldi	r24, 0x0A	; 10
 4d6:	0e 94 3d 02 	call	0x47a	; 0x47a <Serial_Tx>
 4da:	08 95       	ret

000004dc <__subsf3>:
 4dc:	50 58       	subi	r21, 0x80	; 128

000004de <__addsf3>:
 4de:	bb 27       	eor	r27, r27
 4e0:	aa 27       	eor	r26, r26
 4e2:	0e 94 86 02 	call	0x50c	; 0x50c <__addsf3x>
 4e6:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__fp_round>
 4ea:	0e 94 c2 03 	call	0x784	; 0x784 <__fp_pscA>
 4ee:	38 f0       	brcs	.+14     	; 0x4fe <__addsf3+0x20>
 4f0:	0e 94 c9 03 	call	0x792	; 0x792 <__fp_pscB>
 4f4:	20 f0       	brcs	.+8      	; 0x4fe <__addsf3+0x20>
 4f6:	39 f4       	brne	.+14     	; 0x506 <__addsf3+0x28>
 4f8:	9f 3f       	cpi	r25, 0xFF	; 255
 4fa:	19 f4       	brne	.+6      	; 0x502 <__addsf3+0x24>
 4fc:	26 f4       	brtc	.+8      	; 0x506 <__addsf3+0x28>
 4fe:	0c 94 bf 03 	jmp	0x77e	; 0x77e <__fp_nan>
 502:	0e f4       	brtc	.+2      	; 0x506 <__addsf3+0x28>
 504:	e0 95       	com	r30
 506:	e7 fb       	bst	r30, 7
 508:	0c 94 b9 03 	jmp	0x772	; 0x772 <__fp_inf>

0000050c <__addsf3x>:
 50c:	e9 2f       	mov	r30, r25
 50e:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__fp_split3>
 512:	58 f3       	brcs	.-42     	; 0x4ea <__addsf3+0xc>
 514:	ba 17       	cp	r27, r26
 516:	62 07       	cpc	r22, r18
 518:	73 07       	cpc	r23, r19
 51a:	84 07       	cpc	r24, r20
 51c:	95 07       	cpc	r25, r21
 51e:	20 f0       	brcs	.+8      	; 0x528 <__addsf3x+0x1c>
 520:	79 f4       	brne	.+30     	; 0x540 <__addsf3x+0x34>
 522:	a6 f5       	brtc	.+104    	; 0x58c <__addsf3x+0x80>
 524:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_zero>
 528:	0e f4       	brtc	.+2      	; 0x52c <__addsf3x+0x20>
 52a:	e0 95       	com	r30
 52c:	0b 2e       	mov	r0, r27
 52e:	ba 2f       	mov	r27, r26
 530:	a0 2d       	mov	r26, r0
 532:	0b 01       	movw	r0, r22
 534:	b9 01       	movw	r22, r18
 536:	90 01       	movw	r18, r0
 538:	0c 01       	movw	r0, r24
 53a:	ca 01       	movw	r24, r20
 53c:	a0 01       	movw	r20, r0
 53e:	11 24       	eor	r1, r1
 540:	ff 27       	eor	r31, r31
 542:	59 1b       	sub	r21, r25
 544:	99 f0       	breq	.+38     	; 0x56c <__addsf3x+0x60>
 546:	59 3f       	cpi	r21, 0xF9	; 249
 548:	50 f4       	brcc	.+20     	; 0x55e <__addsf3x+0x52>
 54a:	50 3e       	cpi	r21, 0xE0	; 224
 54c:	68 f1       	brcs	.+90     	; 0x5a8 <__addsf3x+0x9c>
 54e:	1a 16       	cp	r1, r26
 550:	f0 40       	sbci	r31, 0x00	; 0
 552:	a2 2f       	mov	r26, r18
 554:	23 2f       	mov	r18, r19
 556:	34 2f       	mov	r19, r20
 558:	44 27       	eor	r20, r20
 55a:	58 5f       	subi	r21, 0xF8	; 248
 55c:	f3 cf       	rjmp	.-26     	; 0x544 <__addsf3x+0x38>
 55e:	46 95       	lsr	r20
 560:	37 95       	ror	r19
 562:	27 95       	ror	r18
 564:	a7 95       	ror	r26
 566:	f0 40       	sbci	r31, 0x00	; 0
 568:	53 95       	inc	r21
 56a:	c9 f7       	brne	.-14     	; 0x55e <__addsf3x+0x52>
 56c:	7e f4       	brtc	.+30     	; 0x58c <__addsf3x+0x80>
 56e:	1f 16       	cp	r1, r31
 570:	ba 0b       	sbc	r27, r26
 572:	62 0b       	sbc	r22, r18
 574:	73 0b       	sbc	r23, r19
 576:	84 0b       	sbc	r24, r20
 578:	ba f0       	brmi	.+46     	; 0x5a8 <__addsf3x+0x9c>
 57a:	91 50       	subi	r25, 0x01	; 1
 57c:	a1 f0       	breq	.+40     	; 0x5a6 <__addsf3x+0x9a>
 57e:	ff 0f       	add	r31, r31
 580:	bb 1f       	adc	r27, r27
 582:	66 1f       	adc	r22, r22
 584:	77 1f       	adc	r23, r23
 586:	88 1f       	adc	r24, r24
 588:	c2 f7       	brpl	.-16     	; 0x57a <__addsf3x+0x6e>
 58a:	0e c0       	rjmp	.+28     	; 0x5a8 <__addsf3x+0x9c>
 58c:	ba 0f       	add	r27, r26
 58e:	62 1f       	adc	r22, r18
 590:	73 1f       	adc	r23, r19
 592:	84 1f       	adc	r24, r20
 594:	48 f4       	brcc	.+18     	; 0x5a8 <__addsf3x+0x9c>
 596:	87 95       	ror	r24
 598:	77 95       	ror	r23
 59a:	67 95       	ror	r22
 59c:	b7 95       	ror	r27
 59e:	f7 95       	ror	r31
 5a0:	9e 3f       	cpi	r25, 0xFE	; 254
 5a2:	08 f0       	brcs	.+2      	; 0x5a6 <__addsf3x+0x9a>
 5a4:	b0 cf       	rjmp	.-160    	; 0x506 <__addsf3+0x28>
 5a6:	93 95       	inc	r25
 5a8:	88 0f       	add	r24, r24
 5aa:	08 f0       	brcs	.+2      	; 0x5ae <__addsf3x+0xa2>
 5ac:	99 27       	eor	r25, r25
 5ae:	ee 0f       	add	r30, r30
 5b0:	97 95       	ror	r25
 5b2:	87 95       	ror	r24
 5b4:	08 95       	ret

000005b6 <__divsf3>:
 5b6:	0e 94 ef 02 	call	0x5de	; 0x5de <__divsf3x>
 5ba:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__fp_round>
 5be:	0e 94 c9 03 	call	0x792	; 0x792 <__fp_pscB>
 5c2:	58 f0       	brcs	.+22     	; 0x5da <__divsf3+0x24>
 5c4:	0e 94 c2 03 	call	0x784	; 0x784 <__fp_pscA>
 5c8:	40 f0       	brcs	.+16     	; 0x5da <__divsf3+0x24>
 5ca:	29 f4       	brne	.+10     	; 0x5d6 <__divsf3+0x20>
 5cc:	5f 3f       	cpi	r21, 0xFF	; 255
 5ce:	29 f0       	breq	.+10     	; 0x5da <__divsf3+0x24>
 5d0:	0c 94 b9 03 	jmp	0x772	; 0x772 <__fp_inf>
 5d4:	51 11       	cpse	r21, r1
 5d6:	0c 94 04 04 	jmp	0x808	; 0x808 <__fp_szero>
 5da:	0c 94 bf 03 	jmp	0x77e	; 0x77e <__fp_nan>

000005de <__divsf3x>:
 5de:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__fp_split3>
 5e2:	68 f3       	brcs	.-38     	; 0x5be <__divsf3+0x8>

000005e4 <__divsf3_pse>:
 5e4:	99 23       	and	r25, r25
 5e6:	b1 f3       	breq	.-20     	; 0x5d4 <__divsf3+0x1e>
 5e8:	55 23       	and	r21, r21
 5ea:	91 f3       	breq	.-28     	; 0x5d0 <__divsf3+0x1a>
 5ec:	95 1b       	sub	r25, r21
 5ee:	55 0b       	sbc	r21, r21
 5f0:	bb 27       	eor	r27, r27
 5f2:	aa 27       	eor	r26, r26
 5f4:	62 17       	cp	r22, r18
 5f6:	73 07       	cpc	r23, r19
 5f8:	84 07       	cpc	r24, r20
 5fa:	38 f0       	brcs	.+14     	; 0x60a <__divsf3_pse+0x26>
 5fc:	9f 5f       	subi	r25, 0xFF	; 255
 5fe:	5f 4f       	sbci	r21, 0xFF	; 255
 600:	22 0f       	add	r18, r18
 602:	33 1f       	adc	r19, r19
 604:	44 1f       	adc	r20, r20
 606:	aa 1f       	adc	r26, r26
 608:	a9 f3       	breq	.-22     	; 0x5f4 <__divsf3_pse+0x10>
 60a:	35 d0       	rcall	.+106    	; 0x676 <__divsf3_pse+0x92>
 60c:	0e 2e       	mov	r0, r30
 60e:	3a f0       	brmi	.+14     	; 0x61e <__divsf3_pse+0x3a>
 610:	e0 e8       	ldi	r30, 0x80	; 128
 612:	32 d0       	rcall	.+100    	; 0x678 <__divsf3_pse+0x94>
 614:	91 50       	subi	r25, 0x01	; 1
 616:	50 40       	sbci	r21, 0x00	; 0
 618:	e6 95       	lsr	r30
 61a:	00 1c       	adc	r0, r0
 61c:	ca f7       	brpl	.-14     	; 0x610 <__divsf3_pse+0x2c>
 61e:	2b d0       	rcall	.+86     	; 0x676 <__divsf3_pse+0x92>
 620:	fe 2f       	mov	r31, r30
 622:	29 d0       	rcall	.+82     	; 0x676 <__divsf3_pse+0x92>
 624:	66 0f       	add	r22, r22
 626:	77 1f       	adc	r23, r23
 628:	88 1f       	adc	r24, r24
 62a:	bb 1f       	adc	r27, r27
 62c:	26 17       	cp	r18, r22
 62e:	37 07       	cpc	r19, r23
 630:	48 07       	cpc	r20, r24
 632:	ab 07       	cpc	r26, r27
 634:	b0 e8       	ldi	r27, 0x80	; 128
 636:	09 f0       	breq	.+2      	; 0x63a <__divsf3_pse+0x56>
 638:	bb 0b       	sbc	r27, r27
 63a:	80 2d       	mov	r24, r0
 63c:	bf 01       	movw	r22, r30
 63e:	ff 27       	eor	r31, r31
 640:	93 58       	subi	r25, 0x83	; 131
 642:	5f 4f       	sbci	r21, 0xFF	; 255
 644:	3a f0       	brmi	.+14     	; 0x654 <__divsf3_pse+0x70>
 646:	9e 3f       	cpi	r25, 0xFE	; 254
 648:	51 05       	cpc	r21, r1
 64a:	78 f0       	brcs	.+30     	; 0x66a <__divsf3_pse+0x86>
 64c:	0c 94 b9 03 	jmp	0x772	; 0x772 <__fp_inf>
 650:	0c 94 04 04 	jmp	0x808	; 0x808 <__fp_szero>
 654:	5f 3f       	cpi	r21, 0xFF	; 255
 656:	e4 f3       	brlt	.-8      	; 0x650 <__divsf3_pse+0x6c>
 658:	98 3e       	cpi	r25, 0xE8	; 232
 65a:	d4 f3       	brlt	.-12     	; 0x650 <__divsf3_pse+0x6c>
 65c:	86 95       	lsr	r24
 65e:	77 95       	ror	r23
 660:	67 95       	ror	r22
 662:	b7 95       	ror	r27
 664:	f7 95       	ror	r31
 666:	9f 5f       	subi	r25, 0xFF	; 255
 668:	c9 f7       	brne	.-14     	; 0x65c <__divsf3_pse+0x78>
 66a:	88 0f       	add	r24, r24
 66c:	91 1d       	adc	r25, r1
 66e:	96 95       	lsr	r25
 670:	87 95       	ror	r24
 672:	97 f9       	bld	r25, 7
 674:	08 95       	ret
 676:	e1 e0       	ldi	r30, 0x01	; 1
 678:	66 0f       	add	r22, r22
 67a:	77 1f       	adc	r23, r23
 67c:	88 1f       	adc	r24, r24
 67e:	bb 1f       	adc	r27, r27
 680:	62 17       	cp	r22, r18
 682:	73 07       	cpc	r23, r19
 684:	84 07       	cpc	r24, r20
 686:	ba 07       	cpc	r27, r26
 688:	20 f0       	brcs	.+8      	; 0x692 <__divsf3_pse+0xae>
 68a:	62 1b       	sub	r22, r18
 68c:	73 0b       	sbc	r23, r19
 68e:	84 0b       	sbc	r24, r20
 690:	ba 0b       	sbc	r27, r26
 692:	ee 1f       	adc	r30, r30
 694:	88 f7       	brcc	.-30     	; 0x678 <__divsf3_pse+0x94>
 696:	e0 95       	com	r30
 698:	08 95       	ret

0000069a <__fixunssfsi>:
 69a:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fp_splitA>
 69e:	88 f0       	brcs	.+34     	; 0x6c2 <__fixunssfsi+0x28>
 6a0:	9f 57       	subi	r25, 0x7F	; 127
 6a2:	98 f0       	brcs	.+38     	; 0x6ca <__fixunssfsi+0x30>
 6a4:	b9 2f       	mov	r27, r25
 6a6:	99 27       	eor	r25, r25
 6a8:	b7 51       	subi	r27, 0x17	; 23
 6aa:	b0 f0       	brcs	.+44     	; 0x6d8 <__fixunssfsi+0x3e>
 6ac:	e1 f0       	breq	.+56     	; 0x6e6 <__fixunssfsi+0x4c>
 6ae:	66 0f       	add	r22, r22
 6b0:	77 1f       	adc	r23, r23
 6b2:	88 1f       	adc	r24, r24
 6b4:	99 1f       	adc	r25, r25
 6b6:	1a f0       	brmi	.+6      	; 0x6be <__fixunssfsi+0x24>
 6b8:	ba 95       	dec	r27
 6ba:	c9 f7       	brne	.-14     	; 0x6ae <__fixunssfsi+0x14>
 6bc:	14 c0       	rjmp	.+40     	; 0x6e6 <__fixunssfsi+0x4c>
 6be:	b1 30       	cpi	r27, 0x01	; 1
 6c0:	91 f0       	breq	.+36     	; 0x6e6 <__fixunssfsi+0x4c>
 6c2:	0e 94 03 04 	call	0x806	; 0x806 <__fp_zero>
 6c6:	b1 e0       	ldi	r27, 0x01	; 1
 6c8:	08 95       	ret
 6ca:	0c 94 03 04 	jmp	0x806	; 0x806 <__fp_zero>
 6ce:	67 2f       	mov	r22, r23
 6d0:	78 2f       	mov	r23, r24
 6d2:	88 27       	eor	r24, r24
 6d4:	b8 5f       	subi	r27, 0xF8	; 248
 6d6:	39 f0       	breq	.+14     	; 0x6e6 <__fixunssfsi+0x4c>
 6d8:	b9 3f       	cpi	r27, 0xF9	; 249
 6da:	cc f3       	brlt	.-14     	; 0x6ce <__fixunssfsi+0x34>
 6dc:	86 95       	lsr	r24
 6de:	77 95       	ror	r23
 6e0:	67 95       	ror	r22
 6e2:	b3 95       	inc	r27
 6e4:	d9 f7       	brne	.-10     	; 0x6dc <__fixunssfsi+0x42>
 6e6:	3e f4       	brtc	.+14     	; 0x6f6 <__fixunssfsi+0x5c>
 6e8:	90 95       	com	r25
 6ea:	80 95       	com	r24
 6ec:	70 95       	com	r23
 6ee:	61 95       	neg	r22
 6f0:	7f 4f       	sbci	r23, 0xFF	; 255
 6f2:	8f 4f       	sbci	r24, 0xFF	; 255
 6f4:	9f 4f       	sbci	r25, 0xFF	; 255
 6f6:	08 95       	ret

000006f8 <__floatunsisf>:
 6f8:	e8 94       	clt
 6fa:	09 c0       	rjmp	.+18     	; 0x70e <__floatsisf+0x12>

000006fc <__floatsisf>:
 6fc:	97 fb       	bst	r25, 7
 6fe:	3e f4       	brtc	.+14     	; 0x70e <__floatsisf+0x12>
 700:	90 95       	com	r25
 702:	80 95       	com	r24
 704:	70 95       	com	r23
 706:	61 95       	neg	r22
 708:	7f 4f       	sbci	r23, 0xFF	; 255
 70a:	8f 4f       	sbci	r24, 0xFF	; 255
 70c:	9f 4f       	sbci	r25, 0xFF	; 255
 70e:	99 23       	and	r25, r25
 710:	a9 f0       	breq	.+42     	; 0x73c <__floatsisf+0x40>
 712:	f9 2f       	mov	r31, r25
 714:	96 e9       	ldi	r25, 0x96	; 150
 716:	bb 27       	eor	r27, r27
 718:	93 95       	inc	r25
 71a:	f6 95       	lsr	r31
 71c:	87 95       	ror	r24
 71e:	77 95       	ror	r23
 720:	67 95       	ror	r22
 722:	b7 95       	ror	r27
 724:	f1 11       	cpse	r31, r1
 726:	f8 cf       	rjmp	.-16     	; 0x718 <__floatsisf+0x1c>
 728:	fa f4       	brpl	.+62     	; 0x768 <__floatsisf+0x6c>
 72a:	bb 0f       	add	r27, r27
 72c:	11 f4       	brne	.+4      	; 0x732 <__floatsisf+0x36>
 72e:	60 ff       	sbrs	r22, 0
 730:	1b c0       	rjmp	.+54     	; 0x768 <__floatsisf+0x6c>
 732:	6f 5f       	subi	r22, 0xFF	; 255
 734:	7f 4f       	sbci	r23, 0xFF	; 255
 736:	8f 4f       	sbci	r24, 0xFF	; 255
 738:	9f 4f       	sbci	r25, 0xFF	; 255
 73a:	16 c0       	rjmp	.+44     	; 0x768 <__floatsisf+0x6c>
 73c:	88 23       	and	r24, r24
 73e:	11 f0       	breq	.+4      	; 0x744 <__floatsisf+0x48>
 740:	96 e9       	ldi	r25, 0x96	; 150
 742:	11 c0       	rjmp	.+34     	; 0x766 <__floatsisf+0x6a>
 744:	77 23       	and	r23, r23
 746:	21 f0       	breq	.+8      	; 0x750 <__floatsisf+0x54>
 748:	9e e8       	ldi	r25, 0x8E	; 142
 74a:	87 2f       	mov	r24, r23
 74c:	76 2f       	mov	r23, r22
 74e:	05 c0       	rjmp	.+10     	; 0x75a <__floatsisf+0x5e>
 750:	66 23       	and	r22, r22
 752:	71 f0       	breq	.+28     	; 0x770 <__floatsisf+0x74>
 754:	96 e8       	ldi	r25, 0x86	; 134
 756:	86 2f       	mov	r24, r22
 758:	70 e0       	ldi	r23, 0x00	; 0
 75a:	60 e0       	ldi	r22, 0x00	; 0
 75c:	2a f0       	brmi	.+10     	; 0x768 <__floatsisf+0x6c>
 75e:	9a 95       	dec	r25
 760:	66 0f       	add	r22, r22
 762:	77 1f       	adc	r23, r23
 764:	88 1f       	adc	r24, r24
 766:	da f7       	brpl	.-10     	; 0x75e <__floatsisf+0x62>
 768:	88 0f       	add	r24, r24
 76a:	96 95       	lsr	r25
 76c:	87 95       	ror	r24
 76e:	97 f9       	bld	r25, 7
 770:	08 95       	ret

00000772 <__fp_inf>:
 772:	97 f9       	bld	r25, 7
 774:	9f 67       	ori	r25, 0x7F	; 127
 776:	80 e8       	ldi	r24, 0x80	; 128
 778:	70 e0       	ldi	r23, 0x00	; 0
 77a:	60 e0       	ldi	r22, 0x00	; 0
 77c:	08 95       	ret

0000077e <__fp_nan>:
 77e:	9f ef       	ldi	r25, 0xFF	; 255
 780:	80 ec       	ldi	r24, 0xC0	; 192
 782:	08 95       	ret

00000784 <__fp_pscA>:
 784:	00 24       	eor	r0, r0
 786:	0a 94       	dec	r0
 788:	16 16       	cp	r1, r22
 78a:	17 06       	cpc	r1, r23
 78c:	18 06       	cpc	r1, r24
 78e:	09 06       	cpc	r0, r25
 790:	08 95       	ret

00000792 <__fp_pscB>:
 792:	00 24       	eor	r0, r0
 794:	0a 94       	dec	r0
 796:	12 16       	cp	r1, r18
 798:	13 06       	cpc	r1, r19
 79a:	14 06       	cpc	r1, r20
 79c:	05 06       	cpc	r0, r21
 79e:	08 95       	ret

000007a0 <__fp_round>:
 7a0:	09 2e       	mov	r0, r25
 7a2:	03 94       	inc	r0
 7a4:	00 0c       	add	r0, r0
 7a6:	11 f4       	brne	.+4      	; 0x7ac <__fp_round+0xc>
 7a8:	88 23       	and	r24, r24
 7aa:	52 f0       	brmi	.+20     	; 0x7c0 <__fp_round+0x20>
 7ac:	bb 0f       	add	r27, r27
 7ae:	40 f4       	brcc	.+16     	; 0x7c0 <__fp_round+0x20>
 7b0:	bf 2b       	or	r27, r31
 7b2:	11 f4       	brne	.+4      	; 0x7b8 <__fp_round+0x18>
 7b4:	60 ff       	sbrs	r22, 0
 7b6:	04 c0       	rjmp	.+8      	; 0x7c0 <__fp_round+0x20>
 7b8:	6f 5f       	subi	r22, 0xFF	; 255
 7ba:	7f 4f       	sbci	r23, 0xFF	; 255
 7bc:	8f 4f       	sbci	r24, 0xFF	; 255
 7be:	9f 4f       	sbci	r25, 0xFF	; 255
 7c0:	08 95       	ret

000007c2 <__fp_split3>:
 7c2:	57 fd       	sbrc	r21, 7
 7c4:	90 58       	subi	r25, 0x80	; 128
 7c6:	44 0f       	add	r20, r20
 7c8:	55 1f       	adc	r21, r21
 7ca:	59 f0       	breq	.+22     	; 0x7e2 <__fp_splitA+0x10>
 7cc:	5f 3f       	cpi	r21, 0xFF	; 255
 7ce:	71 f0       	breq	.+28     	; 0x7ec <__fp_splitA+0x1a>
 7d0:	47 95       	ror	r20

000007d2 <__fp_splitA>:
 7d2:	88 0f       	add	r24, r24
 7d4:	97 fb       	bst	r25, 7
 7d6:	99 1f       	adc	r25, r25
 7d8:	61 f0       	breq	.+24     	; 0x7f2 <__fp_splitA+0x20>
 7da:	9f 3f       	cpi	r25, 0xFF	; 255
 7dc:	79 f0       	breq	.+30     	; 0x7fc <__fp_splitA+0x2a>
 7de:	87 95       	ror	r24
 7e0:	08 95       	ret
 7e2:	12 16       	cp	r1, r18
 7e4:	13 06       	cpc	r1, r19
 7e6:	14 06       	cpc	r1, r20
 7e8:	55 1f       	adc	r21, r21
 7ea:	f2 cf       	rjmp	.-28     	; 0x7d0 <__fp_split3+0xe>
 7ec:	46 95       	lsr	r20
 7ee:	f1 df       	rcall	.-30     	; 0x7d2 <__fp_splitA>
 7f0:	08 c0       	rjmp	.+16     	; 0x802 <__fp_splitA+0x30>
 7f2:	16 16       	cp	r1, r22
 7f4:	17 06       	cpc	r1, r23
 7f6:	18 06       	cpc	r1, r24
 7f8:	99 1f       	adc	r25, r25
 7fa:	f1 cf       	rjmp	.-30     	; 0x7de <__fp_splitA+0xc>
 7fc:	86 95       	lsr	r24
 7fe:	71 05       	cpc	r23, r1
 800:	61 05       	cpc	r22, r1
 802:	08 94       	sec
 804:	08 95       	ret

00000806 <__fp_zero>:
 806:	e8 94       	clt

00000808 <__fp_szero>:
 808:	bb 27       	eor	r27, r27
 80a:	66 27       	eor	r22, r22
 80c:	77 27       	eor	r23, r23
 80e:	cb 01       	movw	r24, r22
 810:	97 f9       	bld	r25, 7
 812:	08 95       	ret

00000814 <__mulsf3>:
 814:	0e 94 1d 04 	call	0x83a	; 0x83a <__mulsf3x>
 818:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__fp_round>
 81c:	0e 94 c2 03 	call	0x784	; 0x784 <__fp_pscA>
 820:	38 f0       	brcs	.+14     	; 0x830 <__mulsf3+0x1c>
 822:	0e 94 c9 03 	call	0x792	; 0x792 <__fp_pscB>
 826:	20 f0       	brcs	.+8      	; 0x830 <__mulsf3+0x1c>
 828:	95 23       	and	r25, r21
 82a:	11 f0       	breq	.+4      	; 0x830 <__mulsf3+0x1c>
 82c:	0c 94 b9 03 	jmp	0x772	; 0x772 <__fp_inf>
 830:	0c 94 bf 03 	jmp	0x77e	; 0x77e <__fp_nan>
 834:	11 24       	eor	r1, r1
 836:	0c 94 04 04 	jmp	0x808	; 0x808 <__fp_szero>

0000083a <__mulsf3x>:
 83a:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__fp_split3>
 83e:	70 f3       	brcs	.-36     	; 0x81c <__mulsf3+0x8>

00000840 <__mulsf3_pse>:
 840:	95 9f       	mul	r25, r21
 842:	c1 f3       	breq	.-16     	; 0x834 <__mulsf3+0x20>
 844:	95 0f       	add	r25, r21
 846:	50 e0       	ldi	r21, 0x00	; 0
 848:	55 1f       	adc	r21, r21
 84a:	62 9f       	mul	r22, r18
 84c:	f0 01       	movw	r30, r0
 84e:	72 9f       	mul	r23, r18
 850:	bb 27       	eor	r27, r27
 852:	f0 0d       	add	r31, r0
 854:	b1 1d       	adc	r27, r1
 856:	63 9f       	mul	r22, r19
 858:	aa 27       	eor	r26, r26
 85a:	f0 0d       	add	r31, r0
 85c:	b1 1d       	adc	r27, r1
 85e:	aa 1f       	adc	r26, r26
 860:	64 9f       	mul	r22, r20
 862:	66 27       	eor	r22, r22
 864:	b0 0d       	add	r27, r0
 866:	a1 1d       	adc	r26, r1
 868:	66 1f       	adc	r22, r22
 86a:	82 9f       	mul	r24, r18
 86c:	22 27       	eor	r18, r18
 86e:	b0 0d       	add	r27, r0
 870:	a1 1d       	adc	r26, r1
 872:	62 1f       	adc	r22, r18
 874:	73 9f       	mul	r23, r19
 876:	b0 0d       	add	r27, r0
 878:	a1 1d       	adc	r26, r1
 87a:	62 1f       	adc	r22, r18
 87c:	83 9f       	mul	r24, r19
 87e:	a0 0d       	add	r26, r0
 880:	61 1d       	adc	r22, r1
 882:	22 1f       	adc	r18, r18
 884:	74 9f       	mul	r23, r20
 886:	33 27       	eor	r19, r19
 888:	a0 0d       	add	r26, r0
 88a:	61 1d       	adc	r22, r1
 88c:	23 1f       	adc	r18, r19
 88e:	84 9f       	mul	r24, r20
 890:	60 0d       	add	r22, r0
 892:	21 1d       	adc	r18, r1
 894:	82 2f       	mov	r24, r18
 896:	76 2f       	mov	r23, r22
 898:	6a 2f       	mov	r22, r26
 89a:	11 24       	eor	r1, r1
 89c:	9f 57       	subi	r25, 0x7F	; 127
 89e:	50 40       	sbci	r21, 0x00	; 0
 8a0:	9a f0       	brmi	.+38     	; 0x8c8 <__mulsf3_pse+0x88>
 8a2:	f1 f0       	breq	.+60     	; 0x8e0 <__mulsf3_pse+0xa0>
 8a4:	88 23       	and	r24, r24
 8a6:	4a f0       	brmi	.+18     	; 0x8ba <__mulsf3_pse+0x7a>
 8a8:	ee 0f       	add	r30, r30
 8aa:	ff 1f       	adc	r31, r31
 8ac:	bb 1f       	adc	r27, r27
 8ae:	66 1f       	adc	r22, r22
 8b0:	77 1f       	adc	r23, r23
 8b2:	88 1f       	adc	r24, r24
 8b4:	91 50       	subi	r25, 0x01	; 1
 8b6:	50 40       	sbci	r21, 0x00	; 0
 8b8:	a9 f7       	brne	.-22     	; 0x8a4 <__mulsf3_pse+0x64>
 8ba:	9e 3f       	cpi	r25, 0xFE	; 254
 8bc:	51 05       	cpc	r21, r1
 8be:	80 f0       	brcs	.+32     	; 0x8e0 <__mulsf3_pse+0xa0>
 8c0:	0c 94 b9 03 	jmp	0x772	; 0x772 <__fp_inf>
 8c4:	0c 94 04 04 	jmp	0x808	; 0x808 <__fp_szero>
 8c8:	5f 3f       	cpi	r21, 0xFF	; 255
 8ca:	e4 f3       	brlt	.-8      	; 0x8c4 <__mulsf3_pse+0x84>
 8cc:	98 3e       	cpi	r25, 0xE8	; 232
 8ce:	d4 f3       	brlt	.-12     	; 0x8c4 <__mulsf3_pse+0x84>
 8d0:	86 95       	lsr	r24
 8d2:	77 95       	ror	r23
 8d4:	67 95       	ror	r22
 8d6:	b7 95       	ror	r27
 8d8:	f7 95       	ror	r31
 8da:	e7 95       	ror	r30
 8dc:	9f 5f       	subi	r25, 0xFF	; 255
 8de:	c1 f7       	brne	.-16     	; 0x8d0 <__mulsf3_pse+0x90>
 8e0:	fe 2b       	or	r31, r30
 8e2:	88 0f       	add	r24, r24
 8e4:	91 1d       	adc	r25, r1
 8e6:	96 95       	lsr	r25
 8e8:	87 95       	ror	r24
 8ea:	97 f9       	bld	r25, 7
 8ec:	08 95       	ret

000008ee <__muluhisi3>:
 8ee:	0e 94 82 04 	call	0x904	; 0x904 <__umulhisi3>
 8f2:	a5 9f       	mul	r26, r21
 8f4:	90 0d       	add	r25, r0
 8f6:	b4 9f       	mul	r27, r20
 8f8:	90 0d       	add	r25, r0
 8fa:	a4 9f       	mul	r26, r20
 8fc:	80 0d       	add	r24, r0
 8fe:	91 1d       	adc	r25, r1
 900:	11 24       	eor	r1, r1
 902:	08 95       	ret

00000904 <__umulhisi3>:
 904:	a2 9f       	mul	r26, r18
 906:	b0 01       	movw	r22, r0
 908:	b3 9f       	mul	r27, r19
 90a:	c0 01       	movw	r24, r0
 90c:	a3 9f       	mul	r26, r19
 90e:	70 0d       	add	r23, r0
 910:	81 1d       	adc	r24, r1
 912:	11 24       	eor	r1, r1
 914:	91 1d       	adc	r25, r1
 916:	b2 9f       	mul	r27, r18
 918:	70 0d       	add	r23, r0
 91a:	81 1d       	adc	r24, r1
 91c:	11 24       	eor	r1, r1
 91e:	91 1d       	adc	r25, r1
 920:	08 95       	ret

00000922 <_exit>:
 922:	f8 94       	cli

00000924 <__stop_program>:
 924:	ff cf       	rjmp	.-2      	; 0x924 <__stop_program>
