
Controllo motori (Nano).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  000015c0  00001654  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000015c0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000146  00800108  00800108  0000165c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000165c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000168c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  000016cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001baa  00000000  00000000  000017e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bc7  00000000  00000000  0000338e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a21  00000000  00000000  00003f55  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000043c  00000000  00000000  00004978  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000703  00000000  00000000  00004db4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000de0  00000000  00000000  000054b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00006297  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
       4:	0c 94 21 01 	jmp	0x242	; 0x242 <__vector_1>
       8:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
       c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      10:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      14:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      18:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__vector_7>
      20:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      24:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      28:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      2c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      30:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      34:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      38:	0c 94 fc 00 	jmp	0x1f8	; 0x1f8 <__vector_14>
      3c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      40:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      44:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      48:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      4c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      50:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      54:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      58:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      5c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      60:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      64:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <Serial_Send_Int+0x100>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__ctors_end>:
      ea:	11 24       	eor	r1, r1
      ec:	1f be       	out	0x3f, r1	; 63
      ee:	cf ef       	ldi	r28, 0xFF	; 255
      f0:	d8 e0       	ldi	r29, 0x08	; 8
      f2:	de bf       	out	0x3e, r29	; 62
      f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_copy_data>:
      f6:	11 e0       	ldi	r17, 0x01	; 1
      f8:	a0 e0       	ldi	r26, 0x00	; 0
      fa:	b1 e0       	ldi	r27, 0x01	; 1
      fc:	e0 ec       	ldi	r30, 0xC0	; 192
      fe:	f5 e1       	ldi	r31, 0x15	; 21
     100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x10>
     102:	05 90       	lpm	r0, Z+
     104:	0d 92       	st	X+, r0
     106:	a8 30       	cpi	r26, 0x08	; 8
     108:	b1 07       	cpc	r27, r17
     10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0xc>

0000010c <__do_clear_bss>:
     10c:	22 e0       	ldi	r18, 0x02	; 2
     10e:	a8 e0       	ldi	r26, 0x08	; 8
     110:	b1 e0       	ldi	r27, 0x01	; 1
     112:	01 c0       	rjmp	.+2      	; 0x116 <.do_clear_bss_start>

00000114 <.do_clear_bss_loop>:
     114:	1d 92       	st	X+, r1

00000116 <.do_clear_bss_start>:
     116:	ae 34       	cpi	r26, 0x4E	; 78
     118:	b2 07       	cpc	r27, r18
     11a:	e1 f7       	brne	.-8      	; 0x114 <.do_clear_bss_loop>
     11c:	0e 94 34 02 	call	0x468	; 0x468 <main>
     120:	0c 94 de 0a 	jmp	0x15bc	; 0x15bc <_exit>

00000124 <__bad_interrupt>:
     124:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000128 <InitADC>:
#include "ADC.h"

/*-------------ADC-----------------*/
void InitADC(void){
	
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));    //16Mhz/128 = 125Khz the ADC reference clock
     128:	ea e7       	ldi	r30, 0x7A	; 122
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	80 81       	ld	r24, Z
     12e:	87 60       	ori	r24, 0x07	; 7
     130:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);                //Voltage reference from Avcc (5v)
     132:	ac e7       	ldi	r26, 0x7C	; 124
     134:	b0 e0       	ldi	r27, 0x00	; 0
     136:	8c 91       	ld	r24, X
     138:	80 64       	ori	r24, 0x40	; 64
     13a:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADEN);                //Turn on ADC
     13c:	80 81       	ld	r24, Z
     13e:	80 68       	ori	r24, 0x80	; 128
     140:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);                //Do an initial conversion because this one is the slowest and to ensure that everything is up and running
     142:	80 81       	ld	r24, Z
     144:	80 64       	ori	r24, 0x40	; 64
     146:	80 83       	st	Z, r24
     148:	08 95       	ret

0000014a <StartADC>:
	
}
int StartADC(uint8_t channel){
     14a:	22 e0       	ldi	r18, 0x02	; 2
     14c:	30 e0       	ldi	r19, 0x00	; 0
	for (int i=0;i<2;i++)
	{
		ADMUX &= 0xF0;                    //Clear the older channel that was read
     14e:	ac e7       	ldi	r26, 0x7C	; 124
     150:	b0 e0       	ldi	r27, 0x00	; 0
		if(channel<=7){
			ADMUX |= channel;                //Defines the new ADC channel to be read
		}
		else{
			ADMUX |= (channel & 0b00000111);
     152:	48 2f       	mov	r20, r24
     154:	47 70       	andi	r20, 0x07	; 7
		}
		
		ADCSRA |= (1<<ADSC);                //Starts a new conversion
     156:	ea e7       	ldi	r30, 0x7A	; 122
     158:	f0 e0       	ldi	r31, 0x00	; 0
	
}
int StartADC(uint8_t channel){
	for (int i=0;i<2;i++)
	{
		ADMUX &= 0xF0;                    //Clear the older channel that was read
     15a:	9c 91       	ld	r25, X
     15c:	90 7f       	andi	r25, 0xF0	; 240
     15e:	9c 93       	st	X, r25
		if(channel<=7){
     160:	88 30       	cpi	r24, 0x08	; 8
     162:	20 f4       	brcc	.+8      	; 0x16c <StartADC+0x22>
			ADMUX |= channel;                //Defines the new ADC channel to be read
     164:	9c 91       	ld	r25, X
     166:	98 2b       	or	r25, r24
     168:	9c 93       	st	X, r25
     16a:	03 c0       	rjmp	.+6      	; 0x172 <StartADC+0x28>
		}
		else{
			ADMUX |= (channel & 0b00000111);
     16c:	9c 91       	ld	r25, X
     16e:	94 2b       	or	r25, r20
     170:	9c 93       	st	X, r25
		}
		
		ADCSRA |= (1<<ADSC);                //Starts a new conversion
     172:	90 81       	ld	r25, Z
     174:	90 64       	ori	r25, 0x40	; 64
     176:	90 83       	st	Z, r25
		while(ADCSRA & (1<<ADSC));            //Wait until the conversion is done
     178:	90 81       	ld	r25, Z
     17a:	96 fd       	sbrc	r25, 6
     17c:	fd cf       	rjmp	.-6      	; 0x178 <StartADC+0x2e>
     17e:	21 50       	subi	r18, 0x01	; 1
     180:	31 09       	sbc	r19, r1
	ADCSRA |= (1<<ADEN);                //Turn on ADC
	ADCSRA |= (1<<ADSC);                //Do an initial conversion because this one is the slowest and to ensure that everything is up and running
	
}
int StartADC(uint8_t channel){
	for (int i=0;i<2;i++)
     182:	59 f7       	brne	.-42     	; 0x15a <StartADC+0x10>
		}
		
		ADCSRA |= (1<<ADSC);                //Starts a new conversion
		while(ADCSRA & (1<<ADSC));            //Wait until the conversion is done
	}
	return ADCW;                    //Returns the ADC value of the chosen channel
     184:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     188:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
}
     18c:	08 95       	ret

0000018e <InitISR>:

volatile unsigned long topRaggiunti = 0;
volatile unsigned long ciao = 0;

void InitISR(void){
	PORTD|=(1<<PD3);
     18e:	5b 9a       	sbi	0x0b, 3	; 11
	EIMSK|=(1<<INT0)|(1<<INT1);
     190:	8d b3       	in	r24, 0x1d	; 29
     192:	83 60       	ori	r24, 0x03	; 3
     194:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC01)|(1<<ISC00)|(1<<ISC11)|(1<<ISC10);
     196:	e9 e6       	ldi	r30, 0x69	; 105
     198:	f0 e0       	ldi	r31, 0x00	; 0
     19a:	80 81       	ld	r24, Z
     19c:	8f 60       	ori	r24, 0x0F	; 15
     19e:	80 83       	st	Z, r24
	sei();
     1a0:	78 94       	sei
     1a2:	08 95       	ret

000001a4 <__vector_7>:
}


	
ISR(TIMER2_COMPA_vect){
     1a4:	1f 92       	push	r1
     1a6:	0f 92       	push	r0
     1a8:	0f b6       	in	r0, 0x3f	; 63
     1aa:	0f 92       	push	r0
     1ac:	11 24       	eor	r1, r1
     1ae:	2f 93       	push	r18
     1b0:	3f 93       	push	r19
     1b2:	4f 93       	push	r20
     1b4:	5f 93       	push	r21
     1b6:	6f 93       	push	r22
     1b8:	7f 93       	push	r23
     1ba:	8f 93       	push	r24
     1bc:	9f 93       	push	r25
     1be:	af 93       	push	r26
     1c0:	bf 93       	push	r27
     1c2:	ef 93       	push	r30
     1c4:	ff 93       	push	r31
	OCR1A = CalculatePID(1);
     1c6:	81 e0       	ldi	r24, 0x01	; 1
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	0e 94 b5 02 	call	0x56a	; 0x56a <CalculatePID>
     1ce:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     1d2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	//dutyMDxA = CalculatePID(MDxA);
	//dutyMSxD = CalculatePID(MSxD);
	//dutyMDxD = CalculatePID(MDxD);

}
     1d6:	ff 91       	pop	r31
     1d8:	ef 91       	pop	r30
     1da:	bf 91       	pop	r27
     1dc:	af 91       	pop	r26
     1de:	9f 91       	pop	r25
     1e0:	8f 91       	pop	r24
     1e2:	7f 91       	pop	r23
     1e4:	6f 91       	pop	r22
     1e6:	5f 91       	pop	r21
     1e8:	4f 91       	pop	r20
     1ea:	3f 91       	pop	r19
     1ec:	2f 91       	pop	r18
     1ee:	0f 90       	pop	r0
     1f0:	0f be       	out	0x3f, r0	; 63
     1f2:	0f 90       	pop	r0
     1f4:	1f 90       	pop	r1
     1f6:	18 95       	reti

000001f8 <__vector_14>:

ISR(TIMER0_COMPA_vect){
     1f8:	1f 92       	push	r1
     1fa:	0f 92       	push	r0
     1fc:	0f b6       	in	r0, 0x3f	; 63
     1fe:	0f 92       	push	r0
     200:	11 24       	eor	r1, r1
     202:	8f 93       	push	r24
     204:	9f 93       	push	r25
     206:	af 93       	push	r26
     208:	bf 93       	push	r27
	topRaggiunti++;	
     20a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
     20e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
     212:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <__data_end+0x2>
     216:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <__data_end+0x3>
     21a:	01 96       	adiw	r24, 0x01	; 1
     21c:	a1 1d       	adc	r26, r1
     21e:	b1 1d       	adc	r27, r1
     220:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>
     224:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x1>
     228:	a0 93 0a 01 	sts	0x010A, r26	; 0x80010a <__data_end+0x2>
     22c:	b0 93 0b 01 	sts	0x010B, r27	; 0x80010b <__data_end+0x3>
}
     230:	bf 91       	pop	r27
     232:	af 91       	pop	r26
     234:	9f 91       	pop	r25
     236:	8f 91       	pop	r24
     238:	0f 90       	pop	r0
     23a:	0f be       	out	0x3f, r0	; 63
     23c:	0f 90       	pop	r0
     23e:	1f 90       	pop	r1
     240:	18 95       	reti

00000242 <__vector_1>:

ISR(INT0_vect){	
     242:	1f 92       	push	r1
     244:	0f 92       	push	r0
     246:	0f b6       	in	r0, 0x3f	; 63
     248:	0f 92       	push	r0
     24a:	11 24       	eor	r1, r1
     24c:	4f 92       	push	r4
     24e:	5f 92       	push	r5
     250:	6f 92       	push	r6
     252:	7f 92       	push	r7
     254:	8f 92       	push	r8
     256:	9f 92       	push	r9
     258:	af 92       	push	r10
     25a:	bf 92       	push	r11
     25c:	cf 92       	push	r12
     25e:	df 92       	push	r13
     260:	ef 92       	push	r14
     262:	ff 92       	push	r15
     264:	2f 93       	push	r18
     266:	3f 93       	push	r19
     268:	4f 93       	push	r20
     26a:	5f 93       	push	r21
     26c:	6f 93       	push	r22
     26e:	7f 93       	push	r23
     270:	8f 93       	push	r24
     272:	9f 93       	push	r25
     274:	af 93       	push	r26
     276:	bf 93       	push	r27
     278:	ef 93       	push	r30
     27a:	ff 93       	push	r31
	tImp1 = TCNT0;
     27c:	86 b5       	in	r24, 0x26	; 38
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	a0 e0       	ldi	r26, 0x00	; 0
     282:	b0 e0       	ldi	r27, 0x00	; 0
     284:	80 93 60 01 	sts	0x0160, r24	; 0x800160 <tImp1>
     288:	90 93 61 01 	sts	0x0161, r25	; 0x800161 <tImp1+0x1>
     28c:	a0 93 62 01 	sts	0x0162, r26	; 0x800162 <tImp1+0x2>
     290:	b0 93 63 01 	sts	0x0163, r27	; 0x800163 <tImp1+0x3>
	topRaggiuntiProv1=topRaggiunti;
     294:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
     298:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
     29c:	a0 91 0a 01 	lds	r26, 0x010A	; 0x80010a <__data_end+0x2>
     2a0:	b0 91 0b 01 	lds	r27, 0x010B	; 0x80010b <__data_end+0x3>
     2a4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <topRaggiuntiProv1>
     2a8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <topRaggiuntiProv1+0x1>
     2ac:	a0 93 12 01 	sts	0x0112, r26	; 0x800112 <topRaggiuntiProv1+0x2>
     2b0:	b0 93 13 01 	sts	0x0113, r27	; 0x800113 <topRaggiuntiProv1+0x3>
	if(topRaggiuntiProv1==vTopRaggiunti1){
     2b4:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <topRaggiuntiProv1>
     2b8:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <topRaggiuntiProv1+0x1>
     2bc:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <topRaggiuntiProv1+0x2>
     2c0:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <topRaggiuntiProv1+0x3>
     2c4:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <vTopRaggiunti1>
     2c8:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <vTopRaggiunti1+0x1>
     2cc:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <vTopRaggiunti1+0x2>
     2d0:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <vTopRaggiunti1+0x3>
     2d4:	48 17       	cp	r20, r24
     2d6:	59 07       	cpc	r21, r25
     2d8:	6a 07       	cpc	r22, r26
     2da:	7b 07       	cpc	r23, r27
     2dc:	e9 f4       	brne	.+58     	; 0x318 <__vector_1+0xd6>
		difftImp1 = tImp1 - vtImp1;
     2de:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <tImp1>
     2e2:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <tImp1+0x1>
     2e6:	a0 91 62 01 	lds	r26, 0x0162	; 0x800162 <tImp1+0x2>
     2ea:	b0 91 63 01 	lds	r27, 0x0163	; 0x800163 <tImp1+0x3>
     2ee:	40 91 38 01 	lds	r20, 0x0138	; 0x800138 <vtImp1>
     2f2:	50 91 39 01 	lds	r21, 0x0139	; 0x800139 <vtImp1+0x1>
     2f6:	60 91 3a 01 	lds	r22, 0x013A	; 0x80013a <vtImp1+0x2>
     2fa:	70 91 3b 01 	lds	r23, 0x013B	; 0x80013b <vtImp1+0x3>
     2fe:	84 1b       	sub	r24, r20
     300:	95 0b       	sbc	r25, r21
     302:	a6 0b       	sbc	r26, r22
     304:	b7 0b       	sbc	r27, r23
     306:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <difftImp1>
     30a:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <difftImp1+0x1>
     30e:	a0 93 76 01 	sts	0x0176, r26	; 0x800176 <difftImp1+0x2>
     312:	b0 93 77 01 	sts	0x0177, r27	; 0x800177 <difftImp1+0x3>
     316:	4b c0       	rjmp	.+150    	; 0x3ae <__vector_1+0x16c>
	}
	else{
		difftImp1 = (OCR0A - vtImp1) + (tImp1) + ((topRaggiuntiProv1-vTopRaggiunti1-1)*OCR0A);
     318:	e7 b5       	in	r30, 0x27	; 39
     31a:	80 90 38 01 	lds	r8, 0x0138	; 0x800138 <vtImp1>
     31e:	90 90 39 01 	lds	r9, 0x0139	; 0x800139 <vtImp1+0x1>
     322:	a0 90 3a 01 	lds	r10, 0x013A	; 0x80013a <vtImp1+0x2>
     326:	b0 90 3b 01 	lds	r11, 0x013B	; 0x80013b <vtImp1+0x3>
     32a:	c0 90 60 01 	lds	r12, 0x0160	; 0x800160 <tImp1>
     32e:	d0 90 61 01 	lds	r13, 0x0161	; 0x800161 <tImp1+0x1>
     332:	e0 90 62 01 	lds	r14, 0x0162	; 0x800162 <tImp1+0x2>
     336:	f0 90 63 01 	lds	r15, 0x0163	; 0x800163 <tImp1+0x3>
     33a:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <topRaggiuntiProv1>
     33e:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <topRaggiuntiProv1+0x1>
     342:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <topRaggiuntiProv1+0x2>
     346:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <topRaggiuntiProv1+0x3>
     34a:	40 90 a0 01 	lds	r4, 0x01A0	; 0x8001a0 <vTopRaggiunti1>
     34e:	50 90 a1 01 	lds	r5, 0x01A1	; 0x8001a1 <vTopRaggiunti1+0x1>
     352:	60 90 a2 01 	lds	r6, 0x01A2	; 0x8001a2 <vTopRaggiunti1+0x2>
     356:	70 90 a3 01 	lds	r7, 0x01A3	; 0x8001a3 <vTopRaggiunti1+0x3>
     35a:	a7 b5       	in	r26, 0x27	; 39
     35c:	41 50       	subi	r20, 0x01	; 1
     35e:	51 09       	sbc	r21, r1
     360:	61 09       	sbc	r22, r1
     362:	71 09       	sbc	r23, r1
     364:	9a 01       	movw	r18, r20
     366:	ab 01       	movw	r20, r22
     368:	24 19       	sub	r18, r4
     36a:	35 09       	sbc	r19, r5
     36c:	46 09       	sbc	r20, r6
     36e:	57 09       	sbc	r21, r7
     370:	b0 e0       	ldi	r27, 0x00	; 0
     372:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <__muluhisi3>
     376:	4e 2e       	mov	r4, r30
     378:	51 2c       	mov	r5, r1
     37a:	61 2c       	mov	r6, r1
     37c:	71 2c       	mov	r7, r1
     37e:	a3 01       	movw	r20, r6
     380:	92 01       	movw	r18, r4
     382:	28 19       	sub	r18, r8
     384:	39 09       	sbc	r19, r9
     386:	4a 09       	sbc	r20, r10
     388:	5b 09       	sbc	r21, r11
     38a:	c2 0e       	add	r12, r18
     38c:	d3 1e       	adc	r13, r19
     38e:	e4 1e       	adc	r14, r20
     390:	f5 1e       	adc	r15, r21
     392:	dc 01       	movw	r26, r24
     394:	cb 01       	movw	r24, r22
     396:	8c 0d       	add	r24, r12
     398:	9d 1d       	adc	r25, r13
     39a:	ae 1d       	adc	r26, r14
     39c:	bf 1d       	adc	r27, r15
     39e:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <difftImp1>
     3a2:	90 93 75 01 	sts	0x0175, r25	; 0x800175 <difftImp1+0x1>
     3a6:	a0 93 76 01 	sts	0x0176, r26	; 0x800176 <difftImp1+0x2>
     3aa:	b0 93 77 01 	sts	0x0177, r27	; 0x800177 <difftImp1+0x3>
		
	}
	speed[1] = 250000.0 / (622.0*difftImp1);
     3ae:	60 91 74 01 	lds	r22, 0x0174	; 0x800174 <difftImp1>
     3b2:	70 91 75 01 	lds	r23, 0x0175	; 0x800175 <difftImp1+0x1>
     3b6:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <difftImp1+0x2>
     3ba:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <difftImp1+0x3>
     3be:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <__floatunsisf>
     3c2:	20 e0       	ldi	r18, 0x00	; 0
     3c4:	30 e8       	ldi	r19, 0x80	; 128
     3c6:	4b e1       	ldi	r20, 0x1B	; 27
     3c8:	54 e4       	ldi	r21, 0x44	; 68
     3ca:	0e 94 fd 07 	call	0xffa	; 0xffa <__mulsf3>
     3ce:	9b 01       	movw	r18, r22
     3d0:	ac 01       	movw	r20, r24
     3d2:	60 e0       	ldi	r22, 0x00	; 0
     3d4:	74 e2       	ldi	r23, 0x24	; 36
     3d6:	84 e7       	ldi	r24, 0x74	; 116
     3d8:	98 e4       	ldi	r25, 0x48	; 72
     3da:	0e 94 3c 06 	call	0xc78	; 0xc78 <__divsf3>
     3de:	60 93 e0 01 	sts	0x01E0, r22	; 0x8001e0 <speed+0x4>
     3e2:	70 93 e1 01 	sts	0x01E1, r23	; 0x8001e1 <speed+0x5>
     3e6:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <speed+0x6>
     3ea:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <speed+0x7>
	//Serial_Send("\t");
	//Serial_Send(difftImp1);
	//Serial_Send("\t");
	//Serial_Send_Int((int)(speed[1]*1000));
	//SerialN();
	vtImp1 = tImp1;
     3ee:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <tImp1>
     3f2:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <tImp1+0x1>
     3f6:	a0 91 62 01 	lds	r26, 0x0162	; 0x800162 <tImp1+0x2>
     3fa:	b0 91 63 01 	lds	r27, 0x0163	; 0x800163 <tImp1+0x3>
     3fe:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <vtImp1>
     402:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <vtImp1+0x1>
     406:	a0 93 3a 01 	sts	0x013A, r26	; 0x80013a <vtImp1+0x2>
     40a:	b0 93 3b 01 	sts	0x013B, r27	; 0x80013b <vtImp1+0x3>
	vTopRaggiunti1 = topRaggiuntiProv1;
     40e:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <topRaggiuntiProv1>
     412:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <topRaggiuntiProv1+0x1>
     416:	a0 91 12 01 	lds	r26, 0x0112	; 0x800112 <topRaggiuntiProv1+0x2>
     41a:	b0 91 13 01 	lds	r27, 0x0113	; 0x800113 <topRaggiuntiProv1+0x3>
     41e:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <vTopRaggiunti1>
     422:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <vTopRaggiunti1+0x1>
     426:	a0 93 a2 01 	sts	0x01A2, r26	; 0x8001a2 <vTopRaggiunti1+0x2>
     42a:	b0 93 a3 01 	sts	0x01A3, r27	; 0x8001a3 <vTopRaggiunti1+0x3>
}
     42e:	ff 91       	pop	r31
     430:	ef 91       	pop	r30
     432:	bf 91       	pop	r27
     434:	af 91       	pop	r26
     436:	9f 91       	pop	r25
     438:	8f 91       	pop	r24
     43a:	7f 91       	pop	r23
     43c:	6f 91       	pop	r22
     43e:	5f 91       	pop	r21
     440:	4f 91       	pop	r20
     442:	3f 91       	pop	r19
     444:	2f 91       	pop	r18
     446:	ff 90       	pop	r15
     448:	ef 90       	pop	r14
     44a:	df 90       	pop	r13
     44c:	cf 90       	pop	r12
     44e:	bf 90       	pop	r11
     450:	af 90       	pop	r10
     452:	9f 90       	pop	r9
     454:	8f 90       	pop	r8
     456:	7f 90       	pop	r7
     458:	6f 90       	pop	r6
     45a:	5f 90       	pop	r5
     45c:	4f 90       	pop	r4
     45e:	0f 90       	pop	r0
     460:	0f be       	out	0x3f, r0	; 63
     462:	0f 90       	pop	r0
     464:	1f 90       	pop	r1
     466:	18 95       	reti

00000468 <main>:
#include "ADC.h"
int main(void)
{
	
	//init_millis(F_CPU);
	Serial_Init();
     468:	0e 94 ad 03 	call	0x75a	; 0x75a <Serial_Init>
	InitADC();
     46c:	0e 94 94 00 	call	0x128	; 0x128 <InitADC>
	Serial_Send("xd");
     470:	80 e0       	ldi	r24, 0x00	; 0
     472:	91 e0       	ldi	r25, 0x01	; 1
     474:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <Serial_Send_String>
	SerialN();
     478:	0e 94 ef 04 	call	0x9de	; 0x9de <SerialN>
	InitPWM();
     47c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <InitPWM>
	InitISR();
     480:	0e 94 c7 00 	call	0x18e	; 0x18e <InitISR>
	DDRC=0;
     484:	17 b8       	out	0x07, r1	; 7
	DDRD=0;
     486:	1a b8       	out	0x0a, r1	; 10
	Kp=0;
     488:	10 92 f2 01 	sts	0x01F2, r1	; 0x8001f2 <Kp>
     48c:	10 92 f3 01 	sts	0x01F3, r1	; 0x8001f3 <Kp+0x1>
     490:	10 92 f4 01 	sts	0x01F4, r1	; 0x8001f4 <Kp+0x2>
     494:	10 92 f5 01 	sts	0x01F5, r1	; 0x8001f5 <Kp+0x3>
	Ki=0;
     498:	10 92 34 01 	sts	0x0134, r1	; 0x800134 <Ki>
     49c:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <Ki+0x1>
     4a0:	10 92 36 01 	sts	0x0136, r1	; 0x800136 <Ki+0x2>
     4a4:	10 92 37 01 	sts	0x0137, r1	; 0x800137 <Ki+0x3>
	Kd=0;
     4a8:	10 92 be 01 	sts	0x01BE, r1	; 0x8001be <Kd>
     4ac:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <Kd+0x1>
     4b0:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <Kd+0x2>
     4b4:	10 92 c1 01 	sts	0x01C1, r1	; 0x8001c1 <Kd+0x3>
    while (1) 
    {
		Kp=StartADC(PORTC0)+StartADC(PORTC1);
     4b8:	80 e0       	ldi	r24, 0x00	; 0
     4ba:	0e 94 a5 00 	call	0x14a	; 0x14a <StartADC>
     4be:	ec 01       	movw	r28, r24
     4c0:	81 e0       	ldi	r24, 0x01	; 1
     4c2:	0e 94 a5 00 	call	0x14a	; 0x14a <StartADC>
     4c6:	8c 0f       	add	r24, r28
     4c8:	9d 1f       	adc	r25, r29
     4ca:	bc 01       	movw	r22, r24
     4cc:	99 0f       	add	r25, r25
     4ce:	88 0b       	sbc	r24, r24
     4d0:	99 0b       	sbc	r25, r25
     4d2:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__floatsisf>
     4d6:	60 93 f2 01 	sts	0x01F2, r22	; 0x8001f2 <Kp>
     4da:	70 93 f3 01 	sts	0x01F3, r23	; 0x8001f3 <Kp+0x1>
     4de:	80 93 f4 01 	sts	0x01F4, r24	; 0x8001f4 <Kp+0x2>
     4e2:	90 93 f5 01 	sts	0x01F5, r25	; 0x8001f5 <Kp+0x3>
		Serial_Send(Kp);
     4e6:	0e 94 f6 04 	call	0x9ec	; 0x9ec <Serial_Send_Float>
		SerialN();
     4ea:	0e 94 ef 04 	call	0x9de	; 0x9de <SerialN>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4ee:	8f e3       	ldi	r24, 0x3F	; 63
     4f0:	9c e9       	ldi	r25, 0x9C	; 156
     4f2:	01 97       	sbiw	r24, 0x01	; 1
     4f4:	f1 f7       	brne	.-4      	; 0x4f2 <main+0x8a>
     4f6:	00 c0       	rjmp	.+0      	; 0x4f8 <main+0x90>
     4f8:	00 00       	nop
     4fa:	de cf       	rjmp	.-68     	; 0x4b8 <main+0x50>

000004fc <InitPWM>:
//#include "BNO.h"

/*-------------------PWM-------------------*/
//Inizializzazione PWM
void InitPWM(void){
	TCCR1A|=(1<<WGM10)|(1<<WGM11)|(1<<COM1A1)|(1<<COM1B1);								//PWM 10 bit, non-inverting mode, PRESCALER = 256, FREQUENZA OTTENUTA = 61 Hz
     4fc:	e0 e8       	ldi	r30, 0x80	; 128
     4fe:	f0 e0       	ldi	r31, 0x00	; 0
     500:	80 81       	ld	r24, Z
     502:	83 6a       	ori	r24, 0xA3	; 163
     504:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM12)|(0<<WGM13)|(1<<CS12);
     506:	e1 e8       	ldi	r30, 0x81	; 129
     508:	f0 e0       	ldi	r31, 0x00	; 0
     50a:	80 81       	ld	r24, Z
     50c:	8c 60       	ori	r24, 0x0C	; 12
     50e:	80 83       	st	Z, r24
	
	TCCR2A|=(0<<WGM20)|(0<<WGM21)|(0<<COM2A1)|(0<<COM2B1);								//CTC timer 5, PRESCALER = 8
     510:	e0 eb       	ldi	r30, 0xB0	; 176
     512:	f0 e0       	ldi	r31, 0x00	; 0
     514:	80 81       	ld	r24, Z
     516:	80 83       	st	Z, r24
	TCCR2B|=(1<<WGM22)|(1<<CS20)|(1<<CS21);
     518:	e1 eb       	ldi	r30, 0xB1	; 177
     51a:	f0 e0       	ldi	r31, 0x00	; 0
     51c:	80 81       	ld	r24, Z
     51e:	8b 60       	ori	r24, 0x0B	; 11
     520:	80 83       	st	Z, r24
	TIMSK2 = (1<<OCIE2A);
     522:	22 e0       	ldi	r18, 0x02	; 2
     524:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
	OCR2A = 255;																				
     528:	8f ef       	ldi	r24, 0xFF	; 255
     52a:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
	
	TCCR0A|=(0<<WGM00)|(1<<WGM01)|(0<<COM0A1)|(0<<COM0B1);					
     52e:	94 b5       	in	r25, 0x24	; 36
     530:	92 60       	ori	r25, 0x02	; 2
     532:	94 bd       	out	0x24, r25	; 36
	TCCR0B|=(1<<WGM02)|(1<<CS00)|(1<<CS01);
     534:	95 b5       	in	r25, 0x25	; 37
     536:	9b 60       	ori	r25, 0x0B	; 11
     538:	95 bd       	out	0x25, r25	; 37
	TIMSK0 = (1<<OCIE0A);
     53a:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	OCR0A = 255;
     53e:	87 bd       	out	0x27, r24	; 39
	TCNT0=0xFF;
     540:	86 bd       	out	0x26, r24	; 38

	
	DDRB=0xFF;
     542:	84 b9       	out	0x04, r24	; 4

	for(int i=1;i<5;i++)integral[i]=0;
     544:	e0 e1       	ldi	r30, 0x10	; 16
     546:	f2 e0       	ldi	r31, 0x02	; 2
     548:	14 82       	std	Z+4, r1	; 0x04
     54a:	15 82       	std	Z+5, r1	; 0x05
     54c:	16 82       	std	Z+6, r1	; 0x06
     54e:	17 82       	std	Z+7, r1	; 0x07
     550:	10 86       	std	Z+8, r1	; 0x08
     552:	11 86       	std	Z+9, r1	; 0x09
     554:	12 86       	std	Z+10, r1	; 0x0a
     556:	13 86       	std	Z+11, r1	; 0x0b
     558:	14 86       	std	Z+12, r1	; 0x0c
     55a:	15 86       	std	Z+13, r1	; 0x0d
     55c:	16 86       	std	Z+14, r1	; 0x0e
     55e:	17 86       	std	Z+15, r1	; 0x0f
     560:	10 8a       	std	Z+16, r1	; 0x10
     562:	11 8a       	std	Z+17, r1	; 0x11
     564:	12 8a       	std	Z+18, r1	; 0x12
     566:	13 8a       	std	Z+19, r1	; 0x13
     568:	08 95       	ret

0000056a <CalculatePID>:
	//setpointGy+=degrees;
//}
//
///*-------------------PID-------------------*/

int CalculatePID(int N){
     56a:	4f 92       	push	r4
     56c:	5f 92       	push	r5
     56e:	6f 92       	push	r6
     570:	7f 92       	push	r7
     572:	8f 92       	push	r8
     574:	9f 92       	push	r9
     576:	af 92       	push	r10
     578:	bf 92       	push	r11
     57a:	cf 92       	push	r12
     57c:	df 92       	push	r13
     57e:	ef 92       	push	r14
     580:	ff 92       	push	r15
     582:	0f 93       	push	r16
     584:	1f 93       	push	r17
     586:	cf 93       	push	r28
     588:	df 93       	push	r29
     58a:	ec 01       	movw	r28, r24

	error[N] = setpoint[N] - speed[N];
     58c:	8c 01       	movw	r16, r24
     58e:	00 0f       	add	r16, r16
     590:	11 1f       	adc	r17, r17
     592:	00 0f       	add	r16, r16
     594:	11 1f       	adc	r17, r17
     596:	f8 01       	movw	r30, r16
     598:	e0 5c       	subi	r30, 0xC0	; 192
     59a:	fe 4f       	sbci	r31, 0xFE	; 254
     59c:	60 81       	ld	r22, Z
     59e:	71 81       	ldd	r23, Z+1	; 0x01
     5a0:	82 81       	ldd	r24, Z+2	; 0x02
     5a2:	93 81       	ldd	r25, Z+3	; 0x03
     5a4:	f8 01       	movw	r30, r16
     5a6:	e4 52       	subi	r30, 0x24	; 36
     5a8:	fe 4f       	sbci	r31, 0xFE	; 254
     5aa:	20 81       	ld	r18, Z
     5ac:	31 81       	ldd	r19, Z+1	; 0x01
     5ae:	42 81       	ldd	r20, Z+2	; 0x02
     5b0:	53 81       	ldd	r21, Z+3	; 0x03
     5b2:	0e 94 ca 05 	call	0xb94	; 0xb94 <__subsf3>
     5b6:	98 01       	movw	r18, r16
     5b8:	28 53       	subi	r18, 0x38	; 56
     5ba:	3e 4f       	sbci	r19, 0xFE	; 254
     5bc:	79 01       	movw	r14, r18
     5be:	d9 01       	movw	r26, r18
     5c0:	6d 93       	st	X+, r22
     5c2:	7d 93       	st	X+, r23
     5c4:	8d 93       	st	X+, r24
     5c6:	9c 93       	st	X, r25
     5c8:	13 97       	sbiw	r26, 0x03	; 3
	integral[N] += error[N]*0.002;
     5ca:	6d 91       	ld	r22, X+
     5cc:	7d 91       	ld	r23, X+
     5ce:	8d 91       	ld	r24, X+
     5d0:	9c 91       	ld	r25, X
     5d2:	f8 01       	movw	r30, r16
     5d4:	e0 5f       	subi	r30, 0xF0	; 240
     5d6:	fd 4f       	sbci	r31, 0xFD	; 253
     5d8:	6f 01       	movw	r12, r30
     5da:	80 80       	ld	r8, Z
     5dc:	91 80       	ldd	r9, Z+1	; 0x01
     5de:	a2 80       	ldd	r10, Z+2	; 0x02
     5e0:	b3 80       	ldd	r11, Z+3	; 0x03
     5e2:	2f e6       	ldi	r18, 0x6F	; 111
     5e4:	32 e1       	ldi	r19, 0x12	; 18
     5e6:	43 e0       	ldi	r20, 0x03	; 3
     5e8:	5b e3       	ldi	r21, 0x3B	; 59
     5ea:	0e 94 fd 07 	call	0xffa	; 0xffa <__mulsf3>
     5ee:	a5 01       	movw	r20, r10
     5f0:	94 01       	movw	r18, r8
     5f2:	0e 94 cb 05 	call	0xb96	; 0xb96 <__addsf3>
     5f6:	d6 01       	movw	r26, r12
     5f8:	6d 93       	st	X+, r22
     5fa:	7d 93       	st	X+, r23
     5fc:	8d 93       	st	X+, r24
     5fe:	9c 93       	st	X, r25
     600:	13 97       	sbiw	r26, 0x03	; 3
	derivative[N] = (error[N] - old_error[N])/0.002;
     602:	f7 01       	movw	r30, r14
     604:	60 81       	ld	r22, Z
     606:	71 81       	ldd	r23, Z+1	; 0x01
     608:	82 81       	ldd	r24, Z+2	; 0x02
     60a:	93 81       	ldd	r25, Z+3	; 0x03
     60c:	f8 01       	movw	r30, r16
     60e:	e8 57       	subi	r30, 0x78	; 120
     610:	fe 4f       	sbci	r31, 0xFE	; 254
     612:	20 81       	ld	r18, Z
     614:	31 81       	ldd	r19, Z+1	; 0x01
     616:	42 81       	ldd	r20, Z+2	; 0x02
     618:	53 81       	ldd	r21, Z+3	; 0x03
     61a:	0e 94 ca 05 	call	0xb94	; 0xb94 <__subsf3>
     61e:	2f e6       	ldi	r18, 0x6F	; 111
     620:	32 e1       	ldi	r19, 0x12	; 18
     622:	43 e0       	ldi	r20, 0x03	; 3
     624:	5b e3       	ldi	r21, 0x3B	; 59
     626:	0e 94 3c 06 	call	0xc78	; 0xc78 <__divsf3>
     62a:	f8 01       	movw	r30, r16
     62c:	e0 5e       	subi	r30, 0xE0	; 224
     62e:	fe 4f       	sbci	r31, 0xFE	; 254
     630:	60 83       	st	Z, r22
     632:	71 83       	std	Z+1, r23	; 0x01
     634:	82 83       	std	Z+2, r24	; 0x02
     636:	93 83       	std	Z+3, r25	; 0x03
	duty[N] = error[N]*Kp + integral[N]*Ki + derivative[N]*Kd;
     638:	d7 01       	movw	r26, r14
     63a:	6d 91       	ld	r22, X+
     63c:	7d 91       	ld	r23, X+
     63e:	8d 91       	ld	r24, X+
     640:	9c 91       	ld	r25, X
     642:	d6 01       	movw	r26, r12
     644:	cd 90       	ld	r12, X+
     646:	dd 90       	ld	r13, X+
     648:	ed 90       	ld	r14, X+
     64a:	fc 90       	ld	r15, X
     64c:	80 80       	ld	r8, Z
     64e:	91 80       	ldd	r9, Z+1	; 0x01
     650:	a2 80       	ldd	r10, Z+2	; 0x02
     652:	b3 80       	ldd	r11, Z+3	; 0x03
     654:	20 91 f2 01 	lds	r18, 0x01F2	; 0x8001f2 <Kp>
     658:	30 91 f3 01 	lds	r19, 0x01F3	; 0x8001f3 <Kp+0x1>
     65c:	40 91 f4 01 	lds	r20, 0x01F4	; 0x8001f4 <Kp+0x2>
     660:	50 91 f5 01 	lds	r21, 0x01F5	; 0x8001f5 <Kp+0x3>
     664:	0e 94 fd 07 	call	0xffa	; 0xffa <__mulsf3>
     668:	2b 01       	movw	r4, r22
     66a:	3c 01       	movw	r6, r24
     66c:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <Ki>
     670:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <Ki+0x1>
     674:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <Ki+0x2>
     678:	50 91 37 01 	lds	r21, 0x0137	; 0x800137 <Ki+0x3>
     67c:	c7 01       	movw	r24, r14
     67e:	b6 01       	movw	r22, r12
     680:	0e 94 fd 07 	call	0xffa	; 0xffa <__mulsf3>
     684:	9b 01       	movw	r18, r22
     686:	ac 01       	movw	r20, r24
     688:	c3 01       	movw	r24, r6
     68a:	b2 01       	movw	r22, r4
     68c:	0e 94 cb 05 	call	0xb96	; 0xb96 <__addsf3>
     690:	6b 01       	movw	r12, r22
     692:	7c 01       	movw	r14, r24
     694:	20 91 be 01 	lds	r18, 0x01BE	; 0x8001be <Kd>
     698:	30 91 bf 01 	lds	r19, 0x01BF	; 0x8001bf <Kd+0x1>
     69c:	40 91 c0 01 	lds	r20, 0x01C0	; 0x8001c0 <Kd+0x2>
     6a0:	50 91 c1 01 	lds	r21, 0x01C1	; 0x8001c1 <Kd+0x3>
     6a4:	c5 01       	movw	r24, r10
     6a6:	b4 01       	movw	r22, r8
     6a8:	0e 94 fd 07 	call	0xffa	; 0xffa <__mulsf3>
     6ac:	9b 01       	movw	r18, r22
     6ae:	ac 01       	movw	r20, r24
     6b0:	c7 01       	movw	r24, r14
     6b2:	b6 01       	movw	r22, r12
     6b4:	0e 94 cb 05 	call	0xb96	; 0xb96 <__addsf3>
     6b8:	0e 94 ae 06 	call	0xd5c	; 0xd5c <__fixsfsi>
     6bc:	fe 01       	movw	r30, r28
     6be:	ee 0f       	add	r30, r30
     6c0:	ff 1f       	adc	r31, r31
     6c2:	e6 50       	subi	r30, 0x06	; 6
     6c4:	fe 4f       	sbci	r31, 0xFE	; 254
     6c6:	71 83       	std	Z+1, r23	; 0x01
     6c8:	60 83       	st	Z, r22
	if (duty[N]<0) duty[N]=0;
     6ca:	80 81       	ld	r24, Z
     6cc:	91 81       	ldd	r25, Z+1	; 0x01
     6ce:	99 23       	and	r25, r25
     6d0:	3c f4       	brge	.+14     	; 0x6e0 <CalculatePID+0x176>
     6d2:	fe 01       	movw	r30, r28
     6d4:	ee 0f       	add	r30, r30
     6d6:	ff 1f       	adc	r31, r31
     6d8:	e6 50       	subi	r30, 0x06	; 6
     6da:	fe 4f       	sbci	r31, 0xFE	; 254
     6dc:	11 82       	std	Z+1, r1	; 0x01
     6de:	10 82       	st	Z, r1
	if (duty[N]>1023) duty[N]=1023;
     6e0:	fe 01       	movw	r30, r28
     6e2:	ee 0f       	add	r30, r30
     6e4:	ff 1f       	adc	r31, r31
     6e6:	e6 50       	subi	r30, 0x06	; 6
     6e8:	fe 4f       	sbci	r31, 0xFE	; 254
     6ea:	80 81       	ld	r24, Z
     6ec:	91 81       	ldd	r25, Z+1	; 0x01
     6ee:	81 15       	cp	r24, r1
     6f0:	94 40       	sbci	r25, 0x04	; 4
     6f2:	4c f0       	brlt	.+18     	; 0x706 <CalculatePID+0x19c>
     6f4:	fe 01       	movw	r30, r28
     6f6:	ee 0f       	add	r30, r30
     6f8:	ff 1f       	adc	r31, r31
     6fa:	e6 50       	subi	r30, 0x06	; 6
     6fc:	fe 4f       	sbci	r31, 0xFE	; 254
     6fe:	8f ef       	ldi	r24, 0xFF	; 255
     700:	93 e0       	ldi	r25, 0x03	; 3
     702:	91 83       	std	Z+1, r25	; 0x01
     704:	80 83       	st	Z, r24
	old_error[N] = error[N];
     706:	ce 01       	movw	r24, r28
     708:	88 0f       	add	r24, r24
     70a:	99 1f       	adc	r25, r25
     70c:	88 0f       	add	r24, r24
     70e:	99 1f       	adc	r25, r25
     710:	fc 01       	movw	r30, r24
     712:	e8 53       	subi	r30, 0x38	; 56
     714:	fe 4f       	sbci	r31, 0xFE	; 254
     716:	40 81       	ld	r20, Z
     718:	51 81       	ldd	r21, Z+1	; 0x01
     71a:	62 81       	ldd	r22, Z+2	; 0x02
     71c:	73 81       	ldd	r23, Z+3	; 0x03
     71e:	fc 01       	movw	r30, r24
     720:	e8 57       	subi	r30, 0x78	; 120
     722:	fe 4f       	sbci	r31, 0xFE	; 254
     724:	40 83       	st	Z, r20
     726:	51 83       	std	Z+1, r21	; 0x01
     728:	62 83       	std	Z+2, r22	; 0x02
     72a:	73 83       	std	Z+3, r23	; 0x03
	return duty[N];
     72c:	cc 0f       	add	r28, r28
     72e:	dd 1f       	adc	r29, r29
     730:	c6 50       	subi	r28, 0x06	; 6
     732:	de 4f       	sbci	r29, 0xFE	; 254
     734:	88 81       	ld	r24, Y
     736:	99 81       	ldd	r25, Y+1	; 0x01
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	0f 91       	pop	r16
     740:	ff 90       	pop	r15
     742:	ef 90       	pop	r14
     744:	df 90       	pop	r13
     746:	cf 90       	pop	r12
     748:	bf 90       	pop	r11
     74a:	af 90       	pop	r10
     74c:	9f 90       	pop	r9
     74e:	8f 90       	pop	r8
     750:	7f 90       	pop	r7
     752:	6f 90       	pop	r6
     754:	5f 90       	pop	r5
     756:	4f 90       	pop	r4
     758:	08 95       	ret

0000075a <Serial_Init>:
     75a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <BAUD0>
     75e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <BAUD0+0x1>
     762:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <BAUD0+0x2>
     766:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <BAUD0+0x3>
     76a:	89 2f       	mov	r24, r25
     76c:	9a 2f       	mov	r25, r26
     76e:	ab 2f       	mov	r26, r27
     770:	bb 27       	eor	r27, r27
     772:	a7 fd       	sbrc	r26, 7
     774:	ba 95       	dec	r27
     776:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     77a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <BAUD0>
     77e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     782:	88 e1       	ldi	r24, 0x18	; 24
     784:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     788:	86 e0       	ldi	r24, 0x06	; 6
     78a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     78e:	08 95       	ret

00000790 <Serial_Tx>:
     790:	e0 ec       	ldi	r30, 0xC0	; 192
     792:	f0 e0       	ldi	r31, 0x00	; 0
     794:	90 81       	ld	r25, Z
     796:	95 ff       	sbrs	r25, 5
     798:	fd cf       	rjmp	.-6      	; 0x794 <Serial_Tx+0x4>
     79a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     79e:	08 95       	ret

000007a0 <Serial_Send_String>:
     7a0:	ef 92       	push	r14
     7a2:	ff 92       	push	r15
     7a4:	0f 93       	push	r16
     7a6:	1f 93       	push	r17
     7a8:	cf 93       	push	r28
     7aa:	df 93       	push	r29
     7ac:	8c 01       	movw	r16, r24
     7ae:	7c 01       	movw	r14, r24
     7b0:	c0 e0       	ldi	r28, 0x00	; 0
     7b2:	d0 e0       	ldi	r29, 0x00	; 0
     7b4:	06 c0       	rjmp	.+12     	; 0x7c2 <Serial_Send_String+0x22>
     7b6:	f7 01       	movw	r30, r14
     7b8:	81 91       	ld	r24, Z+
     7ba:	7f 01       	movw	r14, r30
     7bc:	0e 94 c8 03 	call	0x790	; 0x790 <Serial_Tx>
     7c0:	21 96       	adiw	r28, 0x01	; 1
     7c2:	f8 01       	movw	r30, r16
     7c4:	01 90       	ld	r0, Z+
     7c6:	00 20       	and	r0, r0
     7c8:	e9 f7       	brne	.-6      	; 0x7c4 <Serial_Send_String+0x24>
     7ca:	31 97       	sbiw	r30, 0x01	; 1
     7cc:	e0 1b       	sub	r30, r16
     7ce:	f1 0b       	sbc	r31, r17
     7d0:	ce 17       	cp	r28, r30
     7d2:	df 07       	cpc	r29, r31
     7d4:	80 f3       	brcs	.-32     	; 0x7b6 <Serial_Send_String+0x16>
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	1f 91       	pop	r17
     7dc:	0f 91       	pop	r16
     7de:	ff 90       	pop	r15
     7e0:	ef 90       	pop	r14
     7e2:	08 95       	ret

000007e4 <Serial_Send_Int>:
     7e4:	2f 92       	push	r2
     7e6:	3f 92       	push	r3
     7e8:	4f 92       	push	r4
     7ea:	5f 92       	push	r5
     7ec:	6f 92       	push	r6
     7ee:	7f 92       	push	r7
     7f0:	8f 92       	push	r8
     7f2:	9f 92       	push	r9
     7f4:	af 92       	push	r10
     7f6:	bf 92       	push	r11
     7f8:	cf 92       	push	r12
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	cf 93       	push	r28
     806:	df 93       	push	r29
     808:	cd b7       	in	r28, 0x3d	; 61
     80a:	de b7       	in	r29, 0x3e	; 62
     80c:	c9 54       	subi	r28, 0x49	; 73
     80e:	d1 09       	sbc	r29, r1
     810:	0f b6       	in	r0, 0x3f	; 63
     812:	f8 94       	cli
     814:	de bf       	out	0x3e, r29	; 62
     816:	0f be       	out	0x3f, r0	; 63
     818:	cd bf       	out	0x3d, r28	; 61
     81a:	22 2e       	mov	r2, r18
     81c:	33 2e       	mov	r3, r19
     81e:	04 2f       	mov	r16, r20
     820:	22 96       	adiw	r28, 0x02	; 2
     822:	5f af       	std	Y+63, r21	; 0x3f
     824:	22 97       	sbiw	r28, 0x02	; 2
     826:	86 2e       	mov	r8, r22
     828:	17 2f       	mov	r17, r23
     82a:	23 96       	adiw	r28, 0x03	; 3
     82c:	8f af       	std	Y+63, r24	; 0x3f
     82e:	23 97       	sbiw	r28, 0x03	; 3
     830:	24 96       	adiw	r28, 0x04	; 4
     832:	9f af       	std	Y+63, r25	; 0x3f
     834:	24 97       	sbiw	r28, 0x04	; 4
     836:	a0 e0       	ldi	r26, 0x00	; 0
     838:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__cmpdi2_s8>
     83c:	0c f0       	brlt	.+2      	; 0x840 <Serial_Send_Int+0x5c>
     83e:	a6 c0       	rjmp	.+332    	; 0x98c <__stack+0x8d>
     840:	83 e0       	ldi	r24, 0x03	; 3
     842:	91 e0       	ldi	r25, 0x01	; 1
     844:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <Serial_Send_String>
     848:	22 2d       	mov	r18, r2
     84a:	33 2d       	mov	r19, r3
     84c:	40 2f       	mov	r20, r16
     84e:	22 96       	adiw	r28, 0x02	; 2
     850:	5f ad       	ldd	r21, Y+63	; 0x3f
     852:	22 97       	sbiw	r28, 0x02	; 2
     854:	68 2d       	mov	r22, r8
     856:	71 2f       	mov	r23, r17
     858:	23 96       	adiw	r28, 0x03	; 3
     85a:	8f ad       	ldd	r24, Y+63	; 0x3f
     85c:	23 97       	sbiw	r28, 0x03	; 3
     85e:	24 96       	adiw	r28, 0x04	; 4
     860:	9f ad       	ldd	r25, Y+63	; 0x3f
     862:	24 97       	sbiw	r28, 0x04	; 4
     864:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__negdi2>
     868:	22 2e       	mov	r2, r18
     86a:	33 2e       	mov	r3, r19
     86c:	04 2f       	mov	r16, r20
     86e:	22 96       	adiw	r28, 0x02	; 2
     870:	5f af       	std	Y+63, r21	; 0x3f
     872:	22 97       	sbiw	r28, 0x02	; 2
     874:	86 2e       	mov	r8, r22
     876:	17 2f       	mov	r17, r23
     878:	23 96       	adiw	r28, 0x03	; 3
     87a:	8f af       	std	Y+63, r24	; 0x3f
     87c:	23 97       	sbiw	r28, 0x03	; 3
     87e:	24 96       	adiw	r28, 0x04	; 4
     880:	9f af       	std	Y+63, r25	; 0x3f
     882:	24 97       	sbiw	r28, 0x04	; 4
     884:	a0 e0       	ldi	r26, 0x00	; 0
     886:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__cmpdi2_s8>
     88a:	21 f4       	brne	.+8      	; 0x894 <Serial_Send_Int+0xb0>
     88c:	80 e3       	ldi	r24, 0x30	; 48
     88e:	0e 94 c8 03 	call	0x790	; 0x790 <Serial_Tx>
     892:	8b c0       	rjmp	.+278    	; 0x9aa <__stack+0xab>
     894:	ce 01       	movw	r24, r28
     896:	01 96       	adiw	r24, 0x01	; 1
     898:	2c 01       	movw	r4, r24
     89a:	3e 01       	movw	r6, r28
     89c:	91 e2       	ldi	r25, 0x21	; 33
     89e:	69 0e       	add	r6, r25
     8a0:	71 1c       	adc	r7, r1
     8a2:	f2 01       	movw	r30, r4
     8a4:	11 92       	st	Z+, r1
     8a6:	e6 15       	cp	r30, r6
     8a8:	f7 05       	cpc	r31, r7
     8aa:	e1 f7       	brne	.-8      	; 0x8a4 <Serial_Send_Int+0xc0>
     8ac:	0f 2e       	mov	r0, r31
     8ae:	ff e1       	ldi	r31, 0x1F	; 31
     8b0:	9f 2e       	mov	r9, r31
     8b2:	f0 2d       	mov	r31, r0
     8b4:	28 96       	adiw	r28, 0x08	; 8
     8b6:	5f ae       	std	Y+63, r5	; 0x3f
     8b8:	4e ae       	std	Y+62, r4	; 0x3e
     8ba:	28 97       	sbiw	r28, 0x08	; 8
     8bc:	2a 96       	adiw	r28, 0x0a	; 10
     8be:	7f ae       	std	Y+63, r7	; 0x3f
     8c0:	6e ae       	std	Y+62, r6	; 0x3e
     8c2:	2a 97       	sbiw	r28, 0x0a	; 10
     8c4:	79 2c       	mov	r7, r9
     8c6:	50 2e       	mov	r5, r16
     8c8:	91 2e       	mov	r9, r17
     8ca:	e1 e0       	ldi	r30, 0x01	; 1
     8cc:	f0 e0       	ldi	r31, 0x00	; 0
     8ce:	ec 0f       	add	r30, r28
     8d0:	fd 1f       	adc	r31, r29
     8d2:	e7 0d       	add	r30, r7
     8d4:	f1 1d       	adc	r31, r1
     8d6:	26 96       	adiw	r28, 0x06	; 6
     8d8:	ff af       	std	Y+63, r31	; 0x3f
     8da:	ee af       	std	Y+62, r30	; 0x3e
     8dc:	26 97       	sbiw	r28, 0x06	; 6
     8de:	0f 2e       	mov	r0, r31
     8e0:	fa e0       	ldi	r31, 0x0A	; 10
     8e2:	af 2e       	mov	r10, r31
     8e4:	f0 2d       	mov	r31, r0
     8e6:	b1 2c       	mov	r11, r1
     8e8:	c1 2c       	mov	r12, r1
     8ea:	d1 2c       	mov	r13, r1
     8ec:	e1 2c       	mov	r14, r1
     8ee:	f1 2c       	mov	r15, r1
     8f0:	00 e0       	ldi	r16, 0x00	; 0
     8f2:	10 e0       	ldi	r17, 0x00	; 0
     8f4:	22 2d       	mov	r18, r2
     8f6:	33 2d       	mov	r19, r3
     8f8:	45 2d       	mov	r20, r5
     8fa:	22 96       	adiw	r28, 0x02	; 2
     8fc:	5f ad       	ldd	r21, Y+63	; 0x3f
     8fe:	22 97       	sbiw	r28, 0x02	; 2
     900:	68 2d       	mov	r22, r8
     902:	79 2d       	mov	r23, r9
     904:	23 96       	adiw	r28, 0x03	; 3
     906:	8f ad       	ldd	r24, Y+63	; 0x3f
     908:	23 97       	sbiw	r28, 0x03	; 3
     90a:	24 96       	adiw	r28, 0x04	; 4
     90c:	9f ad       	ldd	r25, Y+63	; 0x3f
     90e:	24 97       	sbiw	r28, 0x04	; 4
     910:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <__moddi3>
     914:	20 5d       	subi	r18, 0xD0	; 208
     916:	26 96       	adiw	r28, 0x06	; 6
     918:	ee ad       	ldd	r30, Y+62	; 0x3e
     91a:	ff ad       	ldd	r31, Y+63	; 0x3f
     91c:	26 97       	sbiw	r28, 0x06	; 6
     91e:	20 83       	st	Z, r18
     920:	22 2d       	mov	r18, r2
     922:	33 2d       	mov	r19, r3
     924:	45 2d       	mov	r20, r5
     926:	22 96       	adiw	r28, 0x02	; 2
     928:	5f ad       	ldd	r21, Y+63	; 0x3f
     92a:	22 97       	sbiw	r28, 0x02	; 2
     92c:	68 2d       	mov	r22, r8
     92e:	79 2d       	mov	r23, r9
     930:	23 96       	adiw	r28, 0x03	; 3
     932:	8f ad       	ldd	r24, Y+63	; 0x3f
     934:	23 97       	sbiw	r28, 0x03	; 3
     936:	24 96       	adiw	r28, 0x04	; 4
     938:	9f ad       	ldd	r25, Y+63	; 0x3f
     93a:	24 97       	sbiw	r28, 0x04	; 4
     93c:	0e 94 ee 09 	call	0x13dc	; 0x13dc <__divdi3>
     940:	22 2e       	mov	r2, r18
     942:	33 2e       	mov	r3, r19
     944:	54 2e       	mov	r5, r20
     946:	22 96       	adiw	r28, 0x02	; 2
     948:	5f af       	std	Y+63, r21	; 0x3f
     94a:	22 97       	sbiw	r28, 0x02	; 2
     94c:	86 2e       	mov	r8, r22
     94e:	97 2e       	mov	r9, r23
     950:	23 96       	adiw	r28, 0x03	; 3
     952:	8f af       	std	Y+63, r24	; 0x3f
     954:	23 97       	sbiw	r28, 0x03	; 3
     956:	24 96       	adiw	r28, 0x04	; 4
     958:	9f af       	std	Y+63, r25	; 0x3f
     95a:	24 97       	sbiw	r28, 0x04	; 4
     95c:	7a 94       	dec	r7
     95e:	a0 e0       	ldi	r26, 0x00	; 0
     960:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__cmpdi2_s8>
     964:	09 f0       	breq	.+2      	; 0x968 <__stack+0x69>
     966:	b1 cf       	rjmp	.-158    	; 0x8ca <Serial_Send_Int+0xe6>
     968:	28 96       	adiw	r28, 0x08	; 8
     96a:	4e ac       	ldd	r4, Y+62	; 0x3e
     96c:	5f ac       	ldd	r5, Y+63	; 0x3f
     96e:	28 97       	sbiw	r28, 0x08	; 8
     970:	2a 96       	adiw	r28, 0x0a	; 10
     972:	6e ac       	ldd	r6, Y+62	; 0x3e
     974:	7f ac       	ldd	r7, Y+63	; 0x3f
     976:	2a 97       	sbiw	r28, 0x0a	; 10
     978:	f2 01       	movw	r30, r4
     97a:	81 91       	ld	r24, Z+
     97c:	2f 01       	movw	r4, r30
     97e:	81 11       	cpse	r24, r1
     980:	0e 94 c8 03 	call	0x790	; 0x790 <Serial_Tx>
     984:	46 14       	cp	r4, r6
     986:	57 04       	cpc	r5, r7
     988:	b9 f7       	brne	.-18     	; 0x978 <__stack+0x79>
     98a:	0f c0       	rjmp	.+30     	; 0x9aa <__stack+0xab>
     98c:	22 96       	adiw	r28, 0x02	; 2
     98e:	5f ad       	ldd	r21, Y+63	; 0x3f
     990:	22 97       	sbiw	r28, 0x02	; 2
     992:	23 96       	adiw	r28, 0x03	; 3
     994:	8f ad       	ldd	r24, Y+63	; 0x3f
     996:	23 97       	sbiw	r28, 0x03	; 3
     998:	24 96       	adiw	r28, 0x04	; 4
     99a:	9f ad       	ldd	r25, Y+63	; 0x3f
     99c:	24 97       	sbiw	r28, 0x04	; 4
     99e:	a0 e0       	ldi	r26, 0x00	; 0
     9a0:	0e 94 c3 0a 	call	0x1586	; 0x1586 <__cmpdi2_s8>
     9a4:	09 f0       	breq	.+2      	; 0x9a8 <__stack+0xa9>
     9a6:	76 cf       	rjmp	.-276    	; 0x894 <Serial_Send_Int+0xb0>
     9a8:	71 cf       	rjmp	.-286    	; 0x88c <Serial_Send_Int+0xa8>
     9aa:	c7 5b       	subi	r28, 0xB7	; 183
     9ac:	df 4f       	sbci	r29, 0xFF	; 255
     9ae:	0f b6       	in	r0, 0x3f	; 63
     9b0:	f8 94       	cli
     9b2:	de bf       	out	0x3e, r29	; 62
     9b4:	0f be       	out	0x3f, r0	; 63
     9b6:	cd bf       	out	0x3d, r28	; 61
     9b8:	df 91       	pop	r29
     9ba:	cf 91       	pop	r28
     9bc:	1f 91       	pop	r17
     9be:	0f 91       	pop	r16
     9c0:	ff 90       	pop	r15
     9c2:	ef 90       	pop	r14
     9c4:	df 90       	pop	r13
     9c6:	cf 90       	pop	r12
     9c8:	bf 90       	pop	r11
     9ca:	af 90       	pop	r10
     9cc:	9f 90       	pop	r9
     9ce:	8f 90       	pop	r8
     9d0:	7f 90       	pop	r7
     9d2:	6f 90       	pop	r6
     9d4:	5f 90       	pop	r5
     9d6:	4f 90       	pop	r4
     9d8:	3f 90       	pop	r3
     9da:	2f 90       	pop	r2
     9dc:	08 95       	ret

000009de <SerialN>:
     9de:	8d e0       	ldi	r24, 0x0D	; 13
     9e0:	0e 94 c8 03 	call	0x790	; 0x790 <Serial_Tx>
     9e4:	8a e0       	ldi	r24, 0x0A	; 10
     9e6:	0e 94 c8 03 	call	0x790	; 0x790 <Serial_Tx>
     9ea:	08 95       	ret

000009ec <Serial_Send_Float>:
     9ec:	4f 92       	push	r4
     9ee:	5f 92       	push	r5
     9f0:	6f 92       	push	r6
     9f2:	7f 92       	push	r7
     9f4:	8f 92       	push	r8
     9f6:	9f 92       	push	r9
     9f8:	af 92       	push	r10
     9fa:	bf 92       	push	r11
     9fc:	cf 92       	push	r12
     9fe:	df 92       	push	r13
     a00:	ef 92       	push	r14
     a02:	ff 92       	push	r15
     a04:	0f 93       	push	r16
     a06:	1f 93       	push	r17
     a08:	cf 93       	push	r28
     a0a:	df 93       	push	r29
     a0c:	6b 01       	movw	r12, r22
     a0e:	7c 01       	movw	r14, r24
     a10:	20 e0       	ldi	r18, 0x00	; 0
     a12:	30 e0       	ldi	r19, 0x00	; 0
     a14:	a9 01       	movw	r20, r18
     a16:	0e 94 37 06 	call	0xc6e	; 0xc6e <__cmpsf2>
     a1a:	88 23       	and	r24, r24
     a1c:	44 f4       	brge	.+16     	; 0xa2e <Serial_Send_Float+0x42>
     a1e:	83 e0       	ldi	r24, 0x03	; 3
     a20:	91 e0       	ldi	r25, 0x01	; 1
     a22:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <Serial_Send_String>
     a26:	f7 fa       	bst	r15, 7
     a28:	f0 94       	com	r15
     a2a:	f7 f8       	bld	r15, 7
     a2c:	f0 94       	com	r15
     a2e:	c7 01       	movw	r24, r14
     a30:	b6 01       	movw	r22, r12
     a32:	0e 94 ae 06 	call	0xd5c	; 0xd5c <__fixsfsi>
     a36:	2b 01       	movw	r4, r22
     a38:	3c 01       	movw	r6, r24
     a3a:	4b 01       	movw	r8, r22
     a3c:	5c 01       	movw	r10, r24
     a3e:	bb 0c       	add	r11, r11
     a40:	88 08       	sbc	r8, r8
     a42:	98 2c       	mov	r9, r8
     a44:	54 01       	movw	r10, r8
     a46:	26 2f       	mov	r18, r22
     a48:	35 2d       	mov	r19, r5
     a4a:	46 2d       	mov	r20, r6
     a4c:	57 2d       	mov	r21, r7
     a4e:	68 2d       	mov	r22, r8
     a50:	78 2d       	mov	r23, r8
     a52:	88 2d       	mov	r24, r8
     a54:	98 2d       	mov	r25, r8
     a56:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <Serial_Send_Int>
     a5a:	c0 e0       	ldi	r28, 0x00	; 0
     a5c:	d0 e0       	ldi	r29, 0x00	; 0
     a5e:	0b c0       	rjmp	.+22     	; 0xa76 <Serial_Send_Float+0x8a>
     a60:	20 e0       	ldi	r18, 0x00	; 0
     a62:	30 e0       	ldi	r19, 0x00	; 0
     a64:	40 e2       	ldi	r20, 0x20	; 32
     a66:	51 e4       	ldi	r21, 0x41	; 65
     a68:	c7 01       	movw	r24, r14
     a6a:	b6 01       	movw	r22, r12
     a6c:	0e 94 fd 07 	call	0xffa	; 0xffa <__mulsf3>
     a70:	6b 01       	movw	r12, r22
     a72:	7c 01       	movw	r14, r24
     a74:	21 96       	adiw	r28, 0x01	; 1
     a76:	20 e0       	ldi	r18, 0x00	; 0
     a78:	30 e0       	ldi	r19, 0x00	; 0
     a7a:	40 e8       	ldi	r20, 0x80	; 128
     a7c:	5f e3       	ldi	r21, 0x3F	; 63
     a7e:	c7 01       	movw	r24, r14
     a80:	b6 01       	movw	r22, r12
     a82:	0e 94 2c 07 	call	0xe58	; 0xe58 <fmod>
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	a9 01       	movw	r20, r18
     a8c:	0e 94 37 06 	call	0xc6e	; 0xc6e <__cmpsf2>
     a90:	81 11       	cpse	r24, r1
     a92:	e6 cf       	rjmp	.-52     	; 0xa60 <Serial_Send_Float+0x74>
     a94:	be 01       	movw	r22, r28
     a96:	0d 2e       	mov	r0, r29
     a98:	00 0c       	add	r0, r0
     a9a:	88 0b       	sbc	r24, r24
     a9c:	99 0b       	sbc	r25, r25
     a9e:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__floatsisf>
     aa2:	9b 01       	movw	r18, r22
     aa4:	ac 01       	movw	r20, r24
     aa6:	60 e0       	ldi	r22, 0x00	; 0
     aa8:	70 e0       	ldi	r23, 0x00	; 0
     aaa:	80 e2       	ldi	r24, 0x20	; 32
     aac:	91 e4       	ldi	r25, 0x41	; 65
     aae:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <pow>
     ab2:	4b 01       	movw	r8, r22
     ab4:	5c 01       	movw	r10, r24
     ab6:	c3 01       	movw	r24, r6
     ab8:	b2 01       	movw	r22, r4
     aba:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__floatsisf>
     abe:	a5 01       	movw	r20, r10
     ac0:	94 01       	movw	r18, r8
     ac2:	0e 94 fd 07 	call	0xffa	; 0xffa <__mulsf3>
     ac6:	0e 94 ae 06 	call	0xd5c	; 0xd5c <__fixsfsi>
     aca:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__floatsisf>
     ace:	9b 01       	movw	r18, r22
     ad0:	ac 01       	movw	r20, r24
     ad2:	c7 01       	movw	r24, r14
     ad4:	b6 01       	movw	r22, r12
     ad6:	0e 94 ca 05 	call	0xb94	; 0xb94 <__subsf3>
     ada:	6b 01       	movw	r12, r22
     adc:	7c 01       	movw	r14, r24
     ade:	0e 94 ae 06 	call	0xd5c	; 0xd5c <__fixsfsi>
     ae2:	4b 01       	movw	r8, r22
     ae4:	5c 01       	movw	r10, r24
     ae6:	20 e0       	ldi	r18, 0x00	; 0
     ae8:	30 e0       	ldi	r19, 0x00	; 0
     aea:	40 e8       	ldi	r20, 0x80	; 128
     aec:	5f e3       	ldi	r21, 0x3F	; 63
     aee:	c7 01       	movw	r24, r14
     af0:	b6 01       	movw	r22, r12
     af2:	0e 94 f8 07 	call	0xff0	; 0xff0 <__gesf2>
     af6:	18 16       	cp	r1, r24
     af8:	bc f4       	brge	.+46     	; 0xb28 <Serial_Send_Float+0x13c>
     afa:	00 e0       	ldi	r16, 0x00	; 0
     afc:	10 e0       	ldi	r17, 0x00	; 0
     afe:	20 e0       	ldi	r18, 0x00	; 0
     b00:	30 e0       	ldi	r19, 0x00	; 0
     b02:	40 e2       	ldi	r20, 0x20	; 32
     b04:	51 e4       	ldi	r21, 0x41	; 65
     b06:	c7 01       	movw	r24, r14
     b08:	b6 01       	movw	r22, r12
     b0a:	0e 94 3c 06 	call	0xc78	; 0xc78 <__divsf3>
     b0e:	6b 01       	movw	r12, r22
     b10:	7c 01       	movw	r14, r24
     b12:	0f 5f       	subi	r16, 0xFF	; 255
     b14:	1f 4f       	sbci	r17, 0xFF	; 255
     b16:	20 e0       	ldi	r18, 0x00	; 0
     b18:	30 e0       	ldi	r19, 0x00	; 0
     b1a:	40 e8       	ldi	r20, 0x80	; 128
     b1c:	5f e3       	ldi	r21, 0x3F	; 63
     b1e:	0e 94 f8 07 	call	0xff0	; 0xff0 <__gesf2>
     b22:	18 16       	cp	r1, r24
     b24:	64 f3       	brlt	.-40     	; 0xafe <Serial_Send_Float+0x112>
     b26:	02 c0       	rjmp	.+4      	; 0xb2c <Serial_Send_Float+0x140>
     b28:	00 e0       	ldi	r16, 0x00	; 0
     b2a:	10 e0       	ldi	r17, 0x00	; 0
     b2c:	c0 1b       	sub	r28, r16
     b2e:	d1 0b       	sbc	r29, r17
     b30:	85 e0       	ldi	r24, 0x05	; 5
     b32:	91 e0       	ldi	r25, 0x01	; 1
     b34:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <Serial_Send_String>
     b38:	1c 16       	cp	r1, r28
     b3a:	1d 06       	cpc	r1, r29
     b3c:	54 f4       	brge	.+20     	; 0xb52 <Serial_Send_Float+0x166>
     b3e:	00 e0       	ldi	r16, 0x00	; 0
     b40:	10 e0       	ldi	r17, 0x00	; 0
     b42:	80 e3       	ldi	r24, 0x30	; 48
     b44:	0e 94 c8 03 	call	0x790	; 0x790 <Serial_Tx>
     b48:	0f 5f       	subi	r16, 0xFF	; 255
     b4a:	1f 4f       	sbci	r17, 0xFF	; 255
     b4c:	c0 17       	cp	r28, r16
     b4e:	d1 07       	cpc	r29, r17
     b50:	c1 f7       	brne	.-16     	; 0xb42 <Serial_Send_Float+0x156>
     b52:	75 01       	movw	r14, r10
     b54:	64 01       	movw	r12, r8
     b56:	ff 0c       	add	r15, r15
     b58:	cc 08       	sbc	r12, r12
     b5a:	dc 2c       	mov	r13, r12
     b5c:	76 01       	movw	r14, r12
     b5e:	28 2d       	mov	r18, r8
     b60:	39 2d       	mov	r19, r9
     b62:	4a 2d       	mov	r20, r10
     b64:	5b 2d       	mov	r21, r11
     b66:	6c 2d       	mov	r22, r12
     b68:	7c 2d       	mov	r23, r12
     b6a:	8c 2d       	mov	r24, r12
     b6c:	9c 2d       	mov	r25, r12
     b6e:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <Serial_Send_Int>
     b72:	df 91       	pop	r29
     b74:	cf 91       	pop	r28
     b76:	1f 91       	pop	r17
     b78:	0f 91       	pop	r16
     b7a:	ff 90       	pop	r15
     b7c:	ef 90       	pop	r14
     b7e:	df 90       	pop	r13
     b80:	cf 90       	pop	r12
     b82:	bf 90       	pop	r11
     b84:	af 90       	pop	r10
     b86:	9f 90       	pop	r9
     b88:	8f 90       	pop	r8
     b8a:	7f 90       	pop	r7
     b8c:	6f 90       	pop	r6
     b8e:	5f 90       	pop	r5
     b90:	4f 90       	pop	r4
     b92:	08 95       	ret

00000b94 <__subsf3>:
     b94:	50 58       	subi	r21, 0x80	; 128

00000b96 <__addsf3>:
     b96:	bb 27       	eor	r27, r27
     b98:	aa 27       	eor	r26, r26
     b9a:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__addsf3x>
     b9e:	0c 94 be 07 	jmp	0xf7c	; 0xf7c <__fp_round>
     ba2:	0e 94 b0 07 	call	0xf60	; 0xf60 <__fp_pscA>
     ba6:	38 f0       	brcs	.+14     	; 0xbb6 <__addsf3+0x20>
     ba8:	0e 94 b7 07 	call	0xf6e	; 0xf6e <__fp_pscB>
     bac:	20 f0       	brcs	.+8      	; 0xbb6 <__addsf3+0x20>
     bae:	39 f4       	brne	.+14     	; 0xbbe <__addsf3+0x28>
     bb0:	9f 3f       	cpi	r25, 0xFF	; 255
     bb2:	19 f4       	brne	.+6      	; 0xbba <__addsf3+0x24>
     bb4:	26 f4       	brtc	.+8      	; 0xbbe <__addsf3+0x28>
     bb6:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__fp_nan>
     bba:	0e f4       	brtc	.+2      	; 0xbbe <__addsf3+0x28>
     bbc:	e0 95       	com	r30
     bbe:	e7 fb       	bst	r30, 7
     bc0:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>

00000bc4 <__addsf3x>:
     bc4:	e9 2f       	mov	r30, r25
     bc6:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__fp_split3>
     bca:	58 f3       	brcs	.-42     	; 0xba2 <__addsf3+0xc>
     bcc:	ba 17       	cp	r27, r26
     bce:	62 07       	cpc	r22, r18
     bd0:	73 07       	cpc	r23, r19
     bd2:	84 07       	cpc	r24, r20
     bd4:	95 07       	cpc	r25, r21
     bd6:	20 f0       	brcs	.+8      	; 0xbe0 <__addsf3x+0x1c>
     bd8:	79 f4       	brne	.+30     	; 0xbf8 <__addsf3x+0x34>
     bda:	a6 f5       	brtc	.+104    	; 0xc44 <__addsf3x+0x80>
     bdc:	0c 94 f1 07 	jmp	0xfe2	; 0xfe2 <__fp_zero>
     be0:	0e f4       	brtc	.+2      	; 0xbe4 <__addsf3x+0x20>
     be2:	e0 95       	com	r30
     be4:	0b 2e       	mov	r0, r27
     be6:	ba 2f       	mov	r27, r26
     be8:	a0 2d       	mov	r26, r0
     bea:	0b 01       	movw	r0, r22
     bec:	b9 01       	movw	r22, r18
     bee:	90 01       	movw	r18, r0
     bf0:	0c 01       	movw	r0, r24
     bf2:	ca 01       	movw	r24, r20
     bf4:	a0 01       	movw	r20, r0
     bf6:	11 24       	eor	r1, r1
     bf8:	ff 27       	eor	r31, r31
     bfa:	59 1b       	sub	r21, r25
     bfc:	99 f0       	breq	.+38     	; 0xc24 <__addsf3x+0x60>
     bfe:	59 3f       	cpi	r21, 0xF9	; 249
     c00:	50 f4       	brcc	.+20     	; 0xc16 <__addsf3x+0x52>
     c02:	50 3e       	cpi	r21, 0xE0	; 224
     c04:	68 f1       	brcs	.+90     	; 0xc60 <__addsf3x+0x9c>
     c06:	1a 16       	cp	r1, r26
     c08:	f0 40       	sbci	r31, 0x00	; 0
     c0a:	a2 2f       	mov	r26, r18
     c0c:	23 2f       	mov	r18, r19
     c0e:	34 2f       	mov	r19, r20
     c10:	44 27       	eor	r20, r20
     c12:	58 5f       	subi	r21, 0xF8	; 248
     c14:	f3 cf       	rjmp	.-26     	; 0xbfc <__addsf3x+0x38>
     c16:	46 95       	lsr	r20
     c18:	37 95       	ror	r19
     c1a:	27 95       	ror	r18
     c1c:	a7 95       	ror	r26
     c1e:	f0 40       	sbci	r31, 0x00	; 0
     c20:	53 95       	inc	r21
     c22:	c9 f7       	brne	.-14     	; 0xc16 <__addsf3x+0x52>
     c24:	7e f4       	brtc	.+30     	; 0xc44 <__addsf3x+0x80>
     c26:	1f 16       	cp	r1, r31
     c28:	ba 0b       	sbc	r27, r26
     c2a:	62 0b       	sbc	r22, r18
     c2c:	73 0b       	sbc	r23, r19
     c2e:	84 0b       	sbc	r24, r20
     c30:	ba f0       	brmi	.+46     	; 0xc60 <__addsf3x+0x9c>
     c32:	91 50       	subi	r25, 0x01	; 1
     c34:	a1 f0       	breq	.+40     	; 0xc5e <__addsf3x+0x9a>
     c36:	ff 0f       	add	r31, r31
     c38:	bb 1f       	adc	r27, r27
     c3a:	66 1f       	adc	r22, r22
     c3c:	77 1f       	adc	r23, r23
     c3e:	88 1f       	adc	r24, r24
     c40:	c2 f7       	brpl	.-16     	; 0xc32 <__addsf3x+0x6e>
     c42:	0e c0       	rjmp	.+28     	; 0xc60 <__addsf3x+0x9c>
     c44:	ba 0f       	add	r27, r26
     c46:	62 1f       	adc	r22, r18
     c48:	73 1f       	adc	r23, r19
     c4a:	84 1f       	adc	r24, r20
     c4c:	48 f4       	brcc	.+18     	; 0xc60 <__addsf3x+0x9c>
     c4e:	87 95       	ror	r24
     c50:	77 95       	ror	r23
     c52:	67 95       	ror	r22
     c54:	b7 95       	ror	r27
     c56:	f7 95       	ror	r31
     c58:	9e 3f       	cpi	r25, 0xFE	; 254
     c5a:	08 f0       	brcs	.+2      	; 0xc5e <__addsf3x+0x9a>
     c5c:	b0 cf       	rjmp	.-160    	; 0xbbe <__addsf3+0x28>
     c5e:	93 95       	inc	r25
     c60:	88 0f       	add	r24, r24
     c62:	08 f0       	brcs	.+2      	; 0xc66 <__addsf3x+0xa2>
     c64:	99 27       	eor	r25, r25
     c66:	ee 0f       	add	r30, r30
     c68:	97 95       	ror	r25
     c6a:	87 95       	ror	r24
     c6c:	08 95       	ret

00000c6e <__cmpsf2>:
     c6e:	0e 94 75 07 	call	0xeea	; 0xeea <__fp_cmp>
     c72:	08 f4       	brcc	.+2      	; 0xc76 <__cmpsf2+0x8>
     c74:	81 e0       	ldi	r24, 0x01	; 1
     c76:	08 95       	ret

00000c78 <__divsf3>:
     c78:	0e 94 50 06 	call	0xca0	; 0xca0 <__divsf3x>
     c7c:	0c 94 be 07 	jmp	0xf7c	; 0xf7c <__fp_round>
     c80:	0e 94 b7 07 	call	0xf6e	; 0xf6e <__fp_pscB>
     c84:	58 f0       	brcs	.+22     	; 0xc9c <__divsf3+0x24>
     c86:	0e 94 b0 07 	call	0xf60	; 0xf60 <__fp_pscA>
     c8a:	40 f0       	brcs	.+16     	; 0xc9c <__divsf3+0x24>
     c8c:	29 f4       	brne	.+10     	; 0xc98 <__divsf3+0x20>
     c8e:	5f 3f       	cpi	r21, 0xFF	; 255
     c90:	29 f0       	breq	.+10     	; 0xc9c <__divsf3+0x24>
     c92:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
     c96:	51 11       	cpse	r21, r1
     c98:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_szero>
     c9c:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__fp_nan>

00000ca0 <__divsf3x>:
     ca0:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__fp_split3>
     ca4:	68 f3       	brcs	.-38     	; 0xc80 <__divsf3+0x8>

00000ca6 <__divsf3_pse>:
     ca6:	99 23       	and	r25, r25
     ca8:	b1 f3       	breq	.-20     	; 0xc96 <__divsf3+0x1e>
     caa:	55 23       	and	r21, r21
     cac:	91 f3       	breq	.-28     	; 0xc92 <__divsf3+0x1a>
     cae:	95 1b       	sub	r25, r21
     cb0:	55 0b       	sbc	r21, r21
     cb2:	bb 27       	eor	r27, r27
     cb4:	aa 27       	eor	r26, r26
     cb6:	62 17       	cp	r22, r18
     cb8:	73 07       	cpc	r23, r19
     cba:	84 07       	cpc	r24, r20
     cbc:	38 f0       	brcs	.+14     	; 0xccc <__divsf3_pse+0x26>
     cbe:	9f 5f       	subi	r25, 0xFF	; 255
     cc0:	5f 4f       	sbci	r21, 0xFF	; 255
     cc2:	22 0f       	add	r18, r18
     cc4:	33 1f       	adc	r19, r19
     cc6:	44 1f       	adc	r20, r20
     cc8:	aa 1f       	adc	r26, r26
     cca:	a9 f3       	breq	.-22     	; 0xcb6 <__divsf3_pse+0x10>
     ccc:	35 d0       	rcall	.+106    	; 0xd38 <__divsf3_pse+0x92>
     cce:	0e 2e       	mov	r0, r30
     cd0:	3a f0       	brmi	.+14     	; 0xce0 <__divsf3_pse+0x3a>
     cd2:	e0 e8       	ldi	r30, 0x80	; 128
     cd4:	32 d0       	rcall	.+100    	; 0xd3a <__divsf3_pse+0x94>
     cd6:	91 50       	subi	r25, 0x01	; 1
     cd8:	50 40       	sbci	r21, 0x00	; 0
     cda:	e6 95       	lsr	r30
     cdc:	00 1c       	adc	r0, r0
     cde:	ca f7       	brpl	.-14     	; 0xcd2 <__divsf3_pse+0x2c>
     ce0:	2b d0       	rcall	.+86     	; 0xd38 <__divsf3_pse+0x92>
     ce2:	fe 2f       	mov	r31, r30
     ce4:	29 d0       	rcall	.+82     	; 0xd38 <__divsf3_pse+0x92>
     ce6:	66 0f       	add	r22, r22
     ce8:	77 1f       	adc	r23, r23
     cea:	88 1f       	adc	r24, r24
     cec:	bb 1f       	adc	r27, r27
     cee:	26 17       	cp	r18, r22
     cf0:	37 07       	cpc	r19, r23
     cf2:	48 07       	cpc	r20, r24
     cf4:	ab 07       	cpc	r26, r27
     cf6:	b0 e8       	ldi	r27, 0x80	; 128
     cf8:	09 f0       	breq	.+2      	; 0xcfc <__divsf3_pse+0x56>
     cfa:	bb 0b       	sbc	r27, r27
     cfc:	80 2d       	mov	r24, r0
     cfe:	bf 01       	movw	r22, r30
     d00:	ff 27       	eor	r31, r31
     d02:	93 58       	subi	r25, 0x83	; 131
     d04:	5f 4f       	sbci	r21, 0xFF	; 255
     d06:	3a f0       	brmi	.+14     	; 0xd16 <__divsf3_pse+0x70>
     d08:	9e 3f       	cpi	r25, 0xFE	; 254
     d0a:	51 05       	cpc	r21, r1
     d0c:	78 f0       	brcs	.+30     	; 0xd2c <__divsf3_pse+0x86>
     d0e:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
     d12:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_szero>
     d16:	5f 3f       	cpi	r21, 0xFF	; 255
     d18:	e4 f3       	brlt	.-8      	; 0xd12 <__divsf3_pse+0x6c>
     d1a:	98 3e       	cpi	r25, 0xE8	; 232
     d1c:	d4 f3       	brlt	.-12     	; 0xd12 <__divsf3_pse+0x6c>
     d1e:	86 95       	lsr	r24
     d20:	77 95       	ror	r23
     d22:	67 95       	ror	r22
     d24:	b7 95       	ror	r27
     d26:	f7 95       	ror	r31
     d28:	9f 5f       	subi	r25, 0xFF	; 255
     d2a:	c9 f7       	brne	.-14     	; 0xd1e <__divsf3_pse+0x78>
     d2c:	88 0f       	add	r24, r24
     d2e:	91 1d       	adc	r25, r1
     d30:	96 95       	lsr	r25
     d32:	87 95       	ror	r24
     d34:	97 f9       	bld	r25, 7
     d36:	08 95       	ret
     d38:	e1 e0       	ldi	r30, 0x01	; 1
     d3a:	66 0f       	add	r22, r22
     d3c:	77 1f       	adc	r23, r23
     d3e:	88 1f       	adc	r24, r24
     d40:	bb 1f       	adc	r27, r27
     d42:	62 17       	cp	r22, r18
     d44:	73 07       	cpc	r23, r19
     d46:	84 07       	cpc	r24, r20
     d48:	ba 07       	cpc	r27, r26
     d4a:	20 f0       	brcs	.+8      	; 0xd54 <__divsf3_pse+0xae>
     d4c:	62 1b       	sub	r22, r18
     d4e:	73 0b       	sbc	r23, r19
     d50:	84 0b       	sbc	r24, r20
     d52:	ba 0b       	sbc	r27, r26
     d54:	ee 1f       	adc	r30, r30
     d56:	88 f7       	brcc	.-30     	; 0xd3a <__divsf3_pse+0x94>
     d58:	e0 95       	com	r30
     d5a:	08 95       	ret

00000d5c <__fixsfsi>:
     d5c:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__fixunssfsi>
     d60:	68 94       	set
     d62:	b1 11       	cpse	r27, r1
     d64:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_szero>
     d68:	08 95       	ret

00000d6a <__fixunssfsi>:
     d6a:	0e 94 d7 07 	call	0xfae	; 0xfae <__fp_splitA>
     d6e:	88 f0       	brcs	.+34     	; 0xd92 <__fixunssfsi+0x28>
     d70:	9f 57       	subi	r25, 0x7F	; 127
     d72:	98 f0       	brcs	.+38     	; 0xd9a <__fixunssfsi+0x30>
     d74:	b9 2f       	mov	r27, r25
     d76:	99 27       	eor	r25, r25
     d78:	b7 51       	subi	r27, 0x17	; 23
     d7a:	b0 f0       	brcs	.+44     	; 0xda8 <__fixunssfsi+0x3e>
     d7c:	e1 f0       	breq	.+56     	; 0xdb6 <__fixunssfsi+0x4c>
     d7e:	66 0f       	add	r22, r22
     d80:	77 1f       	adc	r23, r23
     d82:	88 1f       	adc	r24, r24
     d84:	99 1f       	adc	r25, r25
     d86:	1a f0       	brmi	.+6      	; 0xd8e <__fixunssfsi+0x24>
     d88:	ba 95       	dec	r27
     d8a:	c9 f7       	brne	.-14     	; 0xd7e <__fixunssfsi+0x14>
     d8c:	14 c0       	rjmp	.+40     	; 0xdb6 <__fixunssfsi+0x4c>
     d8e:	b1 30       	cpi	r27, 0x01	; 1
     d90:	91 f0       	breq	.+36     	; 0xdb6 <__fixunssfsi+0x4c>
     d92:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__fp_zero>
     d96:	b1 e0       	ldi	r27, 0x01	; 1
     d98:	08 95       	ret
     d9a:	0c 94 f1 07 	jmp	0xfe2	; 0xfe2 <__fp_zero>
     d9e:	67 2f       	mov	r22, r23
     da0:	78 2f       	mov	r23, r24
     da2:	88 27       	eor	r24, r24
     da4:	b8 5f       	subi	r27, 0xF8	; 248
     da6:	39 f0       	breq	.+14     	; 0xdb6 <__fixunssfsi+0x4c>
     da8:	b9 3f       	cpi	r27, 0xF9	; 249
     daa:	cc f3       	brlt	.-14     	; 0xd9e <__fixunssfsi+0x34>
     dac:	86 95       	lsr	r24
     dae:	77 95       	ror	r23
     db0:	67 95       	ror	r22
     db2:	b3 95       	inc	r27
     db4:	d9 f7       	brne	.-10     	; 0xdac <__fixunssfsi+0x42>
     db6:	3e f4       	brtc	.+14     	; 0xdc6 <__fixunssfsi+0x5c>
     db8:	90 95       	com	r25
     dba:	80 95       	com	r24
     dbc:	70 95       	com	r23
     dbe:	61 95       	neg	r22
     dc0:	7f 4f       	sbci	r23, 0xFF	; 255
     dc2:	8f 4f       	sbci	r24, 0xFF	; 255
     dc4:	9f 4f       	sbci	r25, 0xFF	; 255
     dc6:	08 95       	ret

00000dc8 <__floatunsisf>:
     dc8:	e8 94       	clt
     dca:	09 c0       	rjmp	.+18     	; 0xdde <__floatsisf+0x12>

00000dcc <__floatsisf>:
     dcc:	97 fb       	bst	r25, 7
     dce:	3e f4       	brtc	.+14     	; 0xdde <__floatsisf+0x12>
     dd0:	90 95       	com	r25
     dd2:	80 95       	com	r24
     dd4:	70 95       	com	r23
     dd6:	61 95       	neg	r22
     dd8:	7f 4f       	sbci	r23, 0xFF	; 255
     dda:	8f 4f       	sbci	r24, 0xFF	; 255
     ddc:	9f 4f       	sbci	r25, 0xFF	; 255
     dde:	99 23       	and	r25, r25
     de0:	a9 f0       	breq	.+42     	; 0xe0c <__floatsisf+0x40>
     de2:	f9 2f       	mov	r31, r25
     de4:	96 e9       	ldi	r25, 0x96	; 150
     de6:	bb 27       	eor	r27, r27
     de8:	93 95       	inc	r25
     dea:	f6 95       	lsr	r31
     dec:	87 95       	ror	r24
     dee:	77 95       	ror	r23
     df0:	67 95       	ror	r22
     df2:	b7 95       	ror	r27
     df4:	f1 11       	cpse	r31, r1
     df6:	f8 cf       	rjmp	.-16     	; 0xde8 <__floatsisf+0x1c>
     df8:	fa f4       	brpl	.+62     	; 0xe38 <__floatsisf+0x6c>
     dfa:	bb 0f       	add	r27, r27
     dfc:	11 f4       	brne	.+4      	; 0xe02 <__floatsisf+0x36>
     dfe:	60 ff       	sbrs	r22, 0
     e00:	1b c0       	rjmp	.+54     	; 0xe38 <__floatsisf+0x6c>
     e02:	6f 5f       	subi	r22, 0xFF	; 255
     e04:	7f 4f       	sbci	r23, 0xFF	; 255
     e06:	8f 4f       	sbci	r24, 0xFF	; 255
     e08:	9f 4f       	sbci	r25, 0xFF	; 255
     e0a:	16 c0       	rjmp	.+44     	; 0xe38 <__floatsisf+0x6c>
     e0c:	88 23       	and	r24, r24
     e0e:	11 f0       	breq	.+4      	; 0xe14 <__floatsisf+0x48>
     e10:	96 e9       	ldi	r25, 0x96	; 150
     e12:	11 c0       	rjmp	.+34     	; 0xe36 <__floatsisf+0x6a>
     e14:	77 23       	and	r23, r23
     e16:	21 f0       	breq	.+8      	; 0xe20 <__floatsisf+0x54>
     e18:	9e e8       	ldi	r25, 0x8E	; 142
     e1a:	87 2f       	mov	r24, r23
     e1c:	76 2f       	mov	r23, r22
     e1e:	05 c0       	rjmp	.+10     	; 0xe2a <__floatsisf+0x5e>
     e20:	66 23       	and	r22, r22
     e22:	71 f0       	breq	.+28     	; 0xe40 <__floatsisf+0x74>
     e24:	96 e8       	ldi	r25, 0x86	; 134
     e26:	86 2f       	mov	r24, r22
     e28:	70 e0       	ldi	r23, 0x00	; 0
     e2a:	60 e0       	ldi	r22, 0x00	; 0
     e2c:	2a f0       	brmi	.+10     	; 0xe38 <__floatsisf+0x6c>
     e2e:	9a 95       	dec	r25
     e30:	66 0f       	add	r22, r22
     e32:	77 1f       	adc	r23, r23
     e34:	88 1f       	adc	r24, r24
     e36:	da f7       	brpl	.-10     	; 0xe2e <__floatsisf+0x62>
     e38:	88 0f       	add	r24, r24
     e3a:	96 95       	lsr	r25
     e3c:	87 95       	ror	r24
     e3e:	97 f9       	bld	r25, 7
     e40:	08 95       	ret
     e42:	0e 94 b0 07 	call	0xf60	; 0xf60 <__fp_pscA>
     e46:	20 f0       	brcs	.+8      	; 0xe50 <__floatsisf+0x84>
     e48:	19 f0       	breq	.+6      	; 0xe50 <__floatsisf+0x84>
     e4a:	0e 94 b7 07 	call	0xf6e	; 0xf6e <__fp_pscB>
     e4e:	50 f4       	brcc	.+20     	; 0xe64 <fmod+0xc>
     e50:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__fp_nan>
     e54:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_szero>

00000e58 <fmod>:
     e58:	e9 2f       	mov	r30, r25
     e5a:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__fp_split3>
     e5e:	88 f3       	brcs	.-30     	; 0xe42 <__floatsisf+0x76>
     e60:	55 23       	and	r21, r21
     e62:	b1 f3       	breq	.-20     	; 0xe50 <__floatsisf+0x84>
     e64:	e7 fb       	bst	r30, 7
     e66:	62 17       	cp	r22, r18
     e68:	73 07       	cpc	r23, r19
     e6a:	84 07       	cpc	r24, r20
     e6c:	95 07       	cpc	r25, r21
     e6e:	a8 f1       	brcs	.+106    	; 0xeda <fmod+0x82>
     e70:	89 f3       	breq	.-30     	; 0xe54 <__floatsisf+0x88>
     e72:	e9 2f       	mov	r30, r25
     e74:	ff 27       	eor	r31, r31
     e76:	88 23       	and	r24, r24
     e78:	2a f0       	brmi	.+10     	; 0xe84 <fmod+0x2c>
     e7a:	31 97       	sbiw	r30, 0x01	; 1
     e7c:	66 0f       	add	r22, r22
     e7e:	77 1f       	adc	r23, r23
     e80:	88 1f       	adc	r24, r24
     e82:	da f7       	brpl	.-10     	; 0xe7a <fmod+0x22>
     e84:	95 2f       	mov	r25, r21
     e86:	55 27       	eor	r21, r21
     e88:	44 23       	and	r20, r20
     e8a:	32 f0       	brmi	.+12     	; 0xe98 <fmod+0x40>
     e8c:	91 50       	subi	r25, 0x01	; 1
     e8e:	50 40       	sbci	r21, 0x00	; 0
     e90:	22 0f       	add	r18, r18
     e92:	33 1f       	adc	r19, r19
     e94:	44 1f       	adc	r20, r20
     e96:	d2 f7       	brpl	.-12     	; 0xe8c <fmod+0x34>
     e98:	bb 27       	eor	r27, r27
     e9a:	e9 1b       	sub	r30, r25
     e9c:	f5 0b       	sbc	r31, r21
     e9e:	62 1b       	sub	r22, r18
     ea0:	73 0b       	sbc	r23, r19
     ea2:	84 0b       	sbc	r24, r20
     ea4:	b1 09       	sbc	r27, r1
     ea6:	b1 f2       	breq	.-84     	; 0xe54 <__floatsisf+0x88>
     ea8:	22 f4       	brpl	.+8      	; 0xeb2 <fmod+0x5a>
     eaa:	62 0f       	add	r22, r18
     eac:	73 1f       	adc	r23, r19
     eae:	84 1f       	adc	r24, r20
     eb0:	b1 1d       	adc	r27, r1
     eb2:	31 97       	sbiw	r30, 0x01	; 1
     eb4:	2a f0       	brmi	.+10     	; 0xec0 <fmod+0x68>
     eb6:	66 0f       	add	r22, r22
     eb8:	77 1f       	adc	r23, r23
     eba:	88 1f       	adc	r24, r24
     ebc:	bb 1f       	adc	r27, r27
     ebe:	ef cf       	rjmp	.-34     	; 0xe9e <fmod+0x46>
     ec0:	91 50       	subi	r25, 0x01	; 1
     ec2:	50 40       	sbci	r21, 0x00	; 0
     ec4:	62 f0       	brmi	.+24     	; 0xede <fmod+0x86>
     ec6:	41 f0       	breq	.+16     	; 0xed8 <fmod+0x80>
     ec8:	88 23       	and	r24, r24
     eca:	32 f0       	brmi	.+12     	; 0xed8 <fmod+0x80>
     ecc:	66 0f       	add	r22, r22
     ece:	77 1f       	adc	r23, r23
     ed0:	88 1f       	adc	r24, r24
     ed2:	91 50       	subi	r25, 0x01	; 1
     ed4:	50 40       	sbci	r21, 0x00	; 0
     ed6:	c1 f7       	brne	.-16     	; 0xec8 <fmod+0x70>
     ed8:	93 95       	inc	r25
     eda:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__fp_mpack>
     ede:	86 95       	lsr	r24
     ee0:	77 95       	ror	r23
     ee2:	67 95       	ror	r22
     ee4:	9f 5f       	subi	r25, 0xFF	; 255
     ee6:	d9 f7       	brne	.-10     	; 0xede <fmod+0x86>
     ee8:	f7 cf       	rjmp	.-18     	; 0xed8 <fmod+0x80>

00000eea <__fp_cmp>:
     eea:	99 0f       	add	r25, r25
     eec:	00 08       	sbc	r0, r0
     eee:	55 0f       	add	r21, r21
     ef0:	aa 0b       	sbc	r26, r26
     ef2:	e0 e8       	ldi	r30, 0x80	; 128
     ef4:	fe ef       	ldi	r31, 0xFE	; 254
     ef6:	16 16       	cp	r1, r22
     ef8:	17 06       	cpc	r1, r23
     efa:	e8 07       	cpc	r30, r24
     efc:	f9 07       	cpc	r31, r25
     efe:	c0 f0       	brcs	.+48     	; 0xf30 <__fp_cmp+0x46>
     f00:	12 16       	cp	r1, r18
     f02:	13 06       	cpc	r1, r19
     f04:	e4 07       	cpc	r30, r20
     f06:	f5 07       	cpc	r31, r21
     f08:	98 f0       	brcs	.+38     	; 0xf30 <__fp_cmp+0x46>
     f0a:	62 1b       	sub	r22, r18
     f0c:	73 0b       	sbc	r23, r19
     f0e:	84 0b       	sbc	r24, r20
     f10:	95 0b       	sbc	r25, r21
     f12:	39 f4       	brne	.+14     	; 0xf22 <__fp_cmp+0x38>
     f14:	0a 26       	eor	r0, r26
     f16:	61 f0       	breq	.+24     	; 0xf30 <__fp_cmp+0x46>
     f18:	23 2b       	or	r18, r19
     f1a:	24 2b       	or	r18, r20
     f1c:	25 2b       	or	r18, r21
     f1e:	21 f4       	brne	.+8      	; 0xf28 <__fp_cmp+0x3e>
     f20:	08 95       	ret
     f22:	0a 26       	eor	r0, r26
     f24:	09 f4       	brne	.+2      	; 0xf28 <__fp_cmp+0x3e>
     f26:	a1 40       	sbci	r26, 0x01	; 1
     f28:	a6 95       	lsr	r26
     f2a:	8f ef       	ldi	r24, 0xFF	; 255
     f2c:	81 1d       	adc	r24, r1
     f2e:	81 1d       	adc	r24, r1
     f30:	08 95       	ret

00000f32 <__fp_inf>:
     f32:	97 f9       	bld	r25, 7
     f34:	9f 67       	ori	r25, 0x7F	; 127
     f36:	80 e8       	ldi	r24, 0x80	; 128
     f38:	70 e0       	ldi	r23, 0x00	; 0
     f3a:	60 e0       	ldi	r22, 0x00	; 0
     f3c:	08 95       	ret

00000f3e <__fp_mpack>:
     f3e:	9f 3f       	cpi	r25, 0xFF	; 255
     f40:	31 f0       	breq	.+12     	; 0xf4e <__fp_mpack_finite+0xc>

00000f42 <__fp_mpack_finite>:
     f42:	91 50       	subi	r25, 0x01	; 1
     f44:	20 f4       	brcc	.+8      	; 0xf4e <__fp_mpack_finite+0xc>
     f46:	87 95       	ror	r24
     f48:	77 95       	ror	r23
     f4a:	67 95       	ror	r22
     f4c:	b7 95       	ror	r27
     f4e:	88 0f       	add	r24, r24
     f50:	91 1d       	adc	r25, r1
     f52:	96 95       	lsr	r25
     f54:	87 95       	ror	r24
     f56:	97 f9       	bld	r25, 7
     f58:	08 95       	ret

00000f5a <__fp_nan>:
     f5a:	9f ef       	ldi	r25, 0xFF	; 255
     f5c:	80 ec       	ldi	r24, 0xC0	; 192
     f5e:	08 95       	ret

00000f60 <__fp_pscA>:
     f60:	00 24       	eor	r0, r0
     f62:	0a 94       	dec	r0
     f64:	16 16       	cp	r1, r22
     f66:	17 06       	cpc	r1, r23
     f68:	18 06       	cpc	r1, r24
     f6a:	09 06       	cpc	r0, r25
     f6c:	08 95       	ret

00000f6e <__fp_pscB>:
     f6e:	00 24       	eor	r0, r0
     f70:	0a 94       	dec	r0
     f72:	12 16       	cp	r1, r18
     f74:	13 06       	cpc	r1, r19
     f76:	14 06       	cpc	r1, r20
     f78:	05 06       	cpc	r0, r21
     f7a:	08 95       	ret

00000f7c <__fp_round>:
     f7c:	09 2e       	mov	r0, r25
     f7e:	03 94       	inc	r0
     f80:	00 0c       	add	r0, r0
     f82:	11 f4       	brne	.+4      	; 0xf88 <__fp_round+0xc>
     f84:	88 23       	and	r24, r24
     f86:	52 f0       	brmi	.+20     	; 0xf9c <__fp_round+0x20>
     f88:	bb 0f       	add	r27, r27
     f8a:	40 f4       	brcc	.+16     	; 0xf9c <__fp_round+0x20>
     f8c:	bf 2b       	or	r27, r31
     f8e:	11 f4       	brne	.+4      	; 0xf94 <__fp_round+0x18>
     f90:	60 ff       	sbrs	r22, 0
     f92:	04 c0       	rjmp	.+8      	; 0xf9c <__fp_round+0x20>
     f94:	6f 5f       	subi	r22, 0xFF	; 255
     f96:	7f 4f       	sbci	r23, 0xFF	; 255
     f98:	8f 4f       	sbci	r24, 0xFF	; 255
     f9a:	9f 4f       	sbci	r25, 0xFF	; 255
     f9c:	08 95       	ret

00000f9e <__fp_split3>:
     f9e:	57 fd       	sbrc	r21, 7
     fa0:	90 58       	subi	r25, 0x80	; 128
     fa2:	44 0f       	add	r20, r20
     fa4:	55 1f       	adc	r21, r21
     fa6:	59 f0       	breq	.+22     	; 0xfbe <__fp_splitA+0x10>
     fa8:	5f 3f       	cpi	r21, 0xFF	; 255
     faa:	71 f0       	breq	.+28     	; 0xfc8 <__fp_splitA+0x1a>
     fac:	47 95       	ror	r20

00000fae <__fp_splitA>:
     fae:	88 0f       	add	r24, r24
     fb0:	97 fb       	bst	r25, 7
     fb2:	99 1f       	adc	r25, r25
     fb4:	61 f0       	breq	.+24     	; 0xfce <__fp_splitA+0x20>
     fb6:	9f 3f       	cpi	r25, 0xFF	; 255
     fb8:	79 f0       	breq	.+30     	; 0xfd8 <__fp_splitA+0x2a>
     fba:	87 95       	ror	r24
     fbc:	08 95       	ret
     fbe:	12 16       	cp	r1, r18
     fc0:	13 06       	cpc	r1, r19
     fc2:	14 06       	cpc	r1, r20
     fc4:	55 1f       	adc	r21, r21
     fc6:	f2 cf       	rjmp	.-28     	; 0xfac <__fp_split3+0xe>
     fc8:	46 95       	lsr	r20
     fca:	f1 df       	rcall	.-30     	; 0xfae <__fp_splitA>
     fcc:	08 c0       	rjmp	.+16     	; 0xfde <__fp_splitA+0x30>
     fce:	16 16       	cp	r1, r22
     fd0:	17 06       	cpc	r1, r23
     fd2:	18 06       	cpc	r1, r24
     fd4:	99 1f       	adc	r25, r25
     fd6:	f1 cf       	rjmp	.-30     	; 0xfba <__fp_splitA+0xc>
     fd8:	86 95       	lsr	r24
     fda:	71 05       	cpc	r23, r1
     fdc:	61 05       	cpc	r22, r1
     fde:	08 94       	sec
     fe0:	08 95       	ret

00000fe2 <__fp_zero>:
     fe2:	e8 94       	clt

00000fe4 <__fp_szero>:
     fe4:	bb 27       	eor	r27, r27
     fe6:	66 27       	eor	r22, r22
     fe8:	77 27       	eor	r23, r23
     fea:	cb 01       	movw	r24, r22
     fec:	97 f9       	bld	r25, 7
     fee:	08 95       	ret

00000ff0 <__gesf2>:
     ff0:	0e 94 75 07 	call	0xeea	; 0xeea <__fp_cmp>
     ff4:	08 f4       	brcc	.+2      	; 0xff8 <__gesf2+0x8>
     ff6:	8f ef       	ldi	r24, 0xFF	; 255
     ff8:	08 95       	ret

00000ffa <__mulsf3>:
     ffa:	0e 94 10 08 	call	0x1020	; 0x1020 <__mulsf3x>
     ffe:	0c 94 be 07 	jmp	0xf7c	; 0xf7c <__fp_round>
    1002:	0e 94 b0 07 	call	0xf60	; 0xf60 <__fp_pscA>
    1006:	38 f0       	brcs	.+14     	; 0x1016 <__mulsf3+0x1c>
    1008:	0e 94 b7 07 	call	0xf6e	; 0xf6e <__fp_pscB>
    100c:	20 f0       	brcs	.+8      	; 0x1016 <__mulsf3+0x1c>
    100e:	95 23       	and	r25, r21
    1010:	11 f0       	breq	.+4      	; 0x1016 <__mulsf3+0x1c>
    1012:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
    1016:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__fp_nan>
    101a:	11 24       	eor	r1, r1
    101c:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_szero>

00001020 <__mulsf3x>:
    1020:	0e 94 cf 07 	call	0xf9e	; 0xf9e <__fp_split3>
    1024:	70 f3       	brcs	.-36     	; 0x1002 <__mulsf3+0x8>

00001026 <__mulsf3_pse>:
    1026:	95 9f       	mul	r25, r21
    1028:	c1 f3       	breq	.-16     	; 0x101a <__mulsf3+0x20>
    102a:	95 0f       	add	r25, r21
    102c:	50 e0       	ldi	r21, 0x00	; 0
    102e:	55 1f       	adc	r21, r21
    1030:	62 9f       	mul	r22, r18
    1032:	f0 01       	movw	r30, r0
    1034:	72 9f       	mul	r23, r18
    1036:	bb 27       	eor	r27, r27
    1038:	f0 0d       	add	r31, r0
    103a:	b1 1d       	adc	r27, r1
    103c:	63 9f       	mul	r22, r19
    103e:	aa 27       	eor	r26, r26
    1040:	f0 0d       	add	r31, r0
    1042:	b1 1d       	adc	r27, r1
    1044:	aa 1f       	adc	r26, r26
    1046:	64 9f       	mul	r22, r20
    1048:	66 27       	eor	r22, r22
    104a:	b0 0d       	add	r27, r0
    104c:	a1 1d       	adc	r26, r1
    104e:	66 1f       	adc	r22, r22
    1050:	82 9f       	mul	r24, r18
    1052:	22 27       	eor	r18, r18
    1054:	b0 0d       	add	r27, r0
    1056:	a1 1d       	adc	r26, r1
    1058:	62 1f       	adc	r22, r18
    105a:	73 9f       	mul	r23, r19
    105c:	b0 0d       	add	r27, r0
    105e:	a1 1d       	adc	r26, r1
    1060:	62 1f       	adc	r22, r18
    1062:	83 9f       	mul	r24, r19
    1064:	a0 0d       	add	r26, r0
    1066:	61 1d       	adc	r22, r1
    1068:	22 1f       	adc	r18, r18
    106a:	74 9f       	mul	r23, r20
    106c:	33 27       	eor	r19, r19
    106e:	a0 0d       	add	r26, r0
    1070:	61 1d       	adc	r22, r1
    1072:	23 1f       	adc	r18, r19
    1074:	84 9f       	mul	r24, r20
    1076:	60 0d       	add	r22, r0
    1078:	21 1d       	adc	r18, r1
    107a:	82 2f       	mov	r24, r18
    107c:	76 2f       	mov	r23, r22
    107e:	6a 2f       	mov	r22, r26
    1080:	11 24       	eor	r1, r1
    1082:	9f 57       	subi	r25, 0x7F	; 127
    1084:	50 40       	sbci	r21, 0x00	; 0
    1086:	9a f0       	brmi	.+38     	; 0x10ae <__mulsf3_pse+0x88>
    1088:	f1 f0       	breq	.+60     	; 0x10c6 <__mulsf3_pse+0xa0>
    108a:	88 23       	and	r24, r24
    108c:	4a f0       	brmi	.+18     	; 0x10a0 <__mulsf3_pse+0x7a>
    108e:	ee 0f       	add	r30, r30
    1090:	ff 1f       	adc	r31, r31
    1092:	bb 1f       	adc	r27, r27
    1094:	66 1f       	adc	r22, r22
    1096:	77 1f       	adc	r23, r23
    1098:	88 1f       	adc	r24, r24
    109a:	91 50       	subi	r25, 0x01	; 1
    109c:	50 40       	sbci	r21, 0x00	; 0
    109e:	a9 f7       	brne	.-22     	; 0x108a <__mulsf3_pse+0x64>
    10a0:	9e 3f       	cpi	r25, 0xFE	; 254
    10a2:	51 05       	cpc	r21, r1
    10a4:	80 f0       	brcs	.+32     	; 0x10c6 <__mulsf3_pse+0xa0>
    10a6:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
    10aa:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_szero>
    10ae:	5f 3f       	cpi	r21, 0xFF	; 255
    10b0:	e4 f3       	brlt	.-8      	; 0x10aa <__mulsf3_pse+0x84>
    10b2:	98 3e       	cpi	r25, 0xE8	; 232
    10b4:	d4 f3       	brlt	.-12     	; 0x10aa <__mulsf3_pse+0x84>
    10b6:	86 95       	lsr	r24
    10b8:	77 95       	ror	r23
    10ba:	67 95       	ror	r22
    10bc:	b7 95       	ror	r27
    10be:	f7 95       	ror	r31
    10c0:	e7 95       	ror	r30
    10c2:	9f 5f       	subi	r25, 0xFF	; 255
    10c4:	c1 f7       	brne	.-16     	; 0x10b6 <__mulsf3_pse+0x90>
    10c6:	fe 2b       	or	r31, r30
    10c8:	88 0f       	add	r24, r24
    10ca:	91 1d       	adc	r25, r1
    10cc:	96 95       	lsr	r25
    10ce:	87 95       	ror	r24
    10d0:	97 f9       	bld	r25, 7
    10d2:	08 95       	ret

000010d4 <pow>:
    10d4:	fa 01       	movw	r30, r20
    10d6:	ee 0f       	add	r30, r30
    10d8:	ff 1f       	adc	r31, r31
    10da:	30 96       	adiw	r30, 0x00	; 0
    10dc:	21 05       	cpc	r18, r1
    10de:	31 05       	cpc	r19, r1
    10e0:	a1 f1       	breq	.+104    	; 0x114a <pow+0x76>
    10e2:	61 15       	cp	r22, r1
    10e4:	71 05       	cpc	r23, r1
    10e6:	61 f4       	brne	.+24     	; 0x1100 <pow+0x2c>
    10e8:	80 38       	cpi	r24, 0x80	; 128
    10ea:	bf e3       	ldi	r27, 0x3F	; 63
    10ec:	9b 07       	cpc	r25, r27
    10ee:	49 f1       	breq	.+82     	; 0x1142 <pow+0x6e>
    10f0:	68 94       	set
    10f2:	90 38       	cpi	r25, 0x80	; 128
    10f4:	81 05       	cpc	r24, r1
    10f6:	61 f0       	breq	.+24     	; 0x1110 <pow+0x3c>
    10f8:	80 38       	cpi	r24, 0x80	; 128
    10fa:	bf ef       	ldi	r27, 0xFF	; 255
    10fc:	9b 07       	cpc	r25, r27
    10fe:	41 f0       	breq	.+16     	; 0x1110 <pow+0x3c>
    1100:	99 23       	and	r25, r25
    1102:	4a f5       	brpl	.+82     	; 0x1156 <pow+0x82>
    1104:	ff 3f       	cpi	r31, 0xFF	; 255
    1106:	e1 05       	cpc	r30, r1
    1108:	31 05       	cpc	r19, r1
    110a:	21 05       	cpc	r18, r1
    110c:	19 f1       	breq	.+70     	; 0x1154 <pow+0x80>
    110e:	e8 94       	clt
    1110:	08 94       	sec
    1112:	e7 95       	ror	r30
    1114:	d9 01       	movw	r26, r18
    1116:	aa 23       	and	r26, r26
    1118:	29 f4       	brne	.+10     	; 0x1124 <pow+0x50>
    111a:	ab 2f       	mov	r26, r27
    111c:	be 2f       	mov	r27, r30
    111e:	f8 5f       	subi	r31, 0xF8	; 248
    1120:	d0 f3       	brcs	.-12     	; 0x1116 <pow+0x42>
    1122:	10 c0       	rjmp	.+32     	; 0x1144 <pow+0x70>
    1124:	ff 5f       	subi	r31, 0xFF	; 255
    1126:	70 f4       	brcc	.+28     	; 0x1144 <pow+0x70>
    1128:	a6 95       	lsr	r26
    112a:	e0 f7       	brcc	.-8      	; 0x1124 <pow+0x50>
    112c:	f7 39       	cpi	r31, 0x97	; 151
    112e:	50 f0       	brcs	.+20     	; 0x1144 <pow+0x70>
    1130:	19 f0       	breq	.+6      	; 0x1138 <pow+0x64>
    1132:	ff 3a       	cpi	r31, 0xAF	; 175
    1134:	38 f4       	brcc	.+14     	; 0x1144 <pow+0x70>
    1136:	9f 77       	andi	r25, 0x7F	; 127
    1138:	9f 93       	push	r25
    113a:	0d d0       	rcall	.+26     	; 0x1156 <pow+0x82>
    113c:	0f 90       	pop	r0
    113e:	07 fc       	sbrc	r0, 7
    1140:	90 58       	subi	r25, 0x80	; 128
    1142:	08 95       	ret
    1144:	46 f0       	brts	.+16     	; 0x1156 <pow+0x82>
    1146:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__fp_nan>
    114a:	60 e0       	ldi	r22, 0x00	; 0
    114c:	70 e0       	ldi	r23, 0x00	; 0
    114e:	80 e8       	ldi	r24, 0x80	; 128
    1150:	9f e3       	ldi	r25, 0x3F	; 63
    1152:	08 95       	ret
    1154:	4f e7       	ldi	r20, 0x7F	; 127
    1156:	9f 77       	andi	r25, 0x7F	; 127
    1158:	5f 93       	push	r21
    115a:	4f 93       	push	r20
    115c:	3f 93       	push	r19
    115e:	2f 93       	push	r18
    1160:	0e 94 65 09 	call	0x12ca	; 0x12ca <log>
    1164:	2f 91       	pop	r18
    1166:	3f 91       	pop	r19
    1168:	4f 91       	pop	r20
    116a:	5f 91       	pop	r21
    116c:	0e 94 fd 07 	call	0xffa	; 0xffa <__mulsf3>
    1170:	0c 94 c2 08 	jmp	0x1184	; 0x1184 <exp>
    1174:	29 f4       	brne	.+10     	; 0x1180 <pow+0xac>
    1176:	16 f0       	brts	.+4      	; 0x117c <pow+0xa8>
    1178:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
    117c:	0c 94 f1 07 	jmp	0xfe2	; 0xfe2 <__fp_zero>
    1180:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__fp_nan>

00001184 <exp>:
    1184:	0e 94 d7 07 	call	0xfae	; 0xfae <__fp_splitA>
    1188:	a8 f3       	brcs	.-22     	; 0x1174 <pow+0xa0>
    118a:	96 38       	cpi	r25, 0x86	; 134
    118c:	a0 f7       	brcc	.-24     	; 0x1176 <pow+0xa2>
    118e:	07 f8       	bld	r0, 7
    1190:	0f 92       	push	r0
    1192:	e8 94       	clt
    1194:	2b e3       	ldi	r18, 0x3B	; 59
    1196:	3a ea       	ldi	r19, 0xAA	; 170
    1198:	48 eb       	ldi	r20, 0xB8	; 184
    119a:	5f e7       	ldi	r21, 0x7F	; 127
    119c:	0e 94 13 08 	call	0x1026	; 0x1026 <__mulsf3_pse>
    11a0:	0f 92       	push	r0
    11a2:	0f 92       	push	r0
    11a4:	0f 92       	push	r0
    11a6:	4d b7       	in	r20, 0x3d	; 61
    11a8:	5e b7       	in	r21, 0x3e	; 62
    11aa:	0f 92       	push	r0
    11ac:	0e 94 ad 09 	call	0x135a	; 0x135a <modf>
    11b0:	e8 e6       	ldi	r30, 0x68	; 104
    11b2:	f0 e0       	ldi	r31, 0x00	; 0
    11b4:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <__fp_powser>
    11b8:	4f 91       	pop	r20
    11ba:	5f 91       	pop	r21
    11bc:	ef 91       	pop	r30
    11be:	ff 91       	pop	r31
    11c0:	e5 95       	asr	r30
    11c2:	ee 1f       	adc	r30, r30
    11c4:	ff 1f       	adc	r31, r31
    11c6:	49 f0       	breq	.+18     	; 0x11da <exp+0x56>
    11c8:	fe 57       	subi	r31, 0x7E	; 126
    11ca:	e0 68       	ori	r30, 0x80	; 128
    11cc:	44 27       	eor	r20, r20
    11ce:	ee 0f       	add	r30, r30
    11d0:	44 1f       	adc	r20, r20
    11d2:	fa 95       	dec	r31
    11d4:	e1 f7       	brne	.-8      	; 0x11ce <exp+0x4a>
    11d6:	41 95       	neg	r20
    11d8:	55 0b       	sbc	r21, r21
    11da:	0e 94 27 09 	call	0x124e	; 0x124e <ldexp>
    11de:	0f 90       	pop	r0
    11e0:	07 fe       	sbrs	r0, 7
    11e2:	0c 94 1b 09 	jmp	0x1236	; 0x1236 <inverse>
    11e6:	08 95       	ret

000011e8 <__fp_powser>:
    11e8:	df 93       	push	r29
    11ea:	cf 93       	push	r28
    11ec:	1f 93       	push	r17
    11ee:	0f 93       	push	r16
    11f0:	ff 92       	push	r15
    11f2:	ef 92       	push	r14
    11f4:	df 92       	push	r13
    11f6:	7b 01       	movw	r14, r22
    11f8:	8c 01       	movw	r16, r24
    11fa:	68 94       	set
    11fc:	06 c0       	rjmp	.+12     	; 0x120a <__fp_powser+0x22>
    11fe:	da 2e       	mov	r13, r26
    1200:	ef 01       	movw	r28, r30
    1202:	0e 94 10 08 	call	0x1020	; 0x1020 <__mulsf3x>
    1206:	fe 01       	movw	r30, r28
    1208:	e8 94       	clt
    120a:	a5 91       	lpm	r26, Z+
    120c:	25 91       	lpm	r18, Z+
    120e:	35 91       	lpm	r19, Z+
    1210:	45 91       	lpm	r20, Z+
    1212:	55 91       	lpm	r21, Z+
    1214:	a6 f3       	brts	.-24     	; 0x11fe <__fp_powser+0x16>
    1216:	ef 01       	movw	r28, r30
    1218:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__addsf3x>
    121c:	fe 01       	movw	r30, r28
    121e:	97 01       	movw	r18, r14
    1220:	a8 01       	movw	r20, r16
    1222:	da 94       	dec	r13
    1224:	69 f7       	brne	.-38     	; 0x1200 <__fp_powser+0x18>
    1226:	df 90       	pop	r13
    1228:	ef 90       	pop	r14
    122a:	ff 90       	pop	r15
    122c:	0f 91       	pop	r16
    122e:	1f 91       	pop	r17
    1230:	cf 91       	pop	r28
    1232:	df 91       	pop	r29
    1234:	08 95       	ret

00001236 <inverse>:
    1236:	9b 01       	movw	r18, r22
    1238:	ac 01       	movw	r20, r24
    123a:	60 e0       	ldi	r22, 0x00	; 0
    123c:	70 e0       	ldi	r23, 0x00	; 0
    123e:	80 e8       	ldi	r24, 0x80	; 128
    1240:	9f e3       	ldi	r25, 0x3F	; 63
    1242:	0c 94 3c 06 	jmp	0xc78	; 0xc78 <__divsf3>
    1246:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>
    124a:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__fp_mpack>

0000124e <ldexp>:
    124e:	0e 94 d7 07 	call	0xfae	; 0xfae <__fp_splitA>
    1252:	d8 f3       	brcs	.-10     	; 0x124a <inverse+0x14>
    1254:	99 23       	and	r25, r25
    1256:	c9 f3       	breq	.-14     	; 0x124a <inverse+0x14>
    1258:	94 0f       	add	r25, r20
    125a:	51 1d       	adc	r21, r1
    125c:	a3 f3       	brvs	.-24     	; 0x1246 <inverse+0x10>
    125e:	91 50       	subi	r25, 0x01	; 1
    1260:	50 40       	sbci	r21, 0x00	; 0
    1262:	94 f0       	brlt	.+36     	; 0x1288 <ldexp+0x3a>
    1264:	59 f0       	breq	.+22     	; 0x127c <ldexp+0x2e>
    1266:	88 23       	and	r24, r24
    1268:	32 f0       	brmi	.+12     	; 0x1276 <ldexp+0x28>
    126a:	66 0f       	add	r22, r22
    126c:	77 1f       	adc	r23, r23
    126e:	88 1f       	adc	r24, r24
    1270:	91 50       	subi	r25, 0x01	; 1
    1272:	50 40       	sbci	r21, 0x00	; 0
    1274:	c1 f7       	brne	.-16     	; 0x1266 <ldexp+0x18>
    1276:	9e 3f       	cpi	r25, 0xFE	; 254
    1278:	51 05       	cpc	r21, r1
    127a:	2c f7       	brge	.-54     	; 0x1246 <inverse+0x10>
    127c:	88 0f       	add	r24, r24
    127e:	91 1d       	adc	r25, r1
    1280:	96 95       	lsr	r25
    1282:	87 95       	ror	r24
    1284:	97 f9       	bld	r25, 7
    1286:	08 95       	ret
    1288:	5f 3f       	cpi	r21, 0xFF	; 255
    128a:	ac f0       	brlt	.+42     	; 0x12b6 <ldexp+0x68>
    128c:	98 3e       	cpi	r25, 0xE8	; 232
    128e:	9c f0       	brlt	.+38     	; 0x12b6 <ldexp+0x68>
    1290:	bb 27       	eor	r27, r27
    1292:	86 95       	lsr	r24
    1294:	77 95       	ror	r23
    1296:	67 95       	ror	r22
    1298:	b7 95       	ror	r27
    129a:	08 f4       	brcc	.+2      	; 0x129e <ldexp+0x50>
    129c:	b1 60       	ori	r27, 0x01	; 1
    129e:	93 95       	inc	r25
    12a0:	c1 f7       	brne	.-16     	; 0x1292 <ldexp+0x44>
    12a2:	bb 0f       	add	r27, r27
    12a4:	58 f7       	brcc	.-42     	; 0x127c <ldexp+0x2e>
    12a6:	11 f4       	brne	.+4      	; 0x12ac <ldexp+0x5e>
    12a8:	60 ff       	sbrs	r22, 0
    12aa:	e8 cf       	rjmp	.-48     	; 0x127c <ldexp+0x2e>
    12ac:	6f 5f       	subi	r22, 0xFF	; 255
    12ae:	7f 4f       	sbci	r23, 0xFF	; 255
    12b0:	8f 4f       	sbci	r24, 0xFF	; 255
    12b2:	9f 4f       	sbci	r25, 0xFF	; 255
    12b4:	e3 cf       	rjmp	.-58     	; 0x127c <ldexp+0x2e>
    12b6:	0c 94 f2 07 	jmp	0xfe4	; 0xfe4 <__fp_szero>
    12ba:	16 f0       	brts	.+4      	; 0x12c0 <ldexp+0x72>
    12bc:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__fp_mpack>
    12c0:	0c 94 ad 07 	jmp	0xf5a	; 0xf5a <__fp_nan>
    12c4:	68 94       	set
    12c6:	0c 94 99 07 	jmp	0xf32	; 0xf32 <__fp_inf>

000012ca <log>:
    12ca:	0e 94 d7 07 	call	0xfae	; 0xfae <__fp_splitA>
    12ce:	a8 f3       	brcs	.-22     	; 0x12ba <ldexp+0x6c>
    12d0:	99 23       	and	r25, r25
    12d2:	c1 f3       	breq	.-16     	; 0x12c4 <ldexp+0x76>
    12d4:	ae f3       	brts	.-22     	; 0x12c0 <ldexp+0x72>
    12d6:	df 93       	push	r29
    12d8:	cf 93       	push	r28
    12da:	1f 93       	push	r17
    12dc:	0f 93       	push	r16
    12de:	ff 92       	push	r15
    12e0:	c9 2f       	mov	r28, r25
    12e2:	dd 27       	eor	r29, r29
    12e4:	88 23       	and	r24, r24
    12e6:	2a f0       	brmi	.+10     	; 0x12f2 <log+0x28>
    12e8:	21 97       	sbiw	r28, 0x01	; 1
    12ea:	66 0f       	add	r22, r22
    12ec:	77 1f       	adc	r23, r23
    12ee:	88 1f       	adc	r24, r24
    12f0:	da f7       	brpl	.-10     	; 0x12e8 <log+0x1e>
    12f2:	20 e0       	ldi	r18, 0x00	; 0
    12f4:	30 e0       	ldi	r19, 0x00	; 0
    12f6:	40 e8       	ldi	r20, 0x80	; 128
    12f8:	5f eb       	ldi	r21, 0xBF	; 191
    12fa:	9f e3       	ldi	r25, 0x3F	; 63
    12fc:	88 39       	cpi	r24, 0x98	; 152
    12fe:	20 f0       	brcs	.+8      	; 0x1308 <log+0x3e>
    1300:	80 3e       	cpi	r24, 0xE0	; 224
    1302:	38 f0       	brcs	.+14     	; 0x1312 <log+0x48>
    1304:	21 96       	adiw	r28, 0x01	; 1
    1306:	8f 77       	andi	r24, 0x7F	; 127
    1308:	0e 94 cb 05 	call	0xb96	; 0xb96 <__addsf3>
    130c:	e0 e9       	ldi	r30, 0x90	; 144
    130e:	f0 e0       	ldi	r31, 0x00	; 0
    1310:	04 c0       	rjmp	.+8      	; 0x131a <log+0x50>
    1312:	0e 94 cb 05 	call	0xb96	; 0xb96 <__addsf3>
    1316:	ed eb       	ldi	r30, 0xBD	; 189
    1318:	f0 e0       	ldi	r31, 0x00	; 0
    131a:	0e 94 f4 08 	call	0x11e8	; 0x11e8 <__fp_powser>
    131e:	8b 01       	movw	r16, r22
    1320:	be 01       	movw	r22, r28
    1322:	ec 01       	movw	r28, r24
    1324:	fb 2e       	mov	r15, r27
    1326:	6f 57       	subi	r22, 0x7F	; 127
    1328:	71 09       	sbc	r23, r1
    132a:	75 95       	asr	r23
    132c:	77 1f       	adc	r23, r23
    132e:	88 0b       	sbc	r24, r24
    1330:	99 0b       	sbc	r25, r25
    1332:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__floatsisf>
    1336:	28 e1       	ldi	r18, 0x18	; 24
    1338:	32 e7       	ldi	r19, 0x72	; 114
    133a:	41 e3       	ldi	r20, 0x31	; 49
    133c:	5f e3       	ldi	r21, 0x3F	; 63
    133e:	0e 94 10 08 	call	0x1020	; 0x1020 <__mulsf3x>
    1342:	af 2d       	mov	r26, r15
    1344:	98 01       	movw	r18, r16
    1346:	ae 01       	movw	r20, r28
    1348:	ff 90       	pop	r15
    134a:	0f 91       	pop	r16
    134c:	1f 91       	pop	r17
    134e:	cf 91       	pop	r28
    1350:	df 91       	pop	r29
    1352:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__addsf3x>
    1356:	0c 94 be 07 	jmp	0xf7c	; 0xf7c <__fp_round>

0000135a <modf>:
    135a:	fa 01       	movw	r30, r20
    135c:	dc 01       	movw	r26, r24
    135e:	aa 0f       	add	r26, r26
    1360:	bb 1f       	adc	r27, r27
    1362:	9b 01       	movw	r18, r22
    1364:	ac 01       	movw	r20, r24
    1366:	bf 57       	subi	r27, 0x7F	; 127
    1368:	28 f4       	brcc	.+10     	; 0x1374 <modf+0x1a>
    136a:	22 27       	eor	r18, r18
    136c:	33 27       	eor	r19, r19
    136e:	44 27       	eor	r20, r20
    1370:	50 78       	andi	r21, 0x80	; 128
    1372:	20 c0       	rjmp	.+64     	; 0x13b4 <modf+0x5a>
    1374:	b7 51       	subi	r27, 0x17	; 23
    1376:	90 f4       	brcc	.+36     	; 0x139c <modf+0x42>
    1378:	ab 2f       	mov	r26, r27
    137a:	00 24       	eor	r0, r0
    137c:	46 95       	lsr	r20
    137e:	37 95       	ror	r19
    1380:	27 95       	ror	r18
    1382:	01 1c       	adc	r0, r1
    1384:	a3 95       	inc	r26
    1386:	d2 f3       	brmi	.-12     	; 0x137c <modf+0x22>
    1388:	00 20       	and	r0, r0
    138a:	71 f0       	breq	.+28     	; 0x13a8 <modf+0x4e>
    138c:	22 0f       	add	r18, r18
    138e:	33 1f       	adc	r19, r19
    1390:	44 1f       	adc	r20, r20
    1392:	b3 95       	inc	r27
    1394:	da f3       	brmi	.-10     	; 0x138c <modf+0x32>
    1396:	0e d0       	rcall	.+28     	; 0x13b4 <modf+0x5a>
    1398:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__subsf3>
    139c:	61 30       	cpi	r22, 0x01	; 1
    139e:	71 05       	cpc	r23, r1
    13a0:	a0 e8       	ldi	r26, 0x80	; 128
    13a2:	8a 07       	cpc	r24, r26
    13a4:	b9 46       	sbci	r27, 0x69	; 105
    13a6:	30 f4       	brcc	.+12     	; 0x13b4 <modf+0x5a>
    13a8:	9b 01       	movw	r18, r22
    13aa:	ac 01       	movw	r20, r24
    13ac:	66 27       	eor	r22, r22
    13ae:	77 27       	eor	r23, r23
    13b0:	88 27       	eor	r24, r24
    13b2:	90 78       	andi	r25, 0x80	; 128
    13b4:	30 96       	adiw	r30, 0x00	; 0
    13b6:	21 f0       	breq	.+8      	; 0x13c0 <modf+0x66>
    13b8:	20 83       	st	Z, r18
    13ba:	31 83       	std	Z+1, r19	; 0x01
    13bc:	42 83       	std	Z+2, r20	; 0x02
    13be:	53 83       	std	Z+3, r21	; 0x03
    13c0:	08 95       	ret

000013c2 <__muluhisi3>:
    13c2:	0e 94 cf 0a 	call	0x159e	; 0x159e <__umulhisi3>
    13c6:	a5 9f       	mul	r26, r21
    13c8:	90 0d       	add	r25, r0
    13ca:	b4 9f       	mul	r27, r20
    13cc:	90 0d       	add	r25, r0
    13ce:	a4 9f       	mul	r26, r20
    13d0:	80 0d       	add	r24, r0
    13d2:	91 1d       	adc	r25, r1
    13d4:	11 24       	eor	r1, r1
    13d6:	08 95       	ret

000013d8 <__moddi3>:
    13d8:	68 94       	set
    13da:	01 c0       	rjmp	.+2      	; 0x13de <__divdi3_moddi3>

000013dc <__divdi3>:
    13dc:	e8 94       	clt

000013de <__divdi3_moddi3>:
    13de:	f9 2f       	mov	r31, r25
    13e0:	f1 2b       	or	r31, r17
    13e2:	12 f0       	brmi	.+4      	; 0x13e8 <__divdi3_moddi3+0xa>
    13e4:	0c 94 20 0a 	jmp	0x1440	; 0x1440 <__udivdi3_umoddi3>
    13e8:	a0 e0       	ldi	r26, 0x00	; 0
    13ea:	b0 e0       	ldi	r27, 0x00	; 0
    13ec:	ea ef       	ldi	r30, 0xFA	; 250
    13ee:	f9 e0       	ldi	r31, 0x09	; 9
    13f0:	0c 94 92 0a 	jmp	0x1524	; 0x1524 <__prologue_saves__+0xc>
    13f4:	09 2e       	mov	r0, r25
    13f6:	05 94       	asr	r0
    13f8:	22 f4       	brpl	.+8      	; 0x1402 <__divdi3_moddi3+0x24>
    13fa:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__negdi2>
    13fe:	11 23       	and	r17, r17
    1400:	92 f4       	brpl	.+36     	; 0x1426 <__divdi3_moddi3+0x48>
    1402:	f0 e8       	ldi	r31, 0x80	; 128
    1404:	0f 26       	eor	r0, r31
    1406:	ff ef       	ldi	r31, 0xFF	; 255
    1408:	e0 94       	com	r14
    140a:	f0 94       	com	r15
    140c:	00 95       	com	r16
    140e:	10 95       	com	r17
    1410:	b0 94       	com	r11
    1412:	c0 94       	com	r12
    1414:	d0 94       	com	r13
    1416:	a1 94       	neg	r10
    1418:	bf 0a       	sbc	r11, r31
    141a:	cf 0a       	sbc	r12, r31
    141c:	df 0a       	sbc	r13, r31
    141e:	ef 0a       	sbc	r14, r31
    1420:	ff 0a       	sbc	r15, r31
    1422:	0f 0b       	sbc	r16, r31
    1424:	1f 0b       	sbc	r17, r31
    1426:	0e 94 2b 0a 	call	0x1456	; 0x1456 <__udivmod64>
    142a:	07 fc       	sbrc	r0, 7
    142c:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <__negdi2>
    1430:	cd b7       	in	r28, 0x3d	; 61
    1432:	de b7       	in	r29, 0x3e	; 62
    1434:	ec e0       	ldi	r30, 0x0C	; 12
    1436:	0c 94 ae 0a 	jmp	0x155c	; 0x155c <__epilogue_restores__+0xc>

0000143a <__umoddi3>:
    143a:	68 94       	set
    143c:	01 c0       	rjmp	.+2      	; 0x1440 <__udivdi3_umoddi3>

0000143e <__udivdi3>:
    143e:	e8 94       	clt

00001440 <__udivdi3_umoddi3>:
    1440:	8f 92       	push	r8
    1442:	9f 92       	push	r9
    1444:	cf 93       	push	r28
    1446:	df 93       	push	r29
    1448:	0e 94 2b 0a 	call	0x1456	; 0x1456 <__udivmod64>
    144c:	df 91       	pop	r29
    144e:	cf 91       	pop	r28
    1450:	9f 90       	pop	r9
    1452:	8f 90       	pop	r8
    1454:	08 95       	ret

00001456 <__udivmod64>:
    1456:	88 24       	eor	r8, r8
    1458:	99 24       	eor	r9, r9
    145a:	f4 01       	movw	r30, r8
    145c:	e4 01       	movw	r28, r8
    145e:	b0 e4       	ldi	r27, 0x40	; 64
    1460:	9f 93       	push	r25
    1462:	aa 27       	eor	r26, r26
    1464:	9a 15       	cp	r25, r10
    1466:	8b 04       	cpc	r8, r11
    1468:	9c 04       	cpc	r9, r12
    146a:	ed 05       	cpc	r30, r13
    146c:	fe 05       	cpc	r31, r14
    146e:	cf 05       	cpc	r28, r15
    1470:	d0 07       	cpc	r29, r16
    1472:	a1 07       	cpc	r26, r17
    1474:	98 f4       	brcc	.+38     	; 0x149c <__udivmod64+0x46>
    1476:	ad 2f       	mov	r26, r29
    1478:	dc 2f       	mov	r29, r28
    147a:	cf 2f       	mov	r28, r31
    147c:	fe 2f       	mov	r31, r30
    147e:	e9 2d       	mov	r30, r9
    1480:	98 2c       	mov	r9, r8
    1482:	89 2e       	mov	r8, r25
    1484:	98 2f       	mov	r25, r24
    1486:	87 2f       	mov	r24, r23
    1488:	76 2f       	mov	r23, r22
    148a:	65 2f       	mov	r22, r21
    148c:	54 2f       	mov	r21, r20
    148e:	43 2f       	mov	r20, r19
    1490:	32 2f       	mov	r19, r18
    1492:	22 27       	eor	r18, r18
    1494:	b8 50       	subi	r27, 0x08	; 8
    1496:	31 f7       	brne	.-52     	; 0x1464 <__udivmod64+0xe>
    1498:	bf 91       	pop	r27
    149a:	27 c0       	rjmp	.+78     	; 0x14ea <__udivmod64+0x94>
    149c:	1b 2e       	mov	r1, r27
    149e:	bf 91       	pop	r27
    14a0:	bb 27       	eor	r27, r27
    14a2:	22 0f       	add	r18, r18
    14a4:	33 1f       	adc	r19, r19
    14a6:	44 1f       	adc	r20, r20
    14a8:	55 1f       	adc	r21, r21
    14aa:	66 1f       	adc	r22, r22
    14ac:	77 1f       	adc	r23, r23
    14ae:	88 1f       	adc	r24, r24
    14b0:	99 1f       	adc	r25, r25
    14b2:	88 1c       	adc	r8, r8
    14b4:	99 1c       	adc	r9, r9
    14b6:	ee 1f       	adc	r30, r30
    14b8:	ff 1f       	adc	r31, r31
    14ba:	cc 1f       	adc	r28, r28
    14bc:	dd 1f       	adc	r29, r29
    14be:	aa 1f       	adc	r26, r26
    14c0:	bb 1f       	adc	r27, r27
    14c2:	8a 14       	cp	r8, r10
    14c4:	9b 04       	cpc	r9, r11
    14c6:	ec 05       	cpc	r30, r12
    14c8:	fd 05       	cpc	r31, r13
    14ca:	ce 05       	cpc	r28, r14
    14cc:	df 05       	cpc	r29, r15
    14ce:	a0 07       	cpc	r26, r16
    14d0:	b1 07       	cpc	r27, r17
    14d2:	48 f0       	brcs	.+18     	; 0x14e6 <__udivmod64+0x90>
    14d4:	8a 18       	sub	r8, r10
    14d6:	9b 08       	sbc	r9, r11
    14d8:	ec 09       	sbc	r30, r12
    14da:	fd 09       	sbc	r31, r13
    14dc:	ce 09       	sbc	r28, r14
    14de:	df 09       	sbc	r29, r15
    14e0:	a0 0b       	sbc	r26, r16
    14e2:	b1 0b       	sbc	r27, r17
    14e4:	21 60       	ori	r18, 0x01	; 1
    14e6:	1a 94       	dec	r1
    14e8:	e1 f6       	brne	.-72     	; 0x14a2 <__udivmod64+0x4c>
    14ea:	2e f4       	brtc	.+10     	; 0x14f6 <__udivmod64+0xa0>
    14ec:	94 01       	movw	r18, r8
    14ee:	af 01       	movw	r20, r30
    14f0:	be 01       	movw	r22, r28
    14f2:	cd 01       	movw	r24, r26
    14f4:	00 0c       	add	r0, r0
    14f6:	08 95       	ret

000014f8 <__negdi2>:
    14f8:	60 95       	com	r22
    14fa:	70 95       	com	r23
    14fc:	80 95       	com	r24
    14fe:	90 95       	com	r25
    1500:	30 95       	com	r19
    1502:	40 95       	com	r20
    1504:	50 95       	com	r21
    1506:	21 95       	neg	r18
    1508:	3f 4f       	sbci	r19, 0xFF	; 255
    150a:	4f 4f       	sbci	r20, 0xFF	; 255
    150c:	5f 4f       	sbci	r21, 0xFF	; 255
    150e:	6f 4f       	sbci	r22, 0xFF	; 255
    1510:	7f 4f       	sbci	r23, 0xFF	; 255
    1512:	8f 4f       	sbci	r24, 0xFF	; 255
    1514:	9f 4f       	sbci	r25, 0xFF	; 255
    1516:	08 95       	ret

00001518 <__prologue_saves__>:
    1518:	2f 92       	push	r2
    151a:	3f 92       	push	r3
    151c:	4f 92       	push	r4
    151e:	5f 92       	push	r5
    1520:	6f 92       	push	r6
    1522:	7f 92       	push	r7
    1524:	8f 92       	push	r8
    1526:	9f 92       	push	r9
    1528:	af 92       	push	r10
    152a:	bf 92       	push	r11
    152c:	cf 92       	push	r12
    152e:	df 92       	push	r13
    1530:	ef 92       	push	r14
    1532:	ff 92       	push	r15
    1534:	0f 93       	push	r16
    1536:	1f 93       	push	r17
    1538:	cf 93       	push	r28
    153a:	df 93       	push	r29
    153c:	cd b7       	in	r28, 0x3d	; 61
    153e:	de b7       	in	r29, 0x3e	; 62
    1540:	ca 1b       	sub	r28, r26
    1542:	db 0b       	sbc	r29, r27
    1544:	0f b6       	in	r0, 0x3f	; 63
    1546:	f8 94       	cli
    1548:	de bf       	out	0x3e, r29	; 62
    154a:	0f be       	out	0x3f, r0	; 63
    154c:	cd bf       	out	0x3d, r28	; 61
    154e:	09 94       	ijmp

00001550 <__epilogue_restores__>:
    1550:	2a 88       	ldd	r2, Y+18	; 0x12
    1552:	39 88       	ldd	r3, Y+17	; 0x11
    1554:	48 88       	ldd	r4, Y+16	; 0x10
    1556:	5f 84       	ldd	r5, Y+15	; 0x0f
    1558:	6e 84       	ldd	r6, Y+14	; 0x0e
    155a:	7d 84       	ldd	r7, Y+13	; 0x0d
    155c:	8c 84       	ldd	r8, Y+12	; 0x0c
    155e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1560:	aa 84       	ldd	r10, Y+10	; 0x0a
    1562:	b9 84       	ldd	r11, Y+9	; 0x09
    1564:	c8 84       	ldd	r12, Y+8	; 0x08
    1566:	df 80       	ldd	r13, Y+7	; 0x07
    1568:	ee 80       	ldd	r14, Y+6	; 0x06
    156a:	fd 80       	ldd	r15, Y+5	; 0x05
    156c:	0c 81       	ldd	r16, Y+4	; 0x04
    156e:	1b 81       	ldd	r17, Y+3	; 0x03
    1570:	aa 81       	ldd	r26, Y+2	; 0x02
    1572:	b9 81       	ldd	r27, Y+1	; 0x01
    1574:	ce 0f       	add	r28, r30
    1576:	d1 1d       	adc	r29, r1
    1578:	0f b6       	in	r0, 0x3f	; 63
    157a:	f8 94       	cli
    157c:	de bf       	out	0x3e, r29	; 62
    157e:	0f be       	out	0x3f, r0	; 63
    1580:	cd bf       	out	0x3d, r28	; 61
    1582:	ed 01       	movw	r28, r26
    1584:	08 95       	ret

00001586 <__cmpdi2_s8>:
    1586:	00 24       	eor	r0, r0
    1588:	a7 fd       	sbrc	r26, 7
    158a:	00 94       	com	r0
    158c:	2a 17       	cp	r18, r26
    158e:	30 05       	cpc	r19, r0
    1590:	40 05       	cpc	r20, r0
    1592:	50 05       	cpc	r21, r0
    1594:	60 05       	cpc	r22, r0
    1596:	70 05       	cpc	r23, r0
    1598:	80 05       	cpc	r24, r0
    159a:	90 05       	cpc	r25, r0
    159c:	08 95       	ret

0000159e <__umulhisi3>:
    159e:	a2 9f       	mul	r26, r18
    15a0:	b0 01       	movw	r22, r0
    15a2:	b3 9f       	mul	r27, r19
    15a4:	c0 01       	movw	r24, r0
    15a6:	a3 9f       	mul	r26, r19
    15a8:	70 0d       	add	r23, r0
    15aa:	81 1d       	adc	r24, r1
    15ac:	11 24       	eor	r1, r1
    15ae:	91 1d       	adc	r25, r1
    15b0:	b2 9f       	mul	r27, r18
    15b2:	70 0d       	add	r23, r0
    15b4:	81 1d       	adc	r24, r1
    15b6:	11 24       	eor	r1, r1
    15b8:	91 1d       	adc	r25, r1
    15ba:	08 95       	ret

000015bc <_exit>:
    15bc:	f8 94       	cli

000015be <__stop_program>:
    15be:	ff cf       	rjmp	.-2      	; 0x15be <__stop_program>
