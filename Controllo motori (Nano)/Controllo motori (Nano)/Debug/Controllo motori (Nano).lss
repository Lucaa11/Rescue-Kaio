
Controllo motori (Nano).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00001618  000016ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001618  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000013a  0080010a  0080010a  000016b6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000016b6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001728  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ad8  00000000  00000000  00001848  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b6e  00000000  00000000  00003320  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a13  00000000  00000000  00003e8e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000049c  00000000  00000000  000048a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ca  00000000  00000000  00004d40  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ec5  00000000  00000000  0000540a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  000062cf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
       4:	0c 94 ff 00 	jmp	0x1fe	; 0x1fe <__vector_1>
       8:	0c 94 12 02 	jmp	0x424	; 0x424 <__vector_2>
       c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      10:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      14:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      18:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      1c:	0c 94 b0 00 	jmp	0x160	; 0x160 <__vector_7>
      20:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      24:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      28:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      2c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      30:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      34:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      38:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__vector_14>
      3c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      40:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      44:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      48:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      4c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      50:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      54:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      58:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      5c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      60:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      64:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <Serial_Send_Int+0xa8>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__ctors_end>:
      ea:	11 24       	eor	r1, r1
      ec:	1f be       	out	0x3f, r1	; 63
      ee:	cf ef       	ldi	r28, 0xFF	; 255
      f0:	d8 e0       	ldi	r29, 0x08	; 8
      f2:	de bf       	out	0x3e, r29	; 62
      f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_copy_data>:
      f6:	11 e0       	ldi	r17, 0x01	; 1
      f8:	a0 e0       	ldi	r26, 0x00	; 0
      fa:	b1 e0       	ldi	r27, 0x01	; 1
      fc:	e8 e1       	ldi	r30, 0x18	; 24
      fe:	f6 e1       	ldi	r31, 0x16	; 22
     100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x10>
     102:	05 90       	lpm	r0, Z+
     104:	0d 92       	st	X+, r0
     106:	aa 30       	cpi	r26, 0x0A	; 10
     108:	b1 07       	cpc	r27, r17
     10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0xc>

0000010c <__do_clear_bss>:
     10c:	22 e0       	ldi	r18, 0x02	; 2
     10e:	aa e0       	ldi	r26, 0x0A	; 10
     110:	b1 e0       	ldi	r27, 0x01	; 1
     112:	01 c0       	rjmp	.+2      	; 0x116 <.do_clear_bss_start>

00000114 <.do_clear_bss_loop>:
     114:	1d 92       	st	X+, r1

00000116 <.do_clear_bss_start>:
     116:	a4 34       	cpi	r26, 0x44	; 68
     118:	b2 07       	cpc	r27, r18
     11a:	e1 f7       	brne	.-8      	; 0x114 <.do_clear_bss_loop>
     11c:	0e 94 56 02 	call	0x4ac	; 0x4ac <main>
     120:	0c 94 0a 0b 	jmp	0x1614	; 0x1614 <_exit>

00000124 <__bad_interrupt>:
     124:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000128 <InitADC>:
     128:	ea e7       	ldi	r30, 0x7A	; 122
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	80 81       	ld	r24, Z
     12e:	87 60       	ori	r24, 0x07	; 7
     130:	80 83       	st	Z, r24
     132:	ac e7       	ldi	r26, 0x7C	; 124
     134:	b0 e0       	ldi	r27, 0x00	; 0
     136:	8c 91       	ld	r24, X
     138:	80 64       	ori	r24, 0x40	; 64
     13a:	8c 93       	st	X, r24
     13c:	80 81       	ld	r24, Z
     13e:	80 68       	ori	r24, 0x80	; 128
     140:	80 83       	st	Z, r24
     142:	80 81       	ld	r24, Z
     144:	80 64       	ori	r24, 0x40	; 64
     146:	80 83       	st	Z, r24
     148:	08 95       	ret

0000014a <InitISR>:

volatile unsigned long topRaggiunti = 0;
volatile unsigned long ciao = 0;

void InitISR(void){
	PORTD|=(1<<PD3);
     14a:	5b 9a       	sbi	0x0b, 3	; 11
	EIMSK|=(1<<INT0)|(1<<INT1);
     14c:	8d b3       	in	r24, 0x1d	; 29
     14e:	83 60       	ori	r24, 0x03	; 3
     150:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC01)|(1<<ISC00)|(1<<ISC11)|(1<<ISC10);
     152:	e9 e6       	ldi	r30, 0x69	; 105
     154:	f0 e0       	ldi	r31, 0x00	; 0
     156:	80 81       	ld	r24, Z
     158:	8f 60       	ori	r24, 0x0F	; 15
     15a:	80 83       	st	Z, r24
	sei();
     15c:	78 94       	sei
     15e:	08 95       	ret

00000160 <__vector_7>:
}


	
ISR(TIMER2_COMPA_vect){
     160:	1f 92       	push	r1
     162:	0f 92       	push	r0
     164:	0f b6       	in	r0, 0x3f	; 63
     166:	0f 92       	push	r0
     168:	11 24       	eor	r1, r1
     16a:	2f 93       	push	r18
     16c:	3f 93       	push	r19
     16e:	4f 93       	push	r20
     170:	5f 93       	push	r21
     172:	6f 93       	push	r22
     174:	7f 93       	push	r23
     176:	8f 93       	push	r24
     178:	9f 93       	push	r25
     17a:	af 93       	push	r26
     17c:	bf 93       	push	r27
     17e:	ef 93       	push	r30
     180:	ff 93       	push	r31
	OCR1A = CalculatePID(1);
     182:	81 e0       	ldi	r24, 0x01	; 1
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	0e 94 ba 02 	call	0x574	; 0x574 <CalculatePID>
     18a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     18e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	//dutyMDxA = CalculatePID(MDxA);
	//dutyMSxD = CalculatePID(MSxD);
	//dutyMDxD = CalculatePID(MDxD);
}
     192:	ff 91       	pop	r31
     194:	ef 91       	pop	r30
     196:	bf 91       	pop	r27
     198:	af 91       	pop	r26
     19a:	9f 91       	pop	r25
     19c:	8f 91       	pop	r24
     19e:	7f 91       	pop	r23
     1a0:	6f 91       	pop	r22
     1a2:	5f 91       	pop	r21
     1a4:	4f 91       	pop	r20
     1a6:	3f 91       	pop	r19
     1a8:	2f 91       	pop	r18
     1aa:	0f 90       	pop	r0
     1ac:	0f be       	out	0x3f, r0	; 63
     1ae:	0f 90       	pop	r0
     1b0:	1f 90       	pop	r1
     1b2:	18 95       	reti

000001b4 <__vector_14>:

ISR(TIMER0_COMPA_vect){
     1b4:	1f 92       	push	r1
     1b6:	0f 92       	push	r0
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	0f 92       	push	r0
     1bc:	11 24       	eor	r1, r1
     1be:	8f 93       	push	r24
     1c0:	9f 93       	push	r25
     1c2:	af 93       	push	r26
     1c4:	bf 93       	push	r27
	topRaggiunti++;	
     1c6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
     1ca:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
     1ce:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <__data_end+0x2>
     1d2:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <__data_end+0x3>
     1d6:	01 96       	adiw	r24, 0x01	; 1
     1d8:	a1 1d       	adc	r26, r1
     1da:	b1 1d       	adc	r27, r1
     1dc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
     1e0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
     1e4:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <__data_end+0x2>
     1e8:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <__data_end+0x3>
	
}
     1ec:	bf 91       	pop	r27
     1ee:	af 91       	pop	r26
     1f0:	9f 91       	pop	r25
     1f2:	8f 91       	pop	r24
     1f4:	0f 90       	pop	r0
     1f6:	0f be       	out	0x3f, r0	; 63
     1f8:	0f 90       	pop	r0
     1fa:	1f 90       	pop	r1
     1fc:	18 95       	reti

000001fe <__vector_1>:

ISR(INT0_vect){	
     1fe:	1f 92       	push	r1
     200:	0f 92       	push	r0
     202:	0f b6       	in	r0, 0x3f	; 63
     204:	0f 92       	push	r0
     206:	11 24       	eor	r1, r1
     208:	4f 92       	push	r4
     20a:	5f 92       	push	r5
     20c:	6f 92       	push	r6
     20e:	7f 92       	push	r7
     210:	8f 92       	push	r8
     212:	9f 92       	push	r9
     214:	af 92       	push	r10
     216:	bf 92       	push	r11
     218:	cf 92       	push	r12
     21a:	df 92       	push	r13
     21c:	ef 92       	push	r14
     21e:	ff 92       	push	r15
     220:	2f 93       	push	r18
     222:	3f 93       	push	r19
     224:	4f 93       	push	r20
     226:	5f 93       	push	r21
     228:	6f 93       	push	r22
     22a:	7f 93       	push	r23
     22c:	8f 93       	push	r24
     22e:	9f 93       	push	r25
     230:	af 93       	push	r26
     232:	bf 93       	push	r27
     234:	ef 93       	push	r30
     236:	ff 93       	push	r31
	tImp1 = TCNT0;
     238:	86 b5       	in	r24, 0x26	; 38
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	a0 e0       	ldi	r26, 0x00	; 0
     23e:	b0 e0       	ldi	r27, 0x00	; 0
     240:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <tImp1>
     244:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <tImp1+0x1>
     248:	a0 93 60 01 	sts	0x0160, r26	; 0x800160 <tImp1+0x2>
     24c:	b0 93 61 01 	sts	0x0161, r27	; 0x800161 <tImp1+0x3>
	topRaggiuntiProv1=topRaggiunti;
     250:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
     254:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
     258:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <__data_end+0x2>
     25c:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <__data_end+0x3>
     260:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <topRaggiuntiProv1>
     264:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <topRaggiuntiProv1+0x1>
     268:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <topRaggiuntiProv1+0x2>
     26c:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <topRaggiuntiProv1+0x3>
	if(topRaggiuntiProv1==vTopRaggiunti1){
     270:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <topRaggiuntiProv1>
     274:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <topRaggiuntiProv1+0x1>
     278:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <topRaggiuntiProv1+0x2>
     27c:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <topRaggiuntiProv1+0x3>
     280:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <vTopRaggiunti1>
     284:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <vTopRaggiunti1+0x1>
     288:	a0 91 a0 01 	lds	r26, 0x01A0	; 0x8001a0 <vTopRaggiunti1+0x2>
     28c:	b0 91 a1 01 	lds	r27, 0x01A1	; 0x8001a1 <vTopRaggiunti1+0x3>
     290:	48 17       	cp	r20, r24
     292:	59 07       	cpc	r21, r25
     294:	6a 07       	cpc	r22, r26
     296:	7b 07       	cpc	r23, r27
     298:	e9 f4       	brne	.+58     	; 0x2d4 <__vector_1+0xd6>
		difftImp1 = tImp1 - vtImp1;
     29a:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <tImp1>
     29e:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <tImp1+0x1>
     2a2:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <tImp1+0x2>
     2a6:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <tImp1+0x3>
     2aa:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <vtImp1>
     2ae:	50 91 37 01 	lds	r21, 0x0137	; 0x800137 <vtImp1+0x1>
     2b2:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <vtImp1+0x2>
     2b6:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <vtImp1+0x3>
     2ba:	84 1b       	sub	r24, r20
     2bc:	95 0b       	sbc	r25, r21
     2be:	a6 0b       	sbc	r26, r22
     2c0:	b7 0b       	sbc	r27, r23
     2c2:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <difftImp1>
     2c6:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <difftImp1+0x1>
     2ca:	a0 93 74 01 	sts	0x0174, r26	; 0x800174 <difftImp1+0x2>
     2ce:	b0 93 75 01 	sts	0x0175, r27	; 0x800175 <difftImp1+0x3>
     2d2:	4b c0       	rjmp	.+150    	; 0x36a <__vector_1+0x16c>
	}
	else{
		difftImp1 = (OCR0A - vtImp1) + (tImp1) + ((topRaggiuntiProv1-vTopRaggiunti1-1)*OCR0A);
     2d4:	e7 b5       	in	r30, 0x27	; 39
     2d6:	80 90 36 01 	lds	r8, 0x0136	; 0x800136 <vtImp1>
     2da:	90 90 37 01 	lds	r9, 0x0137	; 0x800137 <vtImp1+0x1>
     2de:	a0 90 38 01 	lds	r10, 0x0138	; 0x800138 <vtImp1+0x2>
     2e2:	b0 90 39 01 	lds	r11, 0x0139	; 0x800139 <vtImp1+0x3>
     2e6:	c0 90 5e 01 	lds	r12, 0x015E	; 0x80015e <tImp1>
     2ea:	d0 90 5f 01 	lds	r13, 0x015F	; 0x80015f <tImp1+0x1>
     2ee:	e0 90 60 01 	lds	r14, 0x0160	; 0x800160 <tImp1+0x2>
     2f2:	f0 90 61 01 	lds	r15, 0x0161	; 0x800161 <tImp1+0x3>
     2f6:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <topRaggiuntiProv1>
     2fa:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <topRaggiuntiProv1+0x1>
     2fe:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <topRaggiuntiProv1+0x2>
     302:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <topRaggiuntiProv1+0x3>
     306:	40 90 9e 01 	lds	r4, 0x019E	; 0x80019e <vTopRaggiunti1>
     30a:	50 90 9f 01 	lds	r5, 0x019F	; 0x80019f <vTopRaggiunti1+0x1>
     30e:	60 90 a0 01 	lds	r6, 0x01A0	; 0x8001a0 <vTopRaggiunti1+0x2>
     312:	70 90 a1 01 	lds	r7, 0x01A1	; 0x8001a1 <vTopRaggiunti1+0x3>
     316:	a7 b5       	in	r26, 0x27	; 39
     318:	41 50       	subi	r20, 0x01	; 1
     31a:	51 09       	sbc	r21, r1
     31c:	61 09       	sbc	r22, r1
     31e:	71 09       	sbc	r23, r1
     320:	9a 01       	movw	r18, r20
     322:	ab 01       	movw	r20, r22
     324:	24 19       	sub	r18, r4
     326:	35 09       	sbc	r19, r5
     328:	46 09       	sbc	r20, r6
     32a:	57 09       	sbc	r21, r7
     32c:	b0 e0       	ldi	r27, 0x00	; 0
     32e:	0e 94 0d 0a 	call	0x141a	; 0x141a <__muluhisi3>
     332:	4e 2e       	mov	r4, r30
     334:	51 2c       	mov	r5, r1
     336:	61 2c       	mov	r6, r1
     338:	71 2c       	mov	r7, r1
     33a:	a3 01       	movw	r20, r6
     33c:	92 01       	movw	r18, r4
     33e:	28 19       	sub	r18, r8
     340:	39 09       	sbc	r19, r9
     342:	4a 09       	sbc	r20, r10
     344:	5b 09       	sbc	r21, r11
     346:	c2 0e       	add	r12, r18
     348:	d3 1e       	adc	r13, r19
     34a:	e4 1e       	adc	r14, r20
     34c:	f5 1e       	adc	r15, r21
     34e:	dc 01       	movw	r26, r24
     350:	cb 01       	movw	r24, r22
     352:	8c 0d       	add	r24, r12
     354:	9d 1d       	adc	r25, r13
     356:	ae 1d       	adc	r26, r14
     358:	bf 1d       	adc	r27, r15
     35a:	80 93 72 01 	sts	0x0172, r24	; 0x800172 <difftImp1>
     35e:	90 93 73 01 	sts	0x0173, r25	; 0x800173 <difftImp1+0x1>
     362:	a0 93 74 01 	sts	0x0174, r26	; 0x800174 <difftImp1+0x2>
     366:	b0 93 75 01 	sts	0x0175, r27	; 0x800175 <difftImp1+0x3>
		
	}
	speed[1] = 250000.0 / (622.0*difftImp1);
     36a:	60 91 72 01 	lds	r22, 0x0172	; 0x800172 <difftImp1>
     36e:	70 91 73 01 	lds	r23, 0x0173	; 0x800173 <difftImp1+0x1>
     372:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <difftImp1+0x2>
     376:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <difftImp1+0x3>
     37a:	0e 94 10 07 	call	0xe20	; 0xe20 <__floatunsisf>
     37e:	20 e0       	ldi	r18, 0x00	; 0
     380:	30 e8       	ldi	r19, 0x80	; 128
     382:	4b e1       	ldi	r20, 0x1B	; 27
     384:	54 e4       	ldi	r21, 0x44	; 68
     386:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulsf3>
     38a:	9b 01       	movw	r18, r22
     38c:	ac 01       	movw	r20, r24
     38e:	60 e0       	ldi	r22, 0x00	; 0
     390:	74 e2       	ldi	r23, 0x24	; 36
     392:	84 e7       	ldi	r24, 0x74	; 116
     394:	98 e4       	ldi	r25, 0x48	; 72
     396:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__divsf3>
     39a:	60 93 da 01 	sts	0x01DA, r22	; 0x8001da <speed+0x4>
     39e:	70 93 db 01 	sts	0x01DB, r23	; 0x8001db <speed+0x5>
     3a2:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <speed+0x6>
     3a6:	90 93 dd 01 	sts	0x01DD, r25	; 0x8001dd <speed+0x7>
	//Serial_Send("\t");
	//Serial_Send(difftImp1);
	//Serial_Send("\t");
	//Serial_Send_Int((int)(speed[1]*1000));
	//SerialN();
	vtImp1 = tImp1;
     3aa:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <tImp1>
     3ae:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <tImp1+0x1>
     3b2:	a0 91 60 01 	lds	r26, 0x0160	; 0x800160 <tImp1+0x2>
     3b6:	b0 91 61 01 	lds	r27, 0x0161	; 0x800161 <tImp1+0x3>
     3ba:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <vtImp1>
     3be:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <vtImp1+0x1>
     3c2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <vtImp1+0x2>
     3c6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <vtImp1+0x3>
	vTopRaggiunti1 = topRaggiuntiProv1;
     3ca:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <topRaggiuntiProv1>
     3ce:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <topRaggiuntiProv1+0x1>
     3d2:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <topRaggiuntiProv1+0x2>
     3d6:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <topRaggiuntiProv1+0x3>
     3da:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <vTopRaggiunti1>
     3de:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <vTopRaggiunti1+0x1>
     3e2:	a0 93 a0 01 	sts	0x01A0, r26	; 0x8001a0 <vTopRaggiunti1+0x2>
     3e6:	b0 93 a1 01 	sts	0x01A1, r27	; 0x8001a1 <vTopRaggiunti1+0x3>
}
     3ea:	ff 91       	pop	r31
     3ec:	ef 91       	pop	r30
     3ee:	bf 91       	pop	r27
     3f0:	af 91       	pop	r26
     3f2:	9f 91       	pop	r25
     3f4:	8f 91       	pop	r24
     3f6:	7f 91       	pop	r23
     3f8:	6f 91       	pop	r22
     3fa:	5f 91       	pop	r21
     3fc:	4f 91       	pop	r20
     3fe:	3f 91       	pop	r19
     400:	2f 91       	pop	r18
     402:	ff 90       	pop	r15
     404:	ef 90       	pop	r14
     406:	df 90       	pop	r13
     408:	cf 90       	pop	r12
     40a:	bf 90       	pop	r11
     40c:	af 90       	pop	r10
     40e:	9f 90       	pop	r9
     410:	8f 90       	pop	r8
     412:	7f 90       	pop	r7
     414:	6f 90       	pop	r6
     416:	5f 90       	pop	r5
     418:	4f 90       	pop	r4
     41a:	0f 90       	pop	r0
     41c:	0f be       	out	0x3f, r0	; 63
     41e:	0f 90       	pop	r0
     420:	1f 90       	pop	r1
     422:	18 95       	reti

00000424 <__vector_2>:

ISR(INT1_vect){
     424:	1f 92       	push	r1
     426:	0f 92       	push	r0
     428:	0f b6       	in	r0, 0x3f	; 63
     42a:	0f 92       	push	r0
     42c:	11 24       	eor	r1, r1
     42e:	2f 93       	push	r18
     430:	3f 93       	push	r19
     432:	4f 93       	push	r20
     434:	5f 93       	push	r21
     436:	6f 93       	push	r22
     438:	7f 93       	push	r23
     43a:	8f 93       	push	r24
     43c:	9f 93       	push	r25
     43e:	af 93       	push	r26
     440:	bf 93       	push	r27
     442:	cf 93       	push	r28
     444:	df 93       	push	r29
     446:	ef 93       	push	r30
     448:	ff 93       	push	r31
	Serial_Send(Kp);
     44a:	20 e0       	ldi	r18, 0x00	; 0
     44c:	30 e0       	ldi	r19, 0x00	; 0
     44e:	40 e0       	ldi	r20, 0x00	; 0
     450:	50 e0       	ldi	r21, 0x00	; 0
     452:	60 e0       	ldi	r22, 0x00	; 0
     454:	70 e0       	ldi	r23, 0x00	; 0
     456:	80 e0       	ldi	r24, 0x00	; 0
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	0e 94 1e 04 	call	0x83c	; 0x83c <Serial_Send_Int>
	Serial_Send("\t");
     45e:	80 e0       	ldi	r24, 0x00	; 0
     460:	91 e0       	ldi	r25, 0x01	; 1
     462:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <Serial_Send_String>
	Serial_Send(OCR1A);
     466:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     46a:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     46e:	28 2f       	mov	r18, r24
     470:	39 2f       	mov	r19, r25
     472:	40 e0       	ldi	r20, 0x00	; 0
     474:	50 e0       	ldi	r21, 0x00	; 0
     476:	60 e0       	ldi	r22, 0x00	; 0
     478:	70 e0       	ldi	r23, 0x00	; 0
     47a:	80 e0       	ldi	r24, 0x00	; 0
     47c:	90 e0       	ldi	r25, 0x00	; 0
     47e:	0e 94 1e 04 	call	0x83c	; 0x83c <Serial_Send_Int>
	SerialN();
     482:	0e 94 1b 05 	call	0xa36	; 0xa36 <SerialN>
}
     486:	ff 91       	pop	r31
     488:	ef 91       	pop	r30
     48a:	df 91       	pop	r29
     48c:	cf 91       	pop	r28
     48e:	bf 91       	pop	r27
     490:	af 91       	pop	r26
     492:	9f 91       	pop	r25
     494:	8f 91       	pop	r24
     496:	7f 91       	pop	r23
     498:	6f 91       	pop	r22
     49a:	5f 91       	pop	r21
     49c:	4f 91       	pop	r20
     49e:	3f 91       	pop	r19
     4a0:	2f 91       	pop	r18
     4a2:	0f 90       	pop	r0
     4a4:	0f be       	out	0x3f, r0	; 63
     4a6:	0f 90       	pop	r0
     4a8:	1f 90       	pop	r1
     4aa:	18 95       	reti

000004ac <main>:
#include "ADC.h"
int main(void)
{
	
	//init_millis(F_CPU);
	Serial_Init();
     4ac:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <Serial_Init>
	InitADC();
     4b0:	0e 94 94 00 	call	0x128	; 0x128 <InitADC>
	Serial_Send("xd");
     4b4:	82 e0       	ldi	r24, 0x02	; 2
     4b6:	91 e0       	ldi	r25, 0x01	; 1
     4b8:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <Serial_Send_String>
	SerialN();
     4bc:	0e 94 1b 05 	call	0xa36	; 0xa36 <SerialN>
	InitPWM();
     4c0:	0e 94 83 02 	call	0x506	; 0x506 <InitPWM>
	InitISR();
     4c4:	0e 94 a5 00 	call	0x14a	; 0x14a <InitISR>
	DDRC=0;
     4c8:	17 b8       	out	0x07, r1	; 7
	DDRD=0;
     4ca:	1a b8       	out	0x0a, r1	; 10

	setpoint[1]=0.5;
     4cc:	80 e0       	ldi	r24, 0x00	; 0
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	a0 e0       	ldi	r26, 0x00	; 0
     4d2:	bf e3       	ldi	r27, 0x3F	; 63
     4d4:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <setpoint+0x4>
     4d8:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <setpoint+0x5>
     4dc:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <setpoint+0x6>
     4e0:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <setpoint+0x7>

    while (1) 
    {
		
		Serial_Send(speed[1]*1000);
     4e4:	c6 ed       	ldi	r28, 0xD6	; 214
     4e6:	d1 e0       	ldi	r29, 0x01	; 1
     4e8:	6c 81       	ldd	r22, Y+4	; 0x04
     4ea:	7d 81       	ldd	r23, Y+5	; 0x05
     4ec:	8e 81       	ldd	r24, Y+6	; 0x06
     4ee:	9f 81       	ldd	r25, Y+7	; 0x07
     4f0:	20 e0       	ldi	r18, 0x00	; 0
     4f2:	30 e0       	ldi	r19, 0x00	; 0
     4f4:	4a e7       	ldi	r20, 0x7A	; 122
     4f6:	54 e4       	ldi	r21, 0x44	; 68
     4f8:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulsf3>
     4fc:	0e 94 22 05 	call	0xa44	; 0xa44 <Serial_Send_Float>
		SerialN();
     500:	0e 94 1b 05 	call	0xa36	; 0xa36 <SerialN>
     504:	f1 cf       	rjmp	.-30     	; 0x4e8 <main+0x3c>

00000506 <InitPWM>:
//#include "BNO.h"

/*-------------------PWM-------------------*/
//Inizializzazione PWM
void InitPWM(void){
	TCCR1A|=(1<<WGM10)|(1<<WGM11)|(1<<COM1A1)|(1<<COM1B1);								//PWM 10 bit, non-inverting mode, PRESCALER = 256, FREQUENZA OTTENUTA = 61 Hz
     506:	e0 e8       	ldi	r30, 0x80	; 128
     508:	f0 e0       	ldi	r31, 0x00	; 0
     50a:	80 81       	ld	r24, Z
     50c:	83 6a       	ori	r24, 0xA3	; 163
     50e:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM12)|(0<<WGM13)|(1<<CS12);
     510:	e1 e8       	ldi	r30, 0x81	; 129
     512:	f0 e0       	ldi	r31, 0x00	; 0
     514:	80 81       	ld	r24, Z
     516:	8c 60       	ori	r24, 0x0C	; 12
     518:	80 83       	st	Z, r24
	
	TCCR2A|=(0<<WGM20)|(0<<WGM21)|(0<<COM2A1)|(0<<COM2B1);								//CTC timer 5, PRESCALER = 8
     51a:	e0 eb       	ldi	r30, 0xB0	; 176
     51c:	f0 e0       	ldi	r31, 0x00	; 0
     51e:	80 81       	ld	r24, Z
     520:	80 83       	st	Z, r24
	TCCR2B|=(1<<WGM22)|(1<<CS20)|(1<<CS21);
     522:	e1 eb       	ldi	r30, 0xB1	; 177
     524:	f0 e0       	ldi	r31, 0x00	; 0
     526:	80 81       	ld	r24, Z
     528:	8b 60       	ori	r24, 0x0B	; 11
     52a:	80 83       	st	Z, r24
	TIMSK2 = (1<<OCIE2A);
     52c:	22 e0       	ldi	r18, 0x02	; 2
     52e:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
	OCR2A = 255;																				
     532:	8f ef       	ldi	r24, 0xFF	; 255
     534:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
	
	TCCR0A|=(0<<WGM00)|(1<<WGM01)|(0<<COM0A1)|(0<<COM0B1);					
     538:	94 b5       	in	r25, 0x24	; 36
     53a:	92 60       	ori	r25, 0x02	; 2
     53c:	94 bd       	out	0x24, r25	; 36
	TCCR0B|=(1<<WGM02)|(1<<CS00)|(1<<CS01);
     53e:	95 b5       	in	r25, 0x25	; 37
     540:	9b 60       	ori	r25, 0x0B	; 11
     542:	95 bd       	out	0x25, r25	; 37
	TIMSK0 = (1<<OCIE0A);
     544:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	OCR0A = 255;
     548:	87 bd       	out	0x27, r24	; 39
	TCNT0=0xFF;
     54a:	86 bd       	out	0x26, r24	; 38

	
	DDRB=0xFF;
     54c:	84 b9       	out	0x04, r24	; 4

	for(int i=1;i<5;i++)integral[i]=0;
     54e:	e6 e0       	ldi	r30, 0x06	; 6
     550:	f2 e0       	ldi	r31, 0x02	; 2
     552:	14 82       	std	Z+4, r1	; 0x04
     554:	15 82       	std	Z+5, r1	; 0x05
     556:	16 82       	std	Z+6, r1	; 0x06
     558:	17 82       	std	Z+7, r1	; 0x07
     55a:	10 86       	std	Z+8, r1	; 0x08
     55c:	11 86       	std	Z+9, r1	; 0x09
     55e:	12 86       	std	Z+10, r1	; 0x0a
     560:	13 86       	std	Z+11, r1	; 0x0b
     562:	14 86       	std	Z+12, r1	; 0x0c
     564:	15 86       	std	Z+13, r1	; 0x0d
     566:	16 86       	std	Z+14, r1	; 0x0e
     568:	17 86       	std	Z+15, r1	; 0x0f
     56a:	10 8a       	std	Z+16, r1	; 0x10
     56c:	11 8a       	std	Z+17, r1	; 0x11
     56e:	12 8a       	std	Z+18, r1	; 0x12
     570:	13 8a       	std	Z+19, r1	; 0x13
     572:	08 95       	ret

00000574 <CalculatePID>:
	//setpointGy+=degrees;
//}
//
///*-------------------PID-------------------*/

int CalculatePID(int N){
     574:	4f 92       	push	r4
     576:	5f 92       	push	r5
     578:	6f 92       	push	r6
     57a:	7f 92       	push	r7
     57c:	8f 92       	push	r8
     57e:	9f 92       	push	r9
     580:	af 92       	push	r10
     582:	bf 92       	push	r11
     584:	cf 92       	push	r12
     586:	df 92       	push	r13
     588:	ef 92       	push	r14
     58a:	ff 92       	push	r15
     58c:	0f 93       	push	r16
     58e:	1f 93       	push	r17
     590:	cf 93       	push	r28
     592:	df 93       	push	r29
     594:	ec 01       	movw	r28, r24

	error[N] = setpoint[N] - speed[N];
     596:	8c 01       	movw	r16, r24
     598:	00 0f       	add	r16, r16
     59a:	11 1f       	adc	r17, r17
     59c:	00 0f       	add	r16, r16
     59e:	11 1f       	adc	r17, r17
     5a0:	f8 01       	movw	r30, r16
     5a2:	e2 5c       	subi	r30, 0xC2	; 194
     5a4:	fe 4f       	sbci	r31, 0xFE	; 254
     5a6:	60 81       	ld	r22, Z
     5a8:	71 81       	ldd	r23, Z+1	; 0x01
     5aa:	82 81       	ldd	r24, Z+2	; 0x02
     5ac:	93 81       	ldd	r25, Z+3	; 0x03
     5ae:	f8 01       	movw	r30, r16
     5b0:	ea 52       	subi	r30, 0x2A	; 42
     5b2:	fe 4f       	sbci	r31, 0xFE	; 254
     5b4:	20 81       	ld	r18, Z
     5b6:	31 81       	ldd	r19, Z+1	; 0x01
     5b8:	42 81       	ldd	r20, Z+2	; 0x02
     5ba:	53 81       	ldd	r21, Z+3	; 0x03
     5bc:	0e 94 f6 05 	call	0xbec	; 0xbec <__subsf3>
     5c0:	f8 01       	movw	r30, r16
     5c2:	ee 53       	subi	r30, 0x3E	; 62
     5c4:	fe 4f       	sbci	r31, 0xFE	; 254
     5c6:	60 83       	st	Z, r22
     5c8:	71 83       	std	Z+1, r23	; 0x01
     5ca:	82 83       	std	Z+2, r24	; 0x02
     5cc:	93 83       	std	Z+3, r25	; 0x03
	integral[N] += error[N]*0.002;
     5ce:	60 81       	ld	r22, Z
     5d0:	71 81       	ldd	r23, Z+1	; 0x01
     5d2:	82 81       	ldd	r24, Z+2	; 0x02
     5d4:	93 81       	ldd	r25, Z+3	; 0x03
     5d6:	0a 5f       	subi	r16, 0xFA	; 250
     5d8:	1d 4f       	sbci	r17, 0xFD	; 253
     5da:	d8 01       	movw	r26, r16
     5dc:	cd 90       	ld	r12, X+
     5de:	dd 90       	ld	r13, X+
     5e0:	ed 90       	ld	r14, X+
     5e2:	fc 90       	ld	r15, X
     5e4:	2f e6       	ldi	r18, 0x6F	; 111
     5e6:	32 e1       	ldi	r19, 0x12	; 18
     5e8:	43 e0       	ldi	r20, 0x03	; 3
     5ea:	5b e3       	ldi	r21, 0x3B	; 59
     5ec:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulsf3>
     5f0:	a7 01       	movw	r20, r14
     5f2:	96 01       	movw	r18, r12
     5f4:	0e 94 f7 05 	call	0xbee	; 0xbee <__addsf3>
     5f8:	f8 01       	movw	r30, r16
     5fa:	60 83       	st	Z, r22
     5fc:	71 83       	std	Z+1, r23	; 0x01
     5fe:	82 83       	std	Z+2, r24	; 0x02
     600:	93 83       	std	Z+3, r25	; 0x03
	integral[N] = integral[N] > limI ? limI : integral[N] < -limI ? -limI : integral[N];
     602:	60 81       	ld	r22, Z
     604:	71 81       	ldd	r23, Z+1	; 0x01
     606:	82 81       	ldd	r24, Z+2	; 0x02
     608:	93 81       	ldd	r25, Z+3	; 0x03
     60a:	20 e0       	ldi	r18, 0x00	; 0
     60c:	30 e0       	ldi	r19, 0x00	; 0
     60e:	40 e0       	ldi	r20, 0x00	; 0
     610:	5f e3       	ldi	r21, 0x3F	; 63
     612:	0e 94 24 08 	call	0x1048	; 0x1048 <__gesf2>
     616:	18 16       	cp	r1, r24
     618:	9c f0       	brlt	.+38     	; 0x640 <CalculatePID+0xcc>
     61a:	f8 01       	movw	r30, r16
     61c:	60 81       	ld	r22, Z
     61e:	71 81       	ldd	r23, Z+1	; 0x01
     620:	82 81       	ldd	r24, Z+2	; 0x02
     622:	93 81       	ldd	r25, Z+3	; 0x03
     624:	20 e0       	ldi	r18, 0x00	; 0
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	40 e0       	ldi	r20, 0x00	; 0
     62a:	5f eb       	ldi	r21, 0xBF	; 191
     62c:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__cmpsf2>
     630:	88 23       	and	r24, r24
     632:	5c f0       	brlt	.+22     	; 0x64a <CalculatePID+0xd6>
     634:	f8 01       	movw	r30, r16
     636:	80 81       	ld	r24, Z
     638:	91 81       	ldd	r25, Z+1	; 0x01
     63a:	a2 81       	ldd	r26, Z+2	; 0x02
     63c:	b3 81       	ldd	r27, Z+3	; 0x03
     63e:	09 c0       	rjmp	.+18     	; 0x652 <CalculatePID+0xde>
     640:	80 e0       	ldi	r24, 0x00	; 0
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	a0 e0       	ldi	r26, 0x00	; 0
     646:	bf e3       	ldi	r27, 0x3F	; 63
     648:	04 c0       	rjmp	.+8      	; 0x652 <CalculatePID+0xde>
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	a0 e0       	ldi	r26, 0x00	; 0
     650:	bf eb       	ldi	r27, 0xBF	; 191
     652:	8e 01       	movw	r16, r28
     654:	00 0f       	add	r16, r16
     656:	11 1f       	adc	r17, r17
     658:	00 0f       	add	r16, r16
     65a:	11 1f       	adc	r17, r17
     65c:	98 01       	movw	r18, r16
     65e:	2a 5f       	subi	r18, 0xFA	; 250
     660:	3d 4f       	sbci	r19, 0xFD	; 253
     662:	79 01       	movw	r14, r18
     664:	f9 01       	movw	r30, r18
     666:	80 83       	st	Z, r24
     668:	91 83       	std	Z+1, r25	; 0x01
     66a:	a2 83       	std	Z+2, r26	; 0x02
     66c:	b3 83       	std	Z+3, r27	; 0x03
	derivative[N] = (error[N] - old_error[N])/0.002;
     66e:	98 01       	movw	r18, r16
     670:	2e 53       	subi	r18, 0x3E	; 62
     672:	3e 4f       	sbci	r19, 0xFE	; 254
     674:	69 01       	movw	r12, r18
     676:	d9 01       	movw	r26, r18
     678:	6d 91       	ld	r22, X+
     67a:	7d 91       	ld	r23, X+
     67c:	8d 91       	ld	r24, X+
     67e:	9c 91       	ld	r25, X
     680:	f8 01       	movw	r30, r16
     682:	ea 57       	subi	r30, 0x7A	; 122
     684:	fe 4f       	sbci	r31, 0xFE	; 254
     686:	20 81       	ld	r18, Z
     688:	31 81       	ldd	r19, Z+1	; 0x01
     68a:	42 81       	ldd	r20, Z+2	; 0x02
     68c:	53 81       	ldd	r21, Z+3	; 0x03
     68e:	0e 94 f6 05 	call	0xbec	; 0xbec <__subsf3>
     692:	2f e6       	ldi	r18, 0x6F	; 111
     694:	32 e1       	ldi	r19, 0x12	; 18
     696:	43 e0       	ldi	r20, 0x03	; 3
     698:	5b e3       	ldi	r21, 0x3B	; 59
     69a:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__divsf3>
     69e:	f8 01       	movw	r30, r16
     6a0:	ee 5d       	subi	r30, 0xDE	; 222
     6a2:	fe 4f       	sbci	r31, 0xFE	; 254
     6a4:	60 83       	st	Z, r22
     6a6:	71 83       	std	Z+1, r23	; 0x01
     6a8:	82 83       	std	Z+2, r24	; 0x02
     6aa:	93 83       	std	Z+3, r25	; 0x03
	duty[N] = error[N]*Kp + integral[N]*Ki + derivative[N]*Kd;
     6ac:	d6 01       	movw	r26, r12
     6ae:	6d 91       	ld	r22, X+
     6b0:	7d 91       	ld	r23, X+
     6b2:	8d 91       	ld	r24, X+
     6b4:	9c 91       	ld	r25, X
     6b6:	d7 01       	movw	r26, r14
     6b8:	cd 90       	ld	r12, X+
     6ba:	dd 90       	ld	r13, X+
     6bc:	ed 90       	ld	r14, X+
     6be:	fc 90       	ld	r15, X
     6c0:	80 80       	ld	r8, Z
     6c2:	91 80       	ldd	r9, Z+1	; 0x01
     6c4:	a2 80       	ldd	r10, Z+2	; 0x02
     6c6:	b3 80       	ldd	r11, Z+3	; 0x03
     6c8:	20 e0       	ldi	r18, 0x00	; 0
     6ca:	30 e0       	ldi	r19, 0x00	; 0
     6cc:	a9 01       	movw	r20, r18
     6ce:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulsf3>
     6d2:	2b 01       	movw	r4, r22
     6d4:	3c 01       	movw	r6, r24
     6d6:	20 e0       	ldi	r18, 0x00	; 0
     6d8:	30 e0       	ldi	r19, 0x00	; 0
     6da:	4a e7       	ldi	r20, 0x7A	; 122
     6dc:	53 e4       	ldi	r21, 0x43	; 67
     6de:	c7 01       	movw	r24, r14
     6e0:	b6 01       	movw	r22, r12
     6e2:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulsf3>
     6e6:	9b 01       	movw	r18, r22
     6e8:	ac 01       	movw	r20, r24
     6ea:	c3 01       	movw	r24, r6
     6ec:	b2 01       	movw	r22, r4
     6ee:	0e 94 f7 05 	call	0xbee	; 0xbee <__addsf3>
     6f2:	6b 01       	movw	r12, r22
     6f4:	7c 01       	movw	r14, r24
     6f6:	20 e0       	ldi	r18, 0x00	; 0
     6f8:	30 e0       	ldi	r19, 0x00	; 0
     6fa:	a9 01       	movw	r20, r18
     6fc:	c5 01       	movw	r24, r10
     6fe:	b4 01       	movw	r22, r8
     700:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulsf3>
     704:	9b 01       	movw	r18, r22
     706:	ac 01       	movw	r20, r24
     708:	c7 01       	movw	r24, r14
     70a:	b6 01       	movw	r22, r12
     70c:	0e 94 f7 05 	call	0xbee	; 0xbee <__addsf3>
     710:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__fixsfsi>
     714:	fe 01       	movw	r30, r28
     716:	ee 0f       	add	r30, r30
     718:	ff 1f       	adc	r31, r31
     71a:	e0 51       	subi	r30, 0x10	; 16
     71c:	fe 4f       	sbci	r31, 0xFE	; 254
     71e:	71 83       	std	Z+1, r23	; 0x01
     720:	60 83       	st	Z, r22
	if (duty[N]<0) duty[N]=0;
     722:	80 81       	ld	r24, Z
     724:	91 81       	ldd	r25, Z+1	; 0x01
     726:	99 23       	and	r25, r25
     728:	3c f4       	brge	.+14     	; 0x738 <CalculatePID+0x1c4>
     72a:	fe 01       	movw	r30, r28
     72c:	ee 0f       	add	r30, r30
     72e:	ff 1f       	adc	r31, r31
     730:	e0 51       	subi	r30, 0x10	; 16
     732:	fe 4f       	sbci	r31, 0xFE	; 254
     734:	11 82       	std	Z+1, r1	; 0x01
     736:	10 82       	st	Z, r1
	if (duty[N]>1023) duty[N]=1023;
     738:	fe 01       	movw	r30, r28
     73a:	ee 0f       	add	r30, r30
     73c:	ff 1f       	adc	r31, r31
     73e:	e0 51       	subi	r30, 0x10	; 16
     740:	fe 4f       	sbci	r31, 0xFE	; 254
     742:	80 81       	ld	r24, Z
     744:	91 81       	ldd	r25, Z+1	; 0x01
     746:	81 15       	cp	r24, r1
     748:	94 40       	sbci	r25, 0x04	; 4
     74a:	4c f0       	brlt	.+18     	; 0x75e <CalculatePID+0x1ea>
     74c:	fe 01       	movw	r30, r28
     74e:	ee 0f       	add	r30, r30
     750:	ff 1f       	adc	r31, r31
     752:	e0 51       	subi	r30, 0x10	; 16
     754:	fe 4f       	sbci	r31, 0xFE	; 254
     756:	8f ef       	ldi	r24, 0xFF	; 255
     758:	93 e0       	ldi	r25, 0x03	; 3
     75a:	91 83       	std	Z+1, r25	; 0x01
     75c:	80 83       	st	Z, r24
	old_error[N] = error[N];
     75e:	ce 01       	movw	r24, r28
     760:	88 0f       	add	r24, r24
     762:	99 1f       	adc	r25, r25
     764:	88 0f       	add	r24, r24
     766:	99 1f       	adc	r25, r25
     768:	fc 01       	movw	r30, r24
     76a:	ee 53       	subi	r30, 0x3E	; 62
     76c:	fe 4f       	sbci	r31, 0xFE	; 254
     76e:	40 81       	ld	r20, Z
     770:	51 81       	ldd	r21, Z+1	; 0x01
     772:	62 81       	ldd	r22, Z+2	; 0x02
     774:	73 81       	ldd	r23, Z+3	; 0x03
     776:	fc 01       	movw	r30, r24
     778:	ea 57       	subi	r30, 0x7A	; 122
     77a:	fe 4f       	sbci	r31, 0xFE	; 254
     77c:	40 83       	st	Z, r20
     77e:	51 83       	std	Z+1, r21	; 0x01
     780:	62 83       	std	Z+2, r22	; 0x02
     782:	73 83       	std	Z+3, r23	; 0x03
	return duty[N];
     784:	cc 0f       	add	r28, r28
     786:	dd 1f       	adc	r29, r29
     788:	c0 51       	subi	r28, 0x10	; 16
     78a:	de 4f       	sbci	r29, 0xFE	; 254
     78c:	88 81       	ld	r24, Y
     78e:	99 81       	ldd	r25, Y+1	; 0x01
     790:	df 91       	pop	r29
     792:	cf 91       	pop	r28
     794:	1f 91       	pop	r17
     796:	0f 91       	pop	r16
     798:	ff 90       	pop	r15
     79a:	ef 90       	pop	r14
     79c:	df 90       	pop	r13
     79e:	cf 90       	pop	r12
     7a0:	bf 90       	pop	r11
     7a2:	af 90       	pop	r10
     7a4:	9f 90       	pop	r9
     7a6:	8f 90       	pop	r8
     7a8:	7f 90       	pop	r7
     7aa:	6f 90       	pop	r6
     7ac:	5f 90       	pop	r5
     7ae:	4f 90       	pop	r4
     7b0:	08 95       	ret

000007b2 <Serial_Init>:
}
unsigned char Serial_Rx( void )
{
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}
     7b2:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <BAUD0>
     7b6:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <BAUD0+0x1>
     7ba:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <BAUD0+0x2>
     7be:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <BAUD0+0x3>
     7c2:	89 2f       	mov	r24, r25
     7c4:	9a 2f       	mov	r25, r26
     7c6:	ab 2f       	mov	r26, r27
     7c8:	bb 27       	eor	r27, r27
     7ca:	a7 fd       	sbrc	r26, 7
     7cc:	ba 95       	dec	r27
     7ce:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     7d2:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <BAUD0>
     7d6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     7da:	88 e1       	ldi	r24, 0x18	; 24
     7dc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     7e0:	86 e0       	ldi	r24, 0x06	; 6
     7e2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     7e6:	08 95       	ret

000007e8 <Serial_Tx>:
     7e8:	e0 ec       	ldi	r30, 0xC0	; 192
     7ea:	f0 e0       	ldi	r31, 0x00	; 0
     7ec:	90 81       	ld	r25, Z
     7ee:	95 ff       	sbrs	r25, 5
     7f0:	fd cf       	rjmp	.-6      	; 0x7ec <Serial_Tx+0x4>
     7f2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     7f6:	08 95       	ret

000007f8 <Serial_Send_String>:
	}
}


void Serial_Send_String(char *string1)
{
     7f8:	ef 92       	push	r14
     7fa:	ff 92       	push	r15
     7fc:	0f 93       	push	r16
     7fe:	1f 93       	push	r17
     800:	cf 93       	push	r28
     802:	df 93       	push	r29
     804:	8c 01       	movw	r16, r24
     806:	7c 01       	movw	r14, r24
	int i=0;
	for(i=0;i<strlen(string1);i++)
     808:	c0 e0       	ldi	r28, 0x00	; 0
     80a:	d0 e0       	ldi	r29, 0x00	; 0
     80c:	06 c0       	rjmp	.+12     	; 0x81a <Serial_Send_String+0x22>
	{
		Serial_Tx(string1[i]);
     80e:	f7 01       	movw	r30, r14
     810:	81 91       	ld	r24, Z+
     812:	7f 01       	movw	r14, r30
     814:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <Serial_Tx>


void Serial_Send_String(char *string1)
{
	int i=0;
	for(i=0;i<strlen(string1);i++)
     818:	21 96       	adiw	r28, 0x01	; 1
     81a:	f8 01       	movw	r30, r16
     81c:	01 90       	ld	r0, Z+
     81e:	00 20       	and	r0, r0
     820:	e9 f7       	brne	.-6      	; 0x81c <Serial_Send_String+0x24>
     822:	31 97       	sbiw	r30, 0x01	; 1
     824:	e0 1b       	sub	r30, r16
     826:	f1 0b       	sbc	r31, r17
     828:	ce 17       	cp	r28, r30
     82a:	df 07       	cpc	r29, r31
     82c:	80 f3       	brcs	.-32     	; 0x80e <Serial_Send_String+0x16>
	{
		Serial_Tx(string1[i]);
	}
}
     82e:	df 91       	pop	r29
     830:	cf 91       	pop	r28
     832:	1f 91       	pop	r17
     834:	0f 91       	pop	r16
     836:	ff 90       	pop	r15
     838:	ef 90       	pop	r14
     83a:	08 95       	ret

0000083c <Serial_Send_Int>:
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}

void Serial_Send_Int(int64_t num)
{
     83c:	2f 92       	push	r2
     83e:	3f 92       	push	r3
     840:	4f 92       	push	r4
     842:	5f 92       	push	r5
     844:	6f 92       	push	r6
     846:	7f 92       	push	r7
     848:	8f 92       	push	r8
     84a:	9f 92       	push	r9
     84c:	af 92       	push	r10
     84e:	bf 92       	push	r11
     850:	cf 92       	push	r12
     852:	df 92       	push	r13
     854:	ef 92       	push	r14
     856:	ff 92       	push	r15
     858:	0f 93       	push	r16
     85a:	1f 93       	push	r17
     85c:	cf 93       	push	r28
     85e:	df 93       	push	r29
     860:	cd b7       	in	r28, 0x3d	; 61
     862:	de b7       	in	r29, 0x3e	; 62
     864:	c9 54       	subi	r28, 0x49	; 73
     866:	d1 09       	sbc	r29, r1
     868:	0f b6       	in	r0, 0x3f	; 63
     86a:	f8 94       	cli
     86c:	de bf       	out	0x3e, r29	; 62
     86e:	0f be       	out	0x3f, r0	; 63
     870:	cd bf       	out	0x3d, r28	; 61
     872:	22 2e       	mov	r2, r18
     874:	33 2e       	mov	r3, r19
     876:	04 2f       	mov	r16, r20
     878:	22 96       	adiw	r28, 0x02	; 2
     87a:	5f af       	std	Y+63, r21	; 0x3f
     87c:	22 97       	sbiw	r28, 0x02	; 2
     87e:	86 2e       	mov	r8, r22
     880:	17 2f       	mov	r17, r23
     882:	23 96       	adiw	r28, 0x03	; 3
     884:	8f af       	std	Y+63, r24	; 0x3f
     886:	23 97       	sbiw	r28, 0x03	; 3
     888:	24 96       	adiw	r28, 0x04	; 4
     88a:	9f af       	std	Y+63, r25	; 0x3f
     88c:	24 97       	sbiw	r28, 0x04	; 4
	if(num<0)
     88e:	a0 e0       	ldi	r26, 0x00	; 0
     890:	0e 94 ef 0a 	call	0x15de	; 0x15de <__cmpdi2_s8>
     894:	0c f0       	brlt	.+2      	; 0x898 <Serial_Send_Int+0x5c>
     896:	a6 c0       	rjmp	.+332    	; 0x9e4 <__stack+0xe5>
	{
		Serial_Send_String("-");
     898:	85 e0       	ldi	r24, 0x05	; 5
     89a:	91 e0       	ldi	r25, 0x01	; 1
     89c:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <Serial_Send_String>
		num=-num;
     8a0:	22 2d       	mov	r18, r2
     8a2:	33 2d       	mov	r19, r3
     8a4:	40 2f       	mov	r20, r16
     8a6:	22 96       	adiw	r28, 0x02	; 2
     8a8:	5f ad       	ldd	r21, Y+63	; 0x3f
     8aa:	22 97       	sbiw	r28, 0x02	; 2
     8ac:	68 2d       	mov	r22, r8
     8ae:	71 2f       	mov	r23, r17
     8b0:	23 96       	adiw	r28, 0x03	; 3
     8b2:	8f ad       	ldd	r24, Y+63	; 0x3f
     8b4:	23 97       	sbiw	r28, 0x03	; 3
     8b6:	24 96       	adiw	r28, 0x04	; 4
     8b8:	9f ad       	ldd	r25, Y+63	; 0x3f
     8ba:	24 97       	sbiw	r28, 0x04	; 4
     8bc:	0e 94 a8 0a 	call	0x1550	; 0x1550 <__negdi2>
     8c0:	22 2e       	mov	r2, r18
     8c2:	33 2e       	mov	r3, r19
     8c4:	04 2f       	mov	r16, r20
     8c6:	22 96       	adiw	r28, 0x02	; 2
     8c8:	5f af       	std	Y+63, r21	; 0x3f
     8ca:	22 97       	sbiw	r28, 0x02	; 2
     8cc:	86 2e       	mov	r8, r22
     8ce:	17 2f       	mov	r17, r23
     8d0:	23 96       	adiw	r28, 0x03	; 3
     8d2:	8f af       	std	Y+63, r24	; 0x3f
     8d4:	23 97       	sbiw	r28, 0x03	; 3
     8d6:	24 96       	adiw	r28, 0x04	; 4
     8d8:	9f af       	std	Y+63, r25	; 0x3f
     8da:	24 97       	sbiw	r28, 0x04	; 4
	}
	if(num==0){Serial_Tx('0');}
     8dc:	a0 e0       	ldi	r26, 0x00	; 0
     8de:	0e 94 ef 0a 	call	0x15de	; 0x15de <__cmpdi2_s8>
     8e2:	21 f4       	brne	.+8      	; 0x8ec <Serial_Send_Int+0xb0>
     8e4:	80 e3       	ldi	r24, 0x30	; 48
     8e6:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <Serial_Tx>
     8ea:	8b c0       	rjmp	.+278    	; 0xa02 <__stack+0x103>
     8ec:	ce 01       	movw	r24, r28
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	2c 01       	movw	r4, r24
     8f2:	3e 01       	movw	r6, r28
     8f4:	91 e2       	ldi	r25, 0x21	; 33
     8f6:	69 0e       	add	r6, r25
     8f8:	71 1c       	adc	r7, r1
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}

void Serial_Send_Int(int64_t num)
{
     8fa:	f2 01       	movw	r30, r4
	if(num==0){Serial_Tx('0');}
	else
	{
		char str[64];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
     8fc:	11 92       	st	Z+, r1
     8fe:	e6 15       	cp	r30, r6
     900:	f7 05       	cpc	r31, r7
     902:	e1 f7       	brne	.-8      	; 0x8fc <Serial_Send_Int+0xc0>
     904:	0f 2e       	mov	r0, r31
     906:	ff e1       	ldi	r31, 0x1F	; 31
     908:	9f 2e       	mov	r9, r31
     90a:	f0 2d       	mov	r31, r0
		i=31;
		while (num)
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
     90c:	28 96       	adiw	r28, 0x08	; 8
     90e:	5f ae       	std	Y+63, r5	; 0x3f
     910:	4e ae       	std	Y+62, r4	; 0x3e
     912:	28 97       	sbiw	r28, 0x08	; 8
     914:	2a 96       	adiw	r28, 0x0a	; 10
     916:	7f ae       	std	Y+63, r7	; 0x3f
     918:	6e ae       	std	Y+62, r6	; 0x3e
     91a:	2a 97       	sbiw	r28, 0x0a	; 10
     91c:	79 2c       	mov	r7, r9
     91e:	50 2e       	mov	r5, r16
     920:	91 2e       	mov	r9, r17
     922:	e1 e0       	ldi	r30, 0x01	; 1
     924:	f0 e0       	ldi	r31, 0x00	; 0
     926:	ec 0f       	add	r30, r28
     928:	fd 1f       	adc	r31, r29
     92a:	e7 0d       	add	r30, r7
     92c:	f1 1d       	adc	r31, r1
     92e:	26 96       	adiw	r28, 0x06	; 6
     930:	ff af       	std	Y+63, r31	; 0x3f
     932:	ee af       	std	Y+62, r30	; 0x3e
     934:	26 97       	sbiw	r28, 0x06	; 6
     936:	0f 2e       	mov	r0, r31
     938:	fa e0       	ldi	r31, 0x0A	; 10
     93a:	af 2e       	mov	r10, r31
     93c:	f0 2d       	mov	r31, r0
     93e:	b1 2c       	mov	r11, r1
     940:	c1 2c       	mov	r12, r1
     942:	d1 2c       	mov	r13, r1
     944:	e1 2c       	mov	r14, r1
     946:	f1 2c       	mov	r15, r1
     948:	00 e0       	ldi	r16, 0x00	; 0
     94a:	10 e0       	ldi	r17, 0x00	; 0
     94c:	22 2d       	mov	r18, r2
     94e:	33 2d       	mov	r19, r3
     950:	45 2d       	mov	r20, r5
     952:	22 96       	adiw	r28, 0x02	; 2
     954:	5f ad       	ldd	r21, Y+63	; 0x3f
     956:	22 97       	sbiw	r28, 0x02	; 2
     958:	68 2d       	mov	r22, r8
     95a:	79 2d       	mov	r23, r9
     95c:	23 96       	adiw	r28, 0x03	; 3
     95e:	8f ad       	ldd	r24, Y+63	; 0x3f
     960:	23 97       	sbiw	r28, 0x03	; 3
     962:	24 96       	adiw	r28, 0x04	; 4
     964:	9f ad       	ldd	r25, Y+63	; 0x3f
     966:	24 97       	sbiw	r28, 0x04	; 4
     968:	0e 94 18 0a 	call	0x1430	; 0x1430 <__moddi3>
     96c:	20 5d       	subi	r18, 0xD0	; 208
     96e:	26 96       	adiw	r28, 0x06	; 6
     970:	ee ad       	ldd	r30, Y+62	; 0x3e
     972:	ff ad       	ldd	r31, Y+63	; 0x3f
     974:	26 97       	sbiw	r28, 0x06	; 6
     976:	20 83       	st	Z, r18
			num/=10;
     978:	22 2d       	mov	r18, r2
     97a:	33 2d       	mov	r19, r3
     97c:	45 2d       	mov	r20, r5
     97e:	22 96       	adiw	r28, 0x02	; 2
     980:	5f ad       	ldd	r21, Y+63	; 0x3f
     982:	22 97       	sbiw	r28, 0x02	; 2
     984:	68 2d       	mov	r22, r8
     986:	79 2d       	mov	r23, r9
     988:	23 96       	adiw	r28, 0x03	; 3
     98a:	8f ad       	ldd	r24, Y+63	; 0x3f
     98c:	23 97       	sbiw	r28, 0x03	; 3
     98e:	24 96       	adiw	r28, 0x04	; 4
     990:	9f ad       	ldd	r25, Y+63	; 0x3f
     992:	24 97       	sbiw	r28, 0x04	; 4
     994:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__divdi3>
     998:	22 2e       	mov	r2, r18
     99a:	33 2e       	mov	r3, r19
     99c:	54 2e       	mov	r5, r20
     99e:	22 96       	adiw	r28, 0x02	; 2
     9a0:	5f af       	std	Y+63, r21	; 0x3f
     9a2:	22 97       	sbiw	r28, 0x02	; 2
     9a4:	86 2e       	mov	r8, r22
     9a6:	97 2e       	mov	r9, r23
     9a8:	23 96       	adiw	r28, 0x03	; 3
     9aa:	8f af       	std	Y+63, r24	; 0x3f
     9ac:	23 97       	sbiw	r28, 0x03	; 3
     9ae:	24 96       	adiw	r28, 0x04	; 4
     9b0:	9f af       	std	Y+63, r25	; 0x3f
     9b2:	24 97       	sbiw	r28, 0x04	; 4
			i--;
     9b4:	7a 94       	dec	r7
	{
		char str[64];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
		i=31;
		while (num)
     9b6:	a0 e0       	ldi	r26, 0x00	; 0
     9b8:	0e 94 ef 0a 	call	0x15de	; 0x15de <__cmpdi2_s8>
     9bc:	09 f0       	breq	.+2      	; 0x9c0 <__stack+0xc1>
     9be:	b1 cf       	rjmp	.-158    	; 0x922 <__stack+0x23>
     9c0:	28 96       	adiw	r28, 0x08	; 8
     9c2:	4e ac       	ldd	r4, Y+62	; 0x3e
     9c4:	5f ac       	ldd	r5, Y+63	; 0x3f
     9c6:	28 97       	sbiw	r28, 0x08	; 8
     9c8:	2a 96       	adiw	r28, 0x0a	; 10
     9ca:	6e ac       	ldd	r6, Y+62	; 0x3e
     9cc:	7f ac       	ldd	r7, Y+63	; 0x3f
     9ce:	2a 97       	sbiw	r28, 0x0a	; 10
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
		if (str[i]) Serial_Tx(str[i]);
     9d0:	f2 01       	movw	r30, r4
     9d2:	81 91       	ld	r24, Z+
     9d4:	2f 01       	movw	r4, r30
     9d6:	81 11       	cpse	r24, r1
     9d8:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <Serial_Tx>
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
     9dc:	46 14       	cp	r4, r6
     9de:	57 04       	cpc	r5, r7
     9e0:	b9 f7       	brne	.-18     	; 0x9d0 <__stack+0xd1>
     9e2:	0f c0       	rjmp	.+30     	; 0xa02 <__stack+0x103>
	if(num<0)
	{
		Serial_Send_String("-");
		num=-num;
	}
	if(num==0){Serial_Tx('0');}
     9e4:	22 96       	adiw	r28, 0x02	; 2
     9e6:	5f ad       	ldd	r21, Y+63	; 0x3f
     9e8:	22 97       	sbiw	r28, 0x02	; 2
     9ea:	23 96       	adiw	r28, 0x03	; 3
     9ec:	8f ad       	ldd	r24, Y+63	; 0x3f
     9ee:	23 97       	sbiw	r28, 0x03	; 3
     9f0:	24 96       	adiw	r28, 0x04	; 4
     9f2:	9f ad       	ldd	r25, Y+63	; 0x3f
     9f4:	24 97       	sbiw	r28, 0x04	; 4
     9f6:	a0 e0       	ldi	r26, 0x00	; 0
     9f8:	0e 94 ef 0a 	call	0x15de	; 0x15de <__cmpdi2_s8>
     9fc:	09 f0       	breq	.+2      	; 0xa00 <__stack+0x101>
     9fe:	76 cf       	rjmp	.-276    	; 0x8ec <Serial_Send_Int+0xb0>
     a00:	71 cf       	rjmp	.-286    	; 0x8e4 <Serial_Send_Int+0xa8>
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
		if (str[i]) Serial_Tx(str[i]);
	}
}
     a02:	c7 5b       	subi	r28, 0xB7	; 183
     a04:	df 4f       	sbci	r29, 0xFF	; 255
     a06:	0f b6       	in	r0, 0x3f	; 63
     a08:	f8 94       	cli
     a0a:	de bf       	out	0x3e, r29	; 62
     a0c:	0f be       	out	0x3f, r0	; 63
     a0e:	cd bf       	out	0x3d, r28	; 61
     a10:	df 91       	pop	r29
     a12:	cf 91       	pop	r28
     a14:	1f 91       	pop	r17
     a16:	0f 91       	pop	r16
     a18:	ff 90       	pop	r15
     a1a:	ef 90       	pop	r14
     a1c:	df 90       	pop	r13
     a1e:	cf 90       	pop	r12
     a20:	bf 90       	pop	r11
     a22:	af 90       	pop	r10
     a24:	9f 90       	pop	r9
     a26:	8f 90       	pop	r8
     a28:	7f 90       	pop	r7
     a2a:	6f 90       	pop	r6
     a2c:	5f 90       	pop	r5
     a2e:	4f 90       	pop	r4
     a30:	3f 90       	pop	r3
     a32:	2f 90       	pop	r2
     a34:	08 95       	ret

00000a36 <SerialN>:
		Serial_Tx(string1[i]);
	}
}
void SerialN()
{
	Serial_Tx(13);
     a36:	8d e0       	ldi	r24, 0x0D	; 13
     a38:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <Serial_Tx>
	Serial_Tx(10);
     a3c:	8a e0       	ldi	r24, 0x0A	; 10
     a3e:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <Serial_Tx>
     a42:	08 95       	ret

00000a44 <Serial_Send_Float>:
}
void Serial_Send_Float(double data)
{
     a44:	4f 92       	push	r4
     a46:	5f 92       	push	r5
     a48:	6f 92       	push	r6
     a4a:	7f 92       	push	r7
     a4c:	8f 92       	push	r8
     a4e:	9f 92       	push	r9
     a50:	af 92       	push	r10
     a52:	bf 92       	push	r11
     a54:	cf 92       	push	r12
     a56:	df 92       	push	r13
     a58:	ef 92       	push	r14
     a5a:	ff 92       	push	r15
     a5c:	0f 93       	push	r16
     a5e:	1f 93       	push	r17
     a60:	cf 93       	push	r28
     a62:	df 93       	push	r29
     a64:	6b 01       	movw	r12, r22
     a66:	7c 01       	movw	r14, r24
	if(data<0)
     a68:	20 e0       	ldi	r18, 0x00	; 0
     a6a:	30 e0       	ldi	r19, 0x00	; 0
     a6c:	a9 01       	movw	r20, r18
     a6e:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__cmpsf2>
     a72:	88 23       	and	r24, r24
     a74:	44 f4       	brge	.+16     	; 0xa86 <Serial_Send_Float+0x42>
	{
		Serial_Send_String("-");
     a76:	85 e0       	ldi	r24, 0x05	; 5
     a78:	91 e0       	ldi	r25, 0x01	; 1
     a7a:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <Serial_Send_String>
		data=-data;
     a7e:	f7 fa       	bst	r15, 7
     a80:	f0 94       	com	r15
     a82:	f7 f8       	bld	r15, 7
     a84:	f0 94       	com	r15
	}
	long var=data;
     a86:	c7 01       	movw	r24, r14
     a88:	b6 01       	movw	r22, r12
     a8a:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__fixsfsi>
     a8e:	2b 01       	movw	r4, r22
     a90:	3c 01       	movw	r6, r24
	Serial_Send_Int(var);
     a92:	4b 01       	movw	r8, r22
     a94:	5c 01       	movw	r10, r24
     a96:	bb 0c       	add	r11, r11
     a98:	88 08       	sbc	r8, r8
     a9a:	98 2c       	mov	r9, r8
     a9c:	54 01       	movw	r10, r8
     a9e:	26 2f       	mov	r18, r22
     aa0:	35 2d       	mov	r19, r5
     aa2:	46 2d       	mov	r20, r6
     aa4:	57 2d       	mov	r21, r7
     aa6:	68 2d       	mov	r22, r8
     aa8:	78 2d       	mov	r23, r8
     aaa:	88 2d       	mov	r24, r8
     aac:	98 2d       	mov	r25, r8
     aae:	0e 94 1e 04 	call	0x83c	; 0x83c <Serial_Send_Int>
	int k=0,j=0;
     ab2:	c0 e0       	ldi	r28, 0x00	; 0
     ab4:	d0 e0       	ldi	r29, 0x00	; 0
	double Num=data;
	
	
	while (fmod(Num,1.00)!=0)
     ab6:	0b c0       	rjmp	.+22     	; 0xace <Serial_Send_Float+0x8a>
	{
		Num*=10;
     ab8:	20 e0       	ldi	r18, 0x00	; 0
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	40 e2       	ldi	r20, 0x20	; 32
     abe:	51 e4       	ldi	r21, 0x41	; 65
     ac0:	c7 01       	movw	r24, r14
     ac2:	b6 01       	movw	r22, r12
     ac4:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulsf3>
     ac8:	6b 01       	movw	r12, r22
     aca:	7c 01       	movw	r14, r24
		k++;
     acc:	21 96       	adiw	r28, 0x01	; 1
	Serial_Send_Int(var);
	int k=0,j=0;
	double Num=data;
	
	
	while (fmod(Num,1.00)!=0)
     ace:	20 e0       	ldi	r18, 0x00	; 0
     ad0:	30 e0       	ldi	r19, 0x00	; 0
     ad2:	40 e8       	ldi	r20, 0x80	; 128
     ad4:	5f e3       	ldi	r21, 0x3F	; 63
     ad6:	c7 01       	movw	r24, r14
     ad8:	b6 01       	movw	r22, r12
     ada:	0e 94 58 07 	call	0xeb0	; 0xeb0 <fmod>
     ade:	20 e0       	ldi	r18, 0x00	; 0
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	a9 01       	movw	r20, r18
     ae4:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__cmpsf2>
     ae8:	81 11       	cpse	r24, r1
     aea:	e6 cf       	rjmp	.-52     	; 0xab8 <Serial_Send_Float+0x74>
		k++;
	}
	double data1=Num;

		
	var=var*pow(10,k);
     aec:	be 01       	movw	r22, r28
     aee:	0d 2e       	mov	r0, r29
     af0:	00 0c       	add	r0, r0
     af2:	88 0b       	sbc	r24, r24
     af4:	99 0b       	sbc	r25, r25
     af6:	0e 94 12 07 	call	0xe24	; 0xe24 <__floatsisf>
     afa:	9b 01       	movw	r18, r22
     afc:	ac 01       	movw	r20, r24
     afe:	60 e0       	ldi	r22, 0x00	; 0
     b00:	70 e0       	ldi	r23, 0x00	; 0
     b02:	80 e2       	ldi	r24, 0x20	; 32
     b04:	91 e4       	ldi	r25, 0x41	; 65
     b06:	0e 94 96 08 	call	0x112c	; 0x112c <pow>
     b0a:	4b 01       	movw	r8, r22
     b0c:	5c 01       	movw	r10, r24
     b0e:	c3 01       	movw	r24, r6
     b10:	b2 01       	movw	r22, r4
     b12:	0e 94 12 07 	call	0xe24	; 0xe24 <__floatsisf>
     b16:	a5 01       	movw	r20, r10
     b18:	94 01       	movw	r18, r8
     b1a:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulsf3>

	data1=data1-var;
     b1e:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__fixsfsi>
     b22:	0e 94 12 07 	call	0xe24	; 0xe24 <__floatsisf>
     b26:	9b 01       	movw	r18, r22
     b28:	ac 01       	movw	r20, r24
     b2a:	c7 01       	movw	r24, r14
     b2c:	b6 01       	movw	r22, r12
     b2e:	0e 94 f6 05 	call	0xbec	; 0xbec <__subsf3>
     b32:	6b 01       	movw	r12, r22
     b34:	7c 01       	movw	r14, r24
	
	long NuM=data1;
     b36:	0e 94 da 06 	call	0xdb4	; 0xdb4 <__fixsfsi>
     b3a:	4b 01       	movw	r8, r22
     b3c:	5c 01       	movw	r10, r24
	while (data1>1){
     b3e:	20 e0       	ldi	r18, 0x00	; 0
     b40:	30 e0       	ldi	r19, 0x00	; 0
     b42:	40 e8       	ldi	r20, 0x80	; 128
     b44:	5f e3       	ldi	r21, 0x3F	; 63
     b46:	c7 01       	movw	r24, r14
     b48:	b6 01       	movw	r22, r12
     b4a:	0e 94 24 08 	call	0x1048	; 0x1048 <__gesf2>
     b4e:	18 16       	cp	r1, r24
     b50:	bc f4       	brge	.+46     	; 0xb80 <Serial_Send_Float+0x13c>
     b52:	00 e0       	ldi	r16, 0x00	; 0
     b54:	10 e0       	ldi	r17, 0x00	; 0
		data1/=10.00;
     b56:	20 e0       	ldi	r18, 0x00	; 0
     b58:	30 e0       	ldi	r19, 0x00	; 0
     b5a:	40 e2       	ldi	r20, 0x20	; 32
     b5c:	51 e4       	ldi	r21, 0x41	; 65
     b5e:	c7 01       	movw	r24, r14
     b60:	b6 01       	movw	r22, r12
     b62:	0e 94 68 06 	call	0xcd0	; 0xcd0 <__divsf3>
     b66:	6b 01       	movw	r12, r22
     b68:	7c 01       	movw	r14, r24
		j++;
     b6a:	0f 5f       	subi	r16, 0xFF	; 255
     b6c:	1f 4f       	sbci	r17, 0xFF	; 255
	var=var*pow(10,k);

	data1=data1-var;
	
	long NuM=data1;
	while (data1>1){
     b6e:	20 e0       	ldi	r18, 0x00	; 0
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	40 e8       	ldi	r20, 0x80	; 128
     b74:	5f e3       	ldi	r21, 0x3F	; 63
     b76:	0e 94 24 08 	call	0x1048	; 0x1048 <__gesf2>
     b7a:	18 16       	cp	r1, r24
     b7c:	64 f3       	brlt	.-40     	; 0xb56 <Serial_Send_Float+0x112>
     b7e:	02 c0       	rjmp	.+4      	; 0xb84 <Serial_Send_Float+0x140>
		Serial_Send_String("-");
		data=-data;
	}
	long var=data;
	Serial_Send_Int(var);
	int k=0,j=0;
     b80:	00 e0       	ldi	r16, 0x00	; 0
     b82:	10 e0       	ldi	r17, 0x00	; 0
	while (data1>1){
		data1/=10.00;
		j++;
		
	}
	int diff=k-j;
     b84:	c0 1b       	sub	r28, r16
     b86:	d1 0b       	sbc	r29, r17
	Serial_Send_String(".");
     b88:	87 e0       	ldi	r24, 0x07	; 7
     b8a:	91 e0       	ldi	r25, 0x01	; 1
     b8c:	0e 94 fc 03 	call	0x7f8	; 0x7f8 <Serial_Send_String>
	
	for(int i=0;i<diff;i++)Serial_Tx('0');
     b90:	1c 16       	cp	r1, r28
     b92:	1d 06       	cpc	r1, r29
     b94:	54 f4       	brge	.+20     	; 0xbaa <Serial_Send_Float+0x166>
     b96:	00 e0       	ldi	r16, 0x00	; 0
     b98:	10 e0       	ldi	r17, 0x00	; 0
     b9a:	80 e3       	ldi	r24, 0x30	; 48
     b9c:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <Serial_Tx>
     ba0:	0f 5f       	subi	r16, 0xFF	; 255
     ba2:	1f 4f       	sbci	r17, 0xFF	; 255
     ba4:	c0 17       	cp	r28, r16
     ba6:	d1 07       	cpc	r29, r17
     ba8:	c1 f7       	brne	.-16     	; 0xb9a <Serial_Send_Float+0x156>
	Serial_Send_Int(NuM);
     baa:	75 01       	movw	r14, r10
     bac:	64 01       	movw	r12, r8
     bae:	ff 0c       	add	r15, r15
     bb0:	cc 08       	sbc	r12, r12
     bb2:	dc 2c       	mov	r13, r12
     bb4:	76 01       	movw	r14, r12
     bb6:	28 2d       	mov	r18, r8
     bb8:	39 2d       	mov	r19, r9
     bba:	4a 2d       	mov	r20, r10
     bbc:	5b 2d       	mov	r21, r11
     bbe:	6c 2d       	mov	r22, r12
     bc0:	7c 2d       	mov	r23, r12
     bc2:	8c 2d       	mov	r24, r12
     bc4:	9c 2d       	mov	r25, r12
     bc6:	0e 94 1e 04 	call	0x83c	; 0x83c <Serial_Send_Int>
}
     bca:	df 91       	pop	r29
     bcc:	cf 91       	pop	r28
     bce:	1f 91       	pop	r17
     bd0:	0f 91       	pop	r16
     bd2:	ff 90       	pop	r15
     bd4:	ef 90       	pop	r14
     bd6:	df 90       	pop	r13
     bd8:	cf 90       	pop	r12
     bda:	bf 90       	pop	r11
     bdc:	af 90       	pop	r10
     bde:	9f 90       	pop	r9
     be0:	8f 90       	pop	r8
     be2:	7f 90       	pop	r7
     be4:	6f 90       	pop	r6
     be6:	5f 90       	pop	r5
     be8:	4f 90       	pop	r4
     bea:	08 95       	ret

00000bec <__subsf3>:
     bec:	50 58       	subi	r21, 0x80	; 128

00000bee <__addsf3>:
     bee:	bb 27       	eor	r27, r27
     bf0:	aa 27       	eor	r26, r26
     bf2:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__addsf3x>
     bf6:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__fp_round>
     bfa:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__fp_pscA>
     bfe:	38 f0       	brcs	.+14     	; 0xc0e <__addsf3+0x20>
     c00:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__fp_pscB>
     c04:	20 f0       	brcs	.+8      	; 0xc0e <__addsf3+0x20>
     c06:	39 f4       	brne	.+14     	; 0xc16 <__addsf3+0x28>
     c08:	9f 3f       	cpi	r25, 0xFF	; 255
     c0a:	19 f4       	brne	.+6      	; 0xc12 <__addsf3+0x24>
     c0c:	26 f4       	brtc	.+8      	; 0xc16 <__addsf3+0x28>
     c0e:	0c 94 d9 07 	jmp	0xfb2	; 0xfb2 <__fp_nan>
     c12:	0e f4       	brtc	.+2      	; 0xc16 <__addsf3+0x28>
     c14:	e0 95       	com	r30
     c16:	e7 fb       	bst	r30, 7
     c18:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_inf>

00000c1c <__addsf3x>:
     c1c:	e9 2f       	mov	r30, r25
     c1e:	0e 94 fb 07 	call	0xff6	; 0xff6 <__fp_split3>
     c22:	58 f3       	brcs	.-42     	; 0xbfa <__addsf3+0xc>
     c24:	ba 17       	cp	r27, r26
     c26:	62 07       	cpc	r22, r18
     c28:	73 07       	cpc	r23, r19
     c2a:	84 07       	cpc	r24, r20
     c2c:	95 07       	cpc	r25, r21
     c2e:	20 f0       	brcs	.+8      	; 0xc38 <__addsf3x+0x1c>
     c30:	79 f4       	brne	.+30     	; 0xc50 <__addsf3x+0x34>
     c32:	a6 f5       	brtc	.+104    	; 0xc9c <__addsf3x+0x80>
     c34:	0c 94 1d 08 	jmp	0x103a	; 0x103a <__fp_zero>
     c38:	0e f4       	brtc	.+2      	; 0xc3c <__addsf3x+0x20>
     c3a:	e0 95       	com	r30
     c3c:	0b 2e       	mov	r0, r27
     c3e:	ba 2f       	mov	r27, r26
     c40:	a0 2d       	mov	r26, r0
     c42:	0b 01       	movw	r0, r22
     c44:	b9 01       	movw	r22, r18
     c46:	90 01       	movw	r18, r0
     c48:	0c 01       	movw	r0, r24
     c4a:	ca 01       	movw	r24, r20
     c4c:	a0 01       	movw	r20, r0
     c4e:	11 24       	eor	r1, r1
     c50:	ff 27       	eor	r31, r31
     c52:	59 1b       	sub	r21, r25
     c54:	99 f0       	breq	.+38     	; 0xc7c <__addsf3x+0x60>
     c56:	59 3f       	cpi	r21, 0xF9	; 249
     c58:	50 f4       	brcc	.+20     	; 0xc6e <__addsf3x+0x52>
     c5a:	50 3e       	cpi	r21, 0xE0	; 224
     c5c:	68 f1       	brcs	.+90     	; 0xcb8 <__addsf3x+0x9c>
     c5e:	1a 16       	cp	r1, r26
     c60:	f0 40       	sbci	r31, 0x00	; 0
     c62:	a2 2f       	mov	r26, r18
     c64:	23 2f       	mov	r18, r19
     c66:	34 2f       	mov	r19, r20
     c68:	44 27       	eor	r20, r20
     c6a:	58 5f       	subi	r21, 0xF8	; 248
     c6c:	f3 cf       	rjmp	.-26     	; 0xc54 <__addsf3x+0x38>
     c6e:	46 95       	lsr	r20
     c70:	37 95       	ror	r19
     c72:	27 95       	ror	r18
     c74:	a7 95       	ror	r26
     c76:	f0 40       	sbci	r31, 0x00	; 0
     c78:	53 95       	inc	r21
     c7a:	c9 f7       	brne	.-14     	; 0xc6e <__addsf3x+0x52>
     c7c:	7e f4       	brtc	.+30     	; 0xc9c <__addsf3x+0x80>
     c7e:	1f 16       	cp	r1, r31
     c80:	ba 0b       	sbc	r27, r26
     c82:	62 0b       	sbc	r22, r18
     c84:	73 0b       	sbc	r23, r19
     c86:	84 0b       	sbc	r24, r20
     c88:	ba f0       	brmi	.+46     	; 0xcb8 <__addsf3x+0x9c>
     c8a:	91 50       	subi	r25, 0x01	; 1
     c8c:	a1 f0       	breq	.+40     	; 0xcb6 <__addsf3x+0x9a>
     c8e:	ff 0f       	add	r31, r31
     c90:	bb 1f       	adc	r27, r27
     c92:	66 1f       	adc	r22, r22
     c94:	77 1f       	adc	r23, r23
     c96:	88 1f       	adc	r24, r24
     c98:	c2 f7       	brpl	.-16     	; 0xc8a <__addsf3x+0x6e>
     c9a:	0e c0       	rjmp	.+28     	; 0xcb8 <__addsf3x+0x9c>
     c9c:	ba 0f       	add	r27, r26
     c9e:	62 1f       	adc	r22, r18
     ca0:	73 1f       	adc	r23, r19
     ca2:	84 1f       	adc	r24, r20
     ca4:	48 f4       	brcc	.+18     	; 0xcb8 <__addsf3x+0x9c>
     ca6:	87 95       	ror	r24
     ca8:	77 95       	ror	r23
     caa:	67 95       	ror	r22
     cac:	b7 95       	ror	r27
     cae:	f7 95       	ror	r31
     cb0:	9e 3f       	cpi	r25, 0xFE	; 254
     cb2:	08 f0       	brcs	.+2      	; 0xcb6 <__addsf3x+0x9a>
     cb4:	b0 cf       	rjmp	.-160    	; 0xc16 <__addsf3+0x28>
     cb6:	93 95       	inc	r25
     cb8:	88 0f       	add	r24, r24
     cba:	08 f0       	brcs	.+2      	; 0xcbe <__addsf3x+0xa2>
     cbc:	99 27       	eor	r25, r25
     cbe:	ee 0f       	add	r30, r30
     cc0:	97 95       	ror	r25
     cc2:	87 95       	ror	r24
     cc4:	08 95       	ret

00000cc6 <__cmpsf2>:
     cc6:	0e 94 a1 07 	call	0xf42	; 0xf42 <__fp_cmp>
     cca:	08 f4       	brcc	.+2      	; 0xcce <__cmpsf2+0x8>
     ccc:	81 e0       	ldi	r24, 0x01	; 1
     cce:	08 95       	ret

00000cd0 <__divsf3>:
     cd0:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__divsf3x>
     cd4:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__fp_round>
     cd8:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__fp_pscB>
     cdc:	58 f0       	brcs	.+22     	; 0xcf4 <__divsf3+0x24>
     cde:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__fp_pscA>
     ce2:	40 f0       	brcs	.+16     	; 0xcf4 <__divsf3+0x24>
     ce4:	29 f4       	brne	.+10     	; 0xcf0 <__divsf3+0x20>
     ce6:	5f 3f       	cpi	r21, 0xFF	; 255
     ce8:	29 f0       	breq	.+10     	; 0xcf4 <__divsf3+0x24>
     cea:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_inf>
     cee:	51 11       	cpse	r21, r1
     cf0:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__fp_szero>
     cf4:	0c 94 d9 07 	jmp	0xfb2	; 0xfb2 <__fp_nan>

00000cf8 <__divsf3x>:
     cf8:	0e 94 fb 07 	call	0xff6	; 0xff6 <__fp_split3>
     cfc:	68 f3       	brcs	.-38     	; 0xcd8 <__divsf3+0x8>

00000cfe <__divsf3_pse>:
     cfe:	99 23       	and	r25, r25
     d00:	b1 f3       	breq	.-20     	; 0xcee <__divsf3+0x1e>
     d02:	55 23       	and	r21, r21
     d04:	91 f3       	breq	.-28     	; 0xcea <__divsf3+0x1a>
     d06:	95 1b       	sub	r25, r21
     d08:	55 0b       	sbc	r21, r21
     d0a:	bb 27       	eor	r27, r27
     d0c:	aa 27       	eor	r26, r26
     d0e:	62 17       	cp	r22, r18
     d10:	73 07       	cpc	r23, r19
     d12:	84 07       	cpc	r24, r20
     d14:	38 f0       	brcs	.+14     	; 0xd24 <__divsf3_pse+0x26>
     d16:	9f 5f       	subi	r25, 0xFF	; 255
     d18:	5f 4f       	sbci	r21, 0xFF	; 255
     d1a:	22 0f       	add	r18, r18
     d1c:	33 1f       	adc	r19, r19
     d1e:	44 1f       	adc	r20, r20
     d20:	aa 1f       	adc	r26, r26
     d22:	a9 f3       	breq	.-22     	; 0xd0e <__divsf3_pse+0x10>
     d24:	35 d0       	rcall	.+106    	; 0xd90 <__divsf3_pse+0x92>
     d26:	0e 2e       	mov	r0, r30
     d28:	3a f0       	brmi	.+14     	; 0xd38 <__divsf3_pse+0x3a>
     d2a:	e0 e8       	ldi	r30, 0x80	; 128
     d2c:	32 d0       	rcall	.+100    	; 0xd92 <__divsf3_pse+0x94>
     d2e:	91 50       	subi	r25, 0x01	; 1
     d30:	50 40       	sbci	r21, 0x00	; 0
     d32:	e6 95       	lsr	r30
     d34:	00 1c       	adc	r0, r0
     d36:	ca f7       	brpl	.-14     	; 0xd2a <__divsf3_pse+0x2c>
     d38:	2b d0       	rcall	.+86     	; 0xd90 <__divsf3_pse+0x92>
     d3a:	fe 2f       	mov	r31, r30
     d3c:	29 d0       	rcall	.+82     	; 0xd90 <__divsf3_pse+0x92>
     d3e:	66 0f       	add	r22, r22
     d40:	77 1f       	adc	r23, r23
     d42:	88 1f       	adc	r24, r24
     d44:	bb 1f       	adc	r27, r27
     d46:	26 17       	cp	r18, r22
     d48:	37 07       	cpc	r19, r23
     d4a:	48 07       	cpc	r20, r24
     d4c:	ab 07       	cpc	r26, r27
     d4e:	b0 e8       	ldi	r27, 0x80	; 128
     d50:	09 f0       	breq	.+2      	; 0xd54 <__divsf3_pse+0x56>
     d52:	bb 0b       	sbc	r27, r27
     d54:	80 2d       	mov	r24, r0
     d56:	bf 01       	movw	r22, r30
     d58:	ff 27       	eor	r31, r31
     d5a:	93 58       	subi	r25, 0x83	; 131
     d5c:	5f 4f       	sbci	r21, 0xFF	; 255
     d5e:	3a f0       	brmi	.+14     	; 0xd6e <__divsf3_pse+0x70>
     d60:	9e 3f       	cpi	r25, 0xFE	; 254
     d62:	51 05       	cpc	r21, r1
     d64:	78 f0       	brcs	.+30     	; 0xd84 <__divsf3_pse+0x86>
     d66:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_inf>
     d6a:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__fp_szero>
     d6e:	5f 3f       	cpi	r21, 0xFF	; 255
     d70:	e4 f3       	brlt	.-8      	; 0xd6a <__divsf3_pse+0x6c>
     d72:	98 3e       	cpi	r25, 0xE8	; 232
     d74:	d4 f3       	brlt	.-12     	; 0xd6a <__divsf3_pse+0x6c>
     d76:	86 95       	lsr	r24
     d78:	77 95       	ror	r23
     d7a:	67 95       	ror	r22
     d7c:	b7 95       	ror	r27
     d7e:	f7 95       	ror	r31
     d80:	9f 5f       	subi	r25, 0xFF	; 255
     d82:	c9 f7       	brne	.-14     	; 0xd76 <__divsf3_pse+0x78>
     d84:	88 0f       	add	r24, r24
     d86:	91 1d       	adc	r25, r1
     d88:	96 95       	lsr	r25
     d8a:	87 95       	ror	r24
     d8c:	97 f9       	bld	r25, 7
     d8e:	08 95       	ret
     d90:	e1 e0       	ldi	r30, 0x01	; 1
     d92:	66 0f       	add	r22, r22
     d94:	77 1f       	adc	r23, r23
     d96:	88 1f       	adc	r24, r24
     d98:	bb 1f       	adc	r27, r27
     d9a:	62 17       	cp	r22, r18
     d9c:	73 07       	cpc	r23, r19
     d9e:	84 07       	cpc	r24, r20
     da0:	ba 07       	cpc	r27, r26
     da2:	20 f0       	brcs	.+8      	; 0xdac <__divsf3_pse+0xae>
     da4:	62 1b       	sub	r22, r18
     da6:	73 0b       	sbc	r23, r19
     da8:	84 0b       	sbc	r24, r20
     daa:	ba 0b       	sbc	r27, r26
     dac:	ee 1f       	adc	r30, r30
     dae:	88 f7       	brcc	.-30     	; 0xd92 <__divsf3_pse+0x94>
     db0:	e0 95       	com	r30
     db2:	08 95       	ret

00000db4 <__fixsfsi>:
     db4:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <__fixunssfsi>
     db8:	68 94       	set
     dba:	b1 11       	cpse	r27, r1
     dbc:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__fp_szero>
     dc0:	08 95       	ret

00000dc2 <__fixunssfsi>:
     dc2:	0e 94 03 08 	call	0x1006	; 0x1006 <__fp_splitA>
     dc6:	88 f0       	brcs	.+34     	; 0xdea <__fixunssfsi+0x28>
     dc8:	9f 57       	subi	r25, 0x7F	; 127
     dca:	98 f0       	brcs	.+38     	; 0xdf2 <__fixunssfsi+0x30>
     dcc:	b9 2f       	mov	r27, r25
     dce:	99 27       	eor	r25, r25
     dd0:	b7 51       	subi	r27, 0x17	; 23
     dd2:	b0 f0       	brcs	.+44     	; 0xe00 <__fixunssfsi+0x3e>
     dd4:	e1 f0       	breq	.+56     	; 0xe0e <__fixunssfsi+0x4c>
     dd6:	66 0f       	add	r22, r22
     dd8:	77 1f       	adc	r23, r23
     dda:	88 1f       	adc	r24, r24
     ddc:	99 1f       	adc	r25, r25
     dde:	1a f0       	brmi	.+6      	; 0xde6 <__fixunssfsi+0x24>
     de0:	ba 95       	dec	r27
     de2:	c9 f7       	brne	.-14     	; 0xdd6 <__fixunssfsi+0x14>
     de4:	14 c0       	rjmp	.+40     	; 0xe0e <__fixunssfsi+0x4c>
     de6:	b1 30       	cpi	r27, 0x01	; 1
     de8:	91 f0       	breq	.+36     	; 0xe0e <__fixunssfsi+0x4c>
     dea:	0e 94 1d 08 	call	0x103a	; 0x103a <__fp_zero>
     dee:	b1 e0       	ldi	r27, 0x01	; 1
     df0:	08 95       	ret
     df2:	0c 94 1d 08 	jmp	0x103a	; 0x103a <__fp_zero>
     df6:	67 2f       	mov	r22, r23
     df8:	78 2f       	mov	r23, r24
     dfa:	88 27       	eor	r24, r24
     dfc:	b8 5f       	subi	r27, 0xF8	; 248
     dfe:	39 f0       	breq	.+14     	; 0xe0e <__fixunssfsi+0x4c>
     e00:	b9 3f       	cpi	r27, 0xF9	; 249
     e02:	cc f3       	brlt	.-14     	; 0xdf6 <__fixunssfsi+0x34>
     e04:	86 95       	lsr	r24
     e06:	77 95       	ror	r23
     e08:	67 95       	ror	r22
     e0a:	b3 95       	inc	r27
     e0c:	d9 f7       	brne	.-10     	; 0xe04 <__fixunssfsi+0x42>
     e0e:	3e f4       	brtc	.+14     	; 0xe1e <__fixunssfsi+0x5c>
     e10:	90 95       	com	r25
     e12:	80 95       	com	r24
     e14:	70 95       	com	r23
     e16:	61 95       	neg	r22
     e18:	7f 4f       	sbci	r23, 0xFF	; 255
     e1a:	8f 4f       	sbci	r24, 0xFF	; 255
     e1c:	9f 4f       	sbci	r25, 0xFF	; 255
     e1e:	08 95       	ret

00000e20 <__floatunsisf>:
     e20:	e8 94       	clt
     e22:	09 c0       	rjmp	.+18     	; 0xe36 <__floatsisf+0x12>

00000e24 <__floatsisf>:
     e24:	97 fb       	bst	r25, 7
     e26:	3e f4       	brtc	.+14     	; 0xe36 <__floatsisf+0x12>
     e28:	90 95       	com	r25
     e2a:	80 95       	com	r24
     e2c:	70 95       	com	r23
     e2e:	61 95       	neg	r22
     e30:	7f 4f       	sbci	r23, 0xFF	; 255
     e32:	8f 4f       	sbci	r24, 0xFF	; 255
     e34:	9f 4f       	sbci	r25, 0xFF	; 255
     e36:	99 23       	and	r25, r25
     e38:	a9 f0       	breq	.+42     	; 0xe64 <__floatsisf+0x40>
     e3a:	f9 2f       	mov	r31, r25
     e3c:	96 e9       	ldi	r25, 0x96	; 150
     e3e:	bb 27       	eor	r27, r27
     e40:	93 95       	inc	r25
     e42:	f6 95       	lsr	r31
     e44:	87 95       	ror	r24
     e46:	77 95       	ror	r23
     e48:	67 95       	ror	r22
     e4a:	b7 95       	ror	r27
     e4c:	f1 11       	cpse	r31, r1
     e4e:	f8 cf       	rjmp	.-16     	; 0xe40 <__floatsisf+0x1c>
     e50:	fa f4       	brpl	.+62     	; 0xe90 <__floatsisf+0x6c>
     e52:	bb 0f       	add	r27, r27
     e54:	11 f4       	brne	.+4      	; 0xe5a <__floatsisf+0x36>
     e56:	60 ff       	sbrs	r22, 0
     e58:	1b c0       	rjmp	.+54     	; 0xe90 <__floatsisf+0x6c>
     e5a:	6f 5f       	subi	r22, 0xFF	; 255
     e5c:	7f 4f       	sbci	r23, 0xFF	; 255
     e5e:	8f 4f       	sbci	r24, 0xFF	; 255
     e60:	9f 4f       	sbci	r25, 0xFF	; 255
     e62:	16 c0       	rjmp	.+44     	; 0xe90 <__floatsisf+0x6c>
     e64:	88 23       	and	r24, r24
     e66:	11 f0       	breq	.+4      	; 0xe6c <__floatsisf+0x48>
     e68:	96 e9       	ldi	r25, 0x96	; 150
     e6a:	11 c0       	rjmp	.+34     	; 0xe8e <__floatsisf+0x6a>
     e6c:	77 23       	and	r23, r23
     e6e:	21 f0       	breq	.+8      	; 0xe78 <__floatsisf+0x54>
     e70:	9e e8       	ldi	r25, 0x8E	; 142
     e72:	87 2f       	mov	r24, r23
     e74:	76 2f       	mov	r23, r22
     e76:	05 c0       	rjmp	.+10     	; 0xe82 <__floatsisf+0x5e>
     e78:	66 23       	and	r22, r22
     e7a:	71 f0       	breq	.+28     	; 0xe98 <__floatsisf+0x74>
     e7c:	96 e8       	ldi	r25, 0x86	; 134
     e7e:	86 2f       	mov	r24, r22
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	60 e0       	ldi	r22, 0x00	; 0
     e84:	2a f0       	brmi	.+10     	; 0xe90 <__floatsisf+0x6c>
     e86:	9a 95       	dec	r25
     e88:	66 0f       	add	r22, r22
     e8a:	77 1f       	adc	r23, r23
     e8c:	88 1f       	adc	r24, r24
     e8e:	da f7       	brpl	.-10     	; 0xe86 <__floatsisf+0x62>
     e90:	88 0f       	add	r24, r24
     e92:	96 95       	lsr	r25
     e94:	87 95       	ror	r24
     e96:	97 f9       	bld	r25, 7
     e98:	08 95       	ret
     e9a:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__fp_pscA>
     e9e:	20 f0       	brcs	.+8      	; 0xea8 <__floatsisf+0x84>
     ea0:	19 f0       	breq	.+6      	; 0xea8 <__floatsisf+0x84>
     ea2:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__fp_pscB>
     ea6:	50 f4       	brcc	.+20     	; 0xebc <fmod+0xc>
     ea8:	0c 94 d9 07 	jmp	0xfb2	; 0xfb2 <__fp_nan>
     eac:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__fp_szero>

00000eb0 <fmod>:
     eb0:	e9 2f       	mov	r30, r25
     eb2:	0e 94 fb 07 	call	0xff6	; 0xff6 <__fp_split3>
     eb6:	88 f3       	brcs	.-30     	; 0xe9a <__floatsisf+0x76>
     eb8:	55 23       	and	r21, r21
     eba:	b1 f3       	breq	.-20     	; 0xea8 <__floatsisf+0x84>
     ebc:	e7 fb       	bst	r30, 7
     ebe:	62 17       	cp	r22, r18
     ec0:	73 07       	cpc	r23, r19
     ec2:	84 07       	cpc	r24, r20
     ec4:	95 07       	cpc	r25, r21
     ec6:	a8 f1       	brcs	.+106    	; 0xf32 <fmod+0x82>
     ec8:	89 f3       	breq	.-30     	; 0xeac <__floatsisf+0x88>
     eca:	e9 2f       	mov	r30, r25
     ecc:	ff 27       	eor	r31, r31
     ece:	88 23       	and	r24, r24
     ed0:	2a f0       	brmi	.+10     	; 0xedc <fmod+0x2c>
     ed2:	31 97       	sbiw	r30, 0x01	; 1
     ed4:	66 0f       	add	r22, r22
     ed6:	77 1f       	adc	r23, r23
     ed8:	88 1f       	adc	r24, r24
     eda:	da f7       	brpl	.-10     	; 0xed2 <fmod+0x22>
     edc:	95 2f       	mov	r25, r21
     ede:	55 27       	eor	r21, r21
     ee0:	44 23       	and	r20, r20
     ee2:	32 f0       	brmi	.+12     	; 0xef0 <fmod+0x40>
     ee4:	91 50       	subi	r25, 0x01	; 1
     ee6:	50 40       	sbci	r21, 0x00	; 0
     ee8:	22 0f       	add	r18, r18
     eea:	33 1f       	adc	r19, r19
     eec:	44 1f       	adc	r20, r20
     eee:	d2 f7       	brpl	.-12     	; 0xee4 <fmod+0x34>
     ef0:	bb 27       	eor	r27, r27
     ef2:	e9 1b       	sub	r30, r25
     ef4:	f5 0b       	sbc	r31, r21
     ef6:	62 1b       	sub	r22, r18
     ef8:	73 0b       	sbc	r23, r19
     efa:	84 0b       	sbc	r24, r20
     efc:	b1 09       	sbc	r27, r1
     efe:	b1 f2       	breq	.-84     	; 0xeac <__floatsisf+0x88>
     f00:	22 f4       	brpl	.+8      	; 0xf0a <fmod+0x5a>
     f02:	62 0f       	add	r22, r18
     f04:	73 1f       	adc	r23, r19
     f06:	84 1f       	adc	r24, r20
     f08:	b1 1d       	adc	r27, r1
     f0a:	31 97       	sbiw	r30, 0x01	; 1
     f0c:	2a f0       	brmi	.+10     	; 0xf18 <fmod+0x68>
     f0e:	66 0f       	add	r22, r22
     f10:	77 1f       	adc	r23, r23
     f12:	88 1f       	adc	r24, r24
     f14:	bb 1f       	adc	r27, r27
     f16:	ef cf       	rjmp	.-34     	; 0xef6 <fmod+0x46>
     f18:	91 50       	subi	r25, 0x01	; 1
     f1a:	50 40       	sbci	r21, 0x00	; 0
     f1c:	62 f0       	brmi	.+24     	; 0xf36 <fmod+0x86>
     f1e:	41 f0       	breq	.+16     	; 0xf30 <fmod+0x80>
     f20:	88 23       	and	r24, r24
     f22:	32 f0       	brmi	.+12     	; 0xf30 <fmod+0x80>
     f24:	66 0f       	add	r22, r22
     f26:	77 1f       	adc	r23, r23
     f28:	88 1f       	adc	r24, r24
     f2a:	91 50       	subi	r25, 0x01	; 1
     f2c:	50 40       	sbci	r21, 0x00	; 0
     f2e:	c1 f7       	brne	.-16     	; 0xf20 <fmod+0x70>
     f30:	93 95       	inc	r25
     f32:	0c 94 cb 07 	jmp	0xf96	; 0xf96 <__fp_mpack>
     f36:	86 95       	lsr	r24
     f38:	77 95       	ror	r23
     f3a:	67 95       	ror	r22
     f3c:	9f 5f       	subi	r25, 0xFF	; 255
     f3e:	d9 f7       	brne	.-10     	; 0xf36 <fmod+0x86>
     f40:	f7 cf       	rjmp	.-18     	; 0xf30 <fmod+0x80>

00000f42 <__fp_cmp>:
     f42:	99 0f       	add	r25, r25
     f44:	00 08       	sbc	r0, r0
     f46:	55 0f       	add	r21, r21
     f48:	aa 0b       	sbc	r26, r26
     f4a:	e0 e8       	ldi	r30, 0x80	; 128
     f4c:	fe ef       	ldi	r31, 0xFE	; 254
     f4e:	16 16       	cp	r1, r22
     f50:	17 06       	cpc	r1, r23
     f52:	e8 07       	cpc	r30, r24
     f54:	f9 07       	cpc	r31, r25
     f56:	c0 f0       	brcs	.+48     	; 0xf88 <__fp_cmp+0x46>
     f58:	12 16       	cp	r1, r18
     f5a:	13 06       	cpc	r1, r19
     f5c:	e4 07       	cpc	r30, r20
     f5e:	f5 07       	cpc	r31, r21
     f60:	98 f0       	brcs	.+38     	; 0xf88 <__fp_cmp+0x46>
     f62:	62 1b       	sub	r22, r18
     f64:	73 0b       	sbc	r23, r19
     f66:	84 0b       	sbc	r24, r20
     f68:	95 0b       	sbc	r25, r21
     f6a:	39 f4       	brne	.+14     	; 0xf7a <__fp_cmp+0x38>
     f6c:	0a 26       	eor	r0, r26
     f6e:	61 f0       	breq	.+24     	; 0xf88 <__fp_cmp+0x46>
     f70:	23 2b       	or	r18, r19
     f72:	24 2b       	or	r18, r20
     f74:	25 2b       	or	r18, r21
     f76:	21 f4       	brne	.+8      	; 0xf80 <__fp_cmp+0x3e>
     f78:	08 95       	ret
     f7a:	0a 26       	eor	r0, r26
     f7c:	09 f4       	brne	.+2      	; 0xf80 <__fp_cmp+0x3e>
     f7e:	a1 40       	sbci	r26, 0x01	; 1
     f80:	a6 95       	lsr	r26
     f82:	8f ef       	ldi	r24, 0xFF	; 255
     f84:	81 1d       	adc	r24, r1
     f86:	81 1d       	adc	r24, r1
     f88:	08 95       	ret

00000f8a <__fp_inf>:
     f8a:	97 f9       	bld	r25, 7
     f8c:	9f 67       	ori	r25, 0x7F	; 127
     f8e:	80 e8       	ldi	r24, 0x80	; 128
     f90:	70 e0       	ldi	r23, 0x00	; 0
     f92:	60 e0       	ldi	r22, 0x00	; 0
     f94:	08 95       	ret

00000f96 <__fp_mpack>:
     f96:	9f 3f       	cpi	r25, 0xFF	; 255
     f98:	31 f0       	breq	.+12     	; 0xfa6 <__fp_mpack_finite+0xc>

00000f9a <__fp_mpack_finite>:
     f9a:	91 50       	subi	r25, 0x01	; 1
     f9c:	20 f4       	brcc	.+8      	; 0xfa6 <__fp_mpack_finite+0xc>
     f9e:	87 95       	ror	r24
     fa0:	77 95       	ror	r23
     fa2:	67 95       	ror	r22
     fa4:	b7 95       	ror	r27
     fa6:	88 0f       	add	r24, r24
     fa8:	91 1d       	adc	r25, r1
     faa:	96 95       	lsr	r25
     fac:	87 95       	ror	r24
     fae:	97 f9       	bld	r25, 7
     fb0:	08 95       	ret

00000fb2 <__fp_nan>:
     fb2:	9f ef       	ldi	r25, 0xFF	; 255
     fb4:	80 ec       	ldi	r24, 0xC0	; 192
     fb6:	08 95       	ret

00000fb8 <__fp_pscA>:
     fb8:	00 24       	eor	r0, r0
     fba:	0a 94       	dec	r0
     fbc:	16 16       	cp	r1, r22
     fbe:	17 06       	cpc	r1, r23
     fc0:	18 06       	cpc	r1, r24
     fc2:	09 06       	cpc	r0, r25
     fc4:	08 95       	ret

00000fc6 <__fp_pscB>:
     fc6:	00 24       	eor	r0, r0
     fc8:	0a 94       	dec	r0
     fca:	12 16       	cp	r1, r18
     fcc:	13 06       	cpc	r1, r19
     fce:	14 06       	cpc	r1, r20
     fd0:	05 06       	cpc	r0, r21
     fd2:	08 95       	ret

00000fd4 <__fp_round>:
     fd4:	09 2e       	mov	r0, r25
     fd6:	03 94       	inc	r0
     fd8:	00 0c       	add	r0, r0
     fda:	11 f4       	brne	.+4      	; 0xfe0 <__fp_round+0xc>
     fdc:	88 23       	and	r24, r24
     fde:	52 f0       	brmi	.+20     	; 0xff4 <__fp_round+0x20>
     fe0:	bb 0f       	add	r27, r27
     fe2:	40 f4       	brcc	.+16     	; 0xff4 <__fp_round+0x20>
     fe4:	bf 2b       	or	r27, r31
     fe6:	11 f4       	brne	.+4      	; 0xfec <__fp_round+0x18>
     fe8:	60 ff       	sbrs	r22, 0
     fea:	04 c0       	rjmp	.+8      	; 0xff4 <__fp_round+0x20>
     fec:	6f 5f       	subi	r22, 0xFF	; 255
     fee:	7f 4f       	sbci	r23, 0xFF	; 255
     ff0:	8f 4f       	sbci	r24, 0xFF	; 255
     ff2:	9f 4f       	sbci	r25, 0xFF	; 255
     ff4:	08 95       	ret

00000ff6 <__fp_split3>:
     ff6:	57 fd       	sbrc	r21, 7
     ff8:	90 58       	subi	r25, 0x80	; 128
     ffa:	44 0f       	add	r20, r20
     ffc:	55 1f       	adc	r21, r21
     ffe:	59 f0       	breq	.+22     	; 0x1016 <__fp_splitA+0x10>
    1000:	5f 3f       	cpi	r21, 0xFF	; 255
    1002:	71 f0       	breq	.+28     	; 0x1020 <__fp_splitA+0x1a>
    1004:	47 95       	ror	r20

00001006 <__fp_splitA>:
    1006:	88 0f       	add	r24, r24
    1008:	97 fb       	bst	r25, 7
    100a:	99 1f       	adc	r25, r25
    100c:	61 f0       	breq	.+24     	; 0x1026 <__fp_splitA+0x20>
    100e:	9f 3f       	cpi	r25, 0xFF	; 255
    1010:	79 f0       	breq	.+30     	; 0x1030 <__fp_splitA+0x2a>
    1012:	87 95       	ror	r24
    1014:	08 95       	ret
    1016:	12 16       	cp	r1, r18
    1018:	13 06       	cpc	r1, r19
    101a:	14 06       	cpc	r1, r20
    101c:	55 1f       	adc	r21, r21
    101e:	f2 cf       	rjmp	.-28     	; 0x1004 <__fp_split3+0xe>
    1020:	46 95       	lsr	r20
    1022:	f1 df       	rcall	.-30     	; 0x1006 <__fp_splitA>
    1024:	08 c0       	rjmp	.+16     	; 0x1036 <__fp_splitA+0x30>
    1026:	16 16       	cp	r1, r22
    1028:	17 06       	cpc	r1, r23
    102a:	18 06       	cpc	r1, r24
    102c:	99 1f       	adc	r25, r25
    102e:	f1 cf       	rjmp	.-30     	; 0x1012 <__fp_splitA+0xc>
    1030:	86 95       	lsr	r24
    1032:	71 05       	cpc	r23, r1
    1034:	61 05       	cpc	r22, r1
    1036:	08 94       	sec
    1038:	08 95       	ret

0000103a <__fp_zero>:
    103a:	e8 94       	clt

0000103c <__fp_szero>:
    103c:	bb 27       	eor	r27, r27
    103e:	66 27       	eor	r22, r22
    1040:	77 27       	eor	r23, r23
    1042:	cb 01       	movw	r24, r22
    1044:	97 f9       	bld	r25, 7
    1046:	08 95       	ret

00001048 <__gesf2>:
    1048:	0e 94 a1 07 	call	0xf42	; 0xf42 <__fp_cmp>
    104c:	08 f4       	brcc	.+2      	; 0x1050 <__gesf2+0x8>
    104e:	8f ef       	ldi	r24, 0xFF	; 255
    1050:	08 95       	ret

00001052 <__mulsf3>:
    1052:	0e 94 3c 08 	call	0x1078	; 0x1078 <__mulsf3x>
    1056:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__fp_round>
    105a:	0e 94 dc 07 	call	0xfb8	; 0xfb8 <__fp_pscA>
    105e:	38 f0       	brcs	.+14     	; 0x106e <__mulsf3+0x1c>
    1060:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__fp_pscB>
    1064:	20 f0       	brcs	.+8      	; 0x106e <__mulsf3+0x1c>
    1066:	95 23       	and	r25, r21
    1068:	11 f0       	breq	.+4      	; 0x106e <__mulsf3+0x1c>
    106a:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_inf>
    106e:	0c 94 d9 07 	jmp	0xfb2	; 0xfb2 <__fp_nan>
    1072:	11 24       	eor	r1, r1
    1074:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__fp_szero>

00001078 <__mulsf3x>:
    1078:	0e 94 fb 07 	call	0xff6	; 0xff6 <__fp_split3>
    107c:	70 f3       	brcs	.-36     	; 0x105a <__mulsf3+0x8>

0000107e <__mulsf3_pse>:
    107e:	95 9f       	mul	r25, r21
    1080:	c1 f3       	breq	.-16     	; 0x1072 <__mulsf3+0x20>
    1082:	95 0f       	add	r25, r21
    1084:	50 e0       	ldi	r21, 0x00	; 0
    1086:	55 1f       	adc	r21, r21
    1088:	62 9f       	mul	r22, r18
    108a:	f0 01       	movw	r30, r0
    108c:	72 9f       	mul	r23, r18
    108e:	bb 27       	eor	r27, r27
    1090:	f0 0d       	add	r31, r0
    1092:	b1 1d       	adc	r27, r1
    1094:	63 9f       	mul	r22, r19
    1096:	aa 27       	eor	r26, r26
    1098:	f0 0d       	add	r31, r0
    109a:	b1 1d       	adc	r27, r1
    109c:	aa 1f       	adc	r26, r26
    109e:	64 9f       	mul	r22, r20
    10a0:	66 27       	eor	r22, r22
    10a2:	b0 0d       	add	r27, r0
    10a4:	a1 1d       	adc	r26, r1
    10a6:	66 1f       	adc	r22, r22
    10a8:	82 9f       	mul	r24, r18
    10aa:	22 27       	eor	r18, r18
    10ac:	b0 0d       	add	r27, r0
    10ae:	a1 1d       	adc	r26, r1
    10b0:	62 1f       	adc	r22, r18
    10b2:	73 9f       	mul	r23, r19
    10b4:	b0 0d       	add	r27, r0
    10b6:	a1 1d       	adc	r26, r1
    10b8:	62 1f       	adc	r22, r18
    10ba:	83 9f       	mul	r24, r19
    10bc:	a0 0d       	add	r26, r0
    10be:	61 1d       	adc	r22, r1
    10c0:	22 1f       	adc	r18, r18
    10c2:	74 9f       	mul	r23, r20
    10c4:	33 27       	eor	r19, r19
    10c6:	a0 0d       	add	r26, r0
    10c8:	61 1d       	adc	r22, r1
    10ca:	23 1f       	adc	r18, r19
    10cc:	84 9f       	mul	r24, r20
    10ce:	60 0d       	add	r22, r0
    10d0:	21 1d       	adc	r18, r1
    10d2:	82 2f       	mov	r24, r18
    10d4:	76 2f       	mov	r23, r22
    10d6:	6a 2f       	mov	r22, r26
    10d8:	11 24       	eor	r1, r1
    10da:	9f 57       	subi	r25, 0x7F	; 127
    10dc:	50 40       	sbci	r21, 0x00	; 0
    10de:	9a f0       	brmi	.+38     	; 0x1106 <__mulsf3_pse+0x88>
    10e0:	f1 f0       	breq	.+60     	; 0x111e <__mulsf3_pse+0xa0>
    10e2:	88 23       	and	r24, r24
    10e4:	4a f0       	brmi	.+18     	; 0x10f8 <__mulsf3_pse+0x7a>
    10e6:	ee 0f       	add	r30, r30
    10e8:	ff 1f       	adc	r31, r31
    10ea:	bb 1f       	adc	r27, r27
    10ec:	66 1f       	adc	r22, r22
    10ee:	77 1f       	adc	r23, r23
    10f0:	88 1f       	adc	r24, r24
    10f2:	91 50       	subi	r25, 0x01	; 1
    10f4:	50 40       	sbci	r21, 0x00	; 0
    10f6:	a9 f7       	brne	.-22     	; 0x10e2 <__mulsf3_pse+0x64>
    10f8:	9e 3f       	cpi	r25, 0xFE	; 254
    10fa:	51 05       	cpc	r21, r1
    10fc:	80 f0       	brcs	.+32     	; 0x111e <__mulsf3_pse+0xa0>
    10fe:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_inf>
    1102:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__fp_szero>
    1106:	5f 3f       	cpi	r21, 0xFF	; 255
    1108:	e4 f3       	brlt	.-8      	; 0x1102 <__mulsf3_pse+0x84>
    110a:	98 3e       	cpi	r25, 0xE8	; 232
    110c:	d4 f3       	brlt	.-12     	; 0x1102 <__mulsf3_pse+0x84>
    110e:	86 95       	lsr	r24
    1110:	77 95       	ror	r23
    1112:	67 95       	ror	r22
    1114:	b7 95       	ror	r27
    1116:	f7 95       	ror	r31
    1118:	e7 95       	ror	r30
    111a:	9f 5f       	subi	r25, 0xFF	; 255
    111c:	c1 f7       	brne	.-16     	; 0x110e <__mulsf3_pse+0x90>
    111e:	fe 2b       	or	r31, r30
    1120:	88 0f       	add	r24, r24
    1122:	91 1d       	adc	r25, r1
    1124:	96 95       	lsr	r25
    1126:	87 95       	ror	r24
    1128:	97 f9       	bld	r25, 7
    112a:	08 95       	ret

0000112c <pow>:
    112c:	fa 01       	movw	r30, r20
    112e:	ee 0f       	add	r30, r30
    1130:	ff 1f       	adc	r31, r31
    1132:	30 96       	adiw	r30, 0x00	; 0
    1134:	21 05       	cpc	r18, r1
    1136:	31 05       	cpc	r19, r1
    1138:	a1 f1       	breq	.+104    	; 0x11a2 <pow+0x76>
    113a:	61 15       	cp	r22, r1
    113c:	71 05       	cpc	r23, r1
    113e:	61 f4       	brne	.+24     	; 0x1158 <pow+0x2c>
    1140:	80 38       	cpi	r24, 0x80	; 128
    1142:	bf e3       	ldi	r27, 0x3F	; 63
    1144:	9b 07       	cpc	r25, r27
    1146:	49 f1       	breq	.+82     	; 0x119a <pow+0x6e>
    1148:	68 94       	set
    114a:	90 38       	cpi	r25, 0x80	; 128
    114c:	81 05       	cpc	r24, r1
    114e:	61 f0       	breq	.+24     	; 0x1168 <pow+0x3c>
    1150:	80 38       	cpi	r24, 0x80	; 128
    1152:	bf ef       	ldi	r27, 0xFF	; 255
    1154:	9b 07       	cpc	r25, r27
    1156:	41 f0       	breq	.+16     	; 0x1168 <pow+0x3c>
    1158:	99 23       	and	r25, r25
    115a:	4a f5       	brpl	.+82     	; 0x11ae <pow+0x82>
    115c:	ff 3f       	cpi	r31, 0xFF	; 255
    115e:	e1 05       	cpc	r30, r1
    1160:	31 05       	cpc	r19, r1
    1162:	21 05       	cpc	r18, r1
    1164:	19 f1       	breq	.+70     	; 0x11ac <pow+0x80>
    1166:	e8 94       	clt
    1168:	08 94       	sec
    116a:	e7 95       	ror	r30
    116c:	d9 01       	movw	r26, r18
    116e:	aa 23       	and	r26, r26
    1170:	29 f4       	brne	.+10     	; 0x117c <pow+0x50>
    1172:	ab 2f       	mov	r26, r27
    1174:	be 2f       	mov	r27, r30
    1176:	f8 5f       	subi	r31, 0xF8	; 248
    1178:	d0 f3       	brcs	.-12     	; 0x116e <pow+0x42>
    117a:	10 c0       	rjmp	.+32     	; 0x119c <pow+0x70>
    117c:	ff 5f       	subi	r31, 0xFF	; 255
    117e:	70 f4       	brcc	.+28     	; 0x119c <pow+0x70>
    1180:	a6 95       	lsr	r26
    1182:	e0 f7       	brcc	.-8      	; 0x117c <pow+0x50>
    1184:	f7 39       	cpi	r31, 0x97	; 151
    1186:	50 f0       	brcs	.+20     	; 0x119c <pow+0x70>
    1188:	19 f0       	breq	.+6      	; 0x1190 <pow+0x64>
    118a:	ff 3a       	cpi	r31, 0xAF	; 175
    118c:	38 f4       	brcc	.+14     	; 0x119c <pow+0x70>
    118e:	9f 77       	andi	r25, 0x7F	; 127
    1190:	9f 93       	push	r25
    1192:	0d d0       	rcall	.+26     	; 0x11ae <pow+0x82>
    1194:	0f 90       	pop	r0
    1196:	07 fc       	sbrc	r0, 7
    1198:	90 58       	subi	r25, 0x80	; 128
    119a:	08 95       	ret
    119c:	46 f0       	brts	.+16     	; 0x11ae <pow+0x82>
    119e:	0c 94 d9 07 	jmp	0xfb2	; 0xfb2 <__fp_nan>
    11a2:	60 e0       	ldi	r22, 0x00	; 0
    11a4:	70 e0       	ldi	r23, 0x00	; 0
    11a6:	80 e8       	ldi	r24, 0x80	; 128
    11a8:	9f e3       	ldi	r25, 0x3F	; 63
    11aa:	08 95       	ret
    11ac:	4f e7       	ldi	r20, 0x7F	; 127
    11ae:	9f 77       	andi	r25, 0x7F	; 127
    11b0:	5f 93       	push	r21
    11b2:	4f 93       	push	r20
    11b4:	3f 93       	push	r19
    11b6:	2f 93       	push	r18
    11b8:	0e 94 91 09 	call	0x1322	; 0x1322 <log>
    11bc:	2f 91       	pop	r18
    11be:	3f 91       	pop	r19
    11c0:	4f 91       	pop	r20
    11c2:	5f 91       	pop	r21
    11c4:	0e 94 29 08 	call	0x1052	; 0x1052 <__mulsf3>
    11c8:	0c 94 ee 08 	jmp	0x11dc	; 0x11dc <exp>
    11cc:	29 f4       	brne	.+10     	; 0x11d8 <pow+0xac>
    11ce:	16 f0       	brts	.+4      	; 0x11d4 <pow+0xa8>
    11d0:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_inf>
    11d4:	0c 94 1d 08 	jmp	0x103a	; 0x103a <__fp_zero>
    11d8:	0c 94 d9 07 	jmp	0xfb2	; 0xfb2 <__fp_nan>

000011dc <exp>:
    11dc:	0e 94 03 08 	call	0x1006	; 0x1006 <__fp_splitA>
    11e0:	a8 f3       	brcs	.-22     	; 0x11cc <pow+0xa0>
    11e2:	96 38       	cpi	r25, 0x86	; 134
    11e4:	a0 f7       	brcc	.-24     	; 0x11ce <pow+0xa2>
    11e6:	07 f8       	bld	r0, 7
    11e8:	0f 92       	push	r0
    11ea:	e8 94       	clt
    11ec:	2b e3       	ldi	r18, 0x3B	; 59
    11ee:	3a ea       	ldi	r19, 0xAA	; 170
    11f0:	48 eb       	ldi	r20, 0xB8	; 184
    11f2:	5f e7       	ldi	r21, 0x7F	; 127
    11f4:	0e 94 3f 08 	call	0x107e	; 0x107e <__mulsf3_pse>
    11f8:	0f 92       	push	r0
    11fa:	0f 92       	push	r0
    11fc:	0f 92       	push	r0
    11fe:	4d b7       	in	r20, 0x3d	; 61
    1200:	5e b7       	in	r21, 0x3e	; 62
    1202:	0f 92       	push	r0
    1204:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <modf>
    1208:	e8 e6       	ldi	r30, 0x68	; 104
    120a:	f0 e0       	ldi	r31, 0x00	; 0
    120c:	0e 94 20 09 	call	0x1240	; 0x1240 <__fp_powser>
    1210:	4f 91       	pop	r20
    1212:	5f 91       	pop	r21
    1214:	ef 91       	pop	r30
    1216:	ff 91       	pop	r31
    1218:	e5 95       	asr	r30
    121a:	ee 1f       	adc	r30, r30
    121c:	ff 1f       	adc	r31, r31
    121e:	49 f0       	breq	.+18     	; 0x1232 <exp+0x56>
    1220:	fe 57       	subi	r31, 0x7E	; 126
    1222:	e0 68       	ori	r30, 0x80	; 128
    1224:	44 27       	eor	r20, r20
    1226:	ee 0f       	add	r30, r30
    1228:	44 1f       	adc	r20, r20
    122a:	fa 95       	dec	r31
    122c:	e1 f7       	brne	.-8      	; 0x1226 <exp+0x4a>
    122e:	41 95       	neg	r20
    1230:	55 0b       	sbc	r21, r21
    1232:	0e 94 53 09 	call	0x12a6	; 0x12a6 <ldexp>
    1236:	0f 90       	pop	r0
    1238:	07 fe       	sbrs	r0, 7
    123a:	0c 94 47 09 	jmp	0x128e	; 0x128e <inverse>
    123e:	08 95       	ret

00001240 <__fp_powser>:
    1240:	df 93       	push	r29
    1242:	cf 93       	push	r28
    1244:	1f 93       	push	r17
    1246:	0f 93       	push	r16
    1248:	ff 92       	push	r15
    124a:	ef 92       	push	r14
    124c:	df 92       	push	r13
    124e:	7b 01       	movw	r14, r22
    1250:	8c 01       	movw	r16, r24
    1252:	68 94       	set
    1254:	06 c0       	rjmp	.+12     	; 0x1262 <__fp_powser+0x22>
    1256:	da 2e       	mov	r13, r26
    1258:	ef 01       	movw	r28, r30
    125a:	0e 94 3c 08 	call	0x1078	; 0x1078 <__mulsf3x>
    125e:	fe 01       	movw	r30, r28
    1260:	e8 94       	clt
    1262:	a5 91       	lpm	r26, Z+
    1264:	25 91       	lpm	r18, Z+
    1266:	35 91       	lpm	r19, Z+
    1268:	45 91       	lpm	r20, Z+
    126a:	55 91       	lpm	r21, Z+
    126c:	a6 f3       	brts	.-24     	; 0x1256 <__fp_powser+0x16>
    126e:	ef 01       	movw	r28, r30
    1270:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__addsf3x>
    1274:	fe 01       	movw	r30, r28
    1276:	97 01       	movw	r18, r14
    1278:	a8 01       	movw	r20, r16
    127a:	da 94       	dec	r13
    127c:	69 f7       	brne	.-38     	; 0x1258 <__fp_powser+0x18>
    127e:	df 90       	pop	r13
    1280:	ef 90       	pop	r14
    1282:	ff 90       	pop	r15
    1284:	0f 91       	pop	r16
    1286:	1f 91       	pop	r17
    1288:	cf 91       	pop	r28
    128a:	df 91       	pop	r29
    128c:	08 95       	ret

0000128e <inverse>:
    128e:	9b 01       	movw	r18, r22
    1290:	ac 01       	movw	r20, r24
    1292:	60 e0       	ldi	r22, 0x00	; 0
    1294:	70 e0       	ldi	r23, 0x00	; 0
    1296:	80 e8       	ldi	r24, 0x80	; 128
    1298:	9f e3       	ldi	r25, 0x3F	; 63
    129a:	0c 94 68 06 	jmp	0xcd0	; 0xcd0 <__divsf3>
    129e:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_inf>
    12a2:	0c 94 cb 07 	jmp	0xf96	; 0xf96 <__fp_mpack>

000012a6 <ldexp>:
    12a6:	0e 94 03 08 	call	0x1006	; 0x1006 <__fp_splitA>
    12aa:	d8 f3       	brcs	.-10     	; 0x12a2 <inverse+0x14>
    12ac:	99 23       	and	r25, r25
    12ae:	c9 f3       	breq	.-14     	; 0x12a2 <inverse+0x14>
    12b0:	94 0f       	add	r25, r20
    12b2:	51 1d       	adc	r21, r1
    12b4:	a3 f3       	brvs	.-24     	; 0x129e <inverse+0x10>
    12b6:	91 50       	subi	r25, 0x01	; 1
    12b8:	50 40       	sbci	r21, 0x00	; 0
    12ba:	94 f0       	brlt	.+36     	; 0x12e0 <ldexp+0x3a>
    12bc:	59 f0       	breq	.+22     	; 0x12d4 <ldexp+0x2e>
    12be:	88 23       	and	r24, r24
    12c0:	32 f0       	brmi	.+12     	; 0x12ce <ldexp+0x28>
    12c2:	66 0f       	add	r22, r22
    12c4:	77 1f       	adc	r23, r23
    12c6:	88 1f       	adc	r24, r24
    12c8:	91 50       	subi	r25, 0x01	; 1
    12ca:	50 40       	sbci	r21, 0x00	; 0
    12cc:	c1 f7       	brne	.-16     	; 0x12be <ldexp+0x18>
    12ce:	9e 3f       	cpi	r25, 0xFE	; 254
    12d0:	51 05       	cpc	r21, r1
    12d2:	2c f7       	brge	.-54     	; 0x129e <inverse+0x10>
    12d4:	88 0f       	add	r24, r24
    12d6:	91 1d       	adc	r25, r1
    12d8:	96 95       	lsr	r25
    12da:	87 95       	ror	r24
    12dc:	97 f9       	bld	r25, 7
    12de:	08 95       	ret
    12e0:	5f 3f       	cpi	r21, 0xFF	; 255
    12e2:	ac f0       	brlt	.+42     	; 0x130e <ldexp+0x68>
    12e4:	98 3e       	cpi	r25, 0xE8	; 232
    12e6:	9c f0       	brlt	.+38     	; 0x130e <ldexp+0x68>
    12e8:	bb 27       	eor	r27, r27
    12ea:	86 95       	lsr	r24
    12ec:	77 95       	ror	r23
    12ee:	67 95       	ror	r22
    12f0:	b7 95       	ror	r27
    12f2:	08 f4       	brcc	.+2      	; 0x12f6 <ldexp+0x50>
    12f4:	b1 60       	ori	r27, 0x01	; 1
    12f6:	93 95       	inc	r25
    12f8:	c1 f7       	brne	.-16     	; 0x12ea <ldexp+0x44>
    12fa:	bb 0f       	add	r27, r27
    12fc:	58 f7       	brcc	.-42     	; 0x12d4 <ldexp+0x2e>
    12fe:	11 f4       	brne	.+4      	; 0x1304 <ldexp+0x5e>
    1300:	60 ff       	sbrs	r22, 0
    1302:	e8 cf       	rjmp	.-48     	; 0x12d4 <ldexp+0x2e>
    1304:	6f 5f       	subi	r22, 0xFF	; 255
    1306:	7f 4f       	sbci	r23, 0xFF	; 255
    1308:	8f 4f       	sbci	r24, 0xFF	; 255
    130a:	9f 4f       	sbci	r25, 0xFF	; 255
    130c:	e3 cf       	rjmp	.-58     	; 0x12d4 <ldexp+0x2e>
    130e:	0c 94 1e 08 	jmp	0x103c	; 0x103c <__fp_szero>
    1312:	16 f0       	brts	.+4      	; 0x1318 <ldexp+0x72>
    1314:	0c 94 cb 07 	jmp	0xf96	; 0xf96 <__fp_mpack>
    1318:	0c 94 d9 07 	jmp	0xfb2	; 0xfb2 <__fp_nan>
    131c:	68 94       	set
    131e:	0c 94 c5 07 	jmp	0xf8a	; 0xf8a <__fp_inf>

00001322 <log>:
    1322:	0e 94 03 08 	call	0x1006	; 0x1006 <__fp_splitA>
    1326:	a8 f3       	brcs	.-22     	; 0x1312 <ldexp+0x6c>
    1328:	99 23       	and	r25, r25
    132a:	c1 f3       	breq	.-16     	; 0x131c <ldexp+0x76>
    132c:	ae f3       	brts	.-22     	; 0x1318 <ldexp+0x72>
    132e:	df 93       	push	r29
    1330:	cf 93       	push	r28
    1332:	1f 93       	push	r17
    1334:	0f 93       	push	r16
    1336:	ff 92       	push	r15
    1338:	c9 2f       	mov	r28, r25
    133a:	dd 27       	eor	r29, r29
    133c:	88 23       	and	r24, r24
    133e:	2a f0       	brmi	.+10     	; 0x134a <log+0x28>
    1340:	21 97       	sbiw	r28, 0x01	; 1
    1342:	66 0f       	add	r22, r22
    1344:	77 1f       	adc	r23, r23
    1346:	88 1f       	adc	r24, r24
    1348:	da f7       	brpl	.-10     	; 0x1340 <log+0x1e>
    134a:	20 e0       	ldi	r18, 0x00	; 0
    134c:	30 e0       	ldi	r19, 0x00	; 0
    134e:	40 e8       	ldi	r20, 0x80	; 128
    1350:	5f eb       	ldi	r21, 0xBF	; 191
    1352:	9f e3       	ldi	r25, 0x3F	; 63
    1354:	88 39       	cpi	r24, 0x98	; 152
    1356:	20 f0       	brcs	.+8      	; 0x1360 <log+0x3e>
    1358:	80 3e       	cpi	r24, 0xE0	; 224
    135a:	38 f0       	brcs	.+14     	; 0x136a <log+0x48>
    135c:	21 96       	adiw	r28, 0x01	; 1
    135e:	8f 77       	andi	r24, 0x7F	; 127
    1360:	0e 94 f7 05 	call	0xbee	; 0xbee <__addsf3>
    1364:	e0 e9       	ldi	r30, 0x90	; 144
    1366:	f0 e0       	ldi	r31, 0x00	; 0
    1368:	04 c0       	rjmp	.+8      	; 0x1372 <log+0x50>
    136a:	0e 94 f7 05 	call	0xbee	; 0xbee <__addsf3>
    136e:	ed eb       	ldi	r30, 0xBD	; 189
    1370:	f0 e0       	ldi	r31, 0x00	; 0
    1372:	0e 94 20 09 	call	0x1240	; 0x1240 <__fp_powser>
    1376:	8b 01       	movw	r16, r22
    1378:	be 01       	movw	r22, r28
    137a:	ec 01       	movw	r28, r24
    137c:	fb 2e       	mov	r15, r27
    137e:	6f 57       	subi	r22, 0x7F	; 127
    1380:	71 09       	sbc	r23, r1
    1382:	75 95       	asr	r23
    1384:	77 1f       	adc	r23, r23
    1386:	88 0b       	sbc	r24, r24
    1388:	99 0b       	sbc	r25, r25
    138a:	0e 94 12 07 	call	0xe24	; 0xe24 <__floatsisf>
    138e:	28 e1       	ldi	r18, 0x18	; 24
    1390:	32 e7       	ldi	r19, 0x72	; 114
    1392:	41 e3       	ldi	r20, 0x31	; 49
    1394:	5f e3       	ldi	r21, 0x3F	; 63
    1396:	0e 94 3c 08 	call	0x1078	; 0x1078 <__mulsf3x>
    139a:	af 2d       	mov	r26, r15
    139c:	98 01       	movw	r18, r16
    139e:	ae 01       	movw	r20, r28
    13a0:	ff 90       	pop	r15
    13a2:	0f 91       	pop	r16
    13a4:	1f 91       	pop	r17
    13a6:	cf 91       	pop	r28
    13a8:	df 91       	pop	r29
    13aa:	0e 94 0e 06 	call	0xc1c	; 0xc1c <__addsf3x>
    13ae:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__fp_round>

000013b2 <modf>:
    13b2:	fa 01       	movw	r30, r20
    13b4:	dc 01       	movw	r26, r24
    13b6:	aa 0f       	add	r26, r26
    13b8:	bb 1f       	adc	r27, r27
    13ba:	9b 01       	movw	r18, r22
    13bc:	ac 01       	movw	r20, r24
    13be:	bf 57       	subi	r27, 0x7F	; 127
    13c0:	28 f4       	brcc	.+10     	; 0x13cc <modf+0x1a>
    13c2:	22 27       	eor	r18, r18
    13c4:	33 27       	eor	r19, r19
    13c6:	44 27       	eor	r20, r20
    13c8:	50 78       	andi	r21, 0x80	; 128
    13ca:	20 c0       	rjmp	.+64     	; 0x140c <modf+0x5a>
    13cc:	b7 51       	subi	r27, 0x17	; 23
    13ce:	90 f4       	brcc	.+36     	; 0x13f4 <modf+0x42>
    13d0:	ab 2f       	mov	r26, r27
    13d2:	00 24       	eor	r0, r0
    13d4:	46 95       	lsr	r20
    13d6:	37 95       	ror	r19
    13d8:	27 95       	ror	r18
    13da:	01 1c       	adc	r0, r1
    13dc:	a3 95       	inc	r26
    13de:	d2 f3       	brmi	.-12     	; 0x13d4 <modf+0x22>
    13e0:	00 20       	and	r0, r0
    13e2:	71 f0       	breq	.+28     	; 0x1400 <modf+0x4e>
    13e4:	22 0f       	add	r18, r18
    13e6:	33 1f       	adc	r19, r19
    13e8:	44 1f       	adc	r20, r20
    13ea:	b3 95       	inc	r27
    13ec:	da f3       	brmi	.-10     	; 0x13e4 <modf+0x32>
    13ee:	0e d0       	rcall	.+28     	; 0x140c <modf+0x5a>
    13f0:	0c 94 f6 05 	jmp	0xbec	; 0xbec <__subsf3>
    13f4:	61 30       	cpi	r22, 0x01	; 1
    13f6:	71 05       	cpc	r23, r1
    13f8:	a0 e8       	ldi	r26, 0x80	; 128
    13fa:	8a 07       	cpc	r24, r26
    13fc:	b9 46       	sbci	r27, 0x69	; 105
    13fe:	30 f4       	brcc	.+12     	; 0x140c <modf+0x5a>
    1400:	9b 01       	movw	r18, r22
    1402:	ac 01       	movw	r20, r24
    1404:	66 27       	eor	r22, r22
    1406:	77 27       	eor	r23, r23
    1408:	88 27       	eor	r24, r24
    140a:	90 78       	andi	r25, 0x80	; 128
    140c:	30 96       	adiw	r30, 0x00	; 0
    140e:	21 f0       	breq	.+8      	; 0x1418 <modf+0x66>
    1410:	20 83       	st	Z, r18
    1412:	31 83       	std	Z+1, r19	; 0x01
    1414:	42 83       	std	Z+2, r20	; 0x02
    1416:	53 83       	std	Z+3, r21	; 0x03
    1418:	08 95       	ret

0000141a <__muluhisi3>:
    141a:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <__umulhisi3>
    141e:	a5 9f       	mul	r26, r21
    1420:	90 0d       	add	r25, r0
    1422:	b4 9f       	mul	r27, r20
    1424:	90 0d       	add	r25, r0
    1426:	a4 9f       	mul	r26, r20
    1428:	80 0d       	add	r24, r0
    142a:	91 1d       	adc	r25, r1
    142c:	11 24       	eor	r1, r1
    142e:	08 95       	ret

00001430 <__moddi3>:
    1430:	68 94       	set
    1432:	01 c0       	rjmp	.+2      	; 0x1436 <__divdi3_moddi3>

00001434 <__divdi3>:
    1434:	e8 94       	clt

00001436 <__divdi3_moddi3>:
    1436:	f9 2f       	mov	r31, r25
    1438:	f1 2b       	or	r31, r17
    143a:	12 f0       	brmi	.+4      	; 0x1440 <__divdi3_moddi3+0xa>
    143c:	0c 94 4c 0a 	jmp	0x1498	; 0x1498 <__udivdi3_umoddi3>
    1440:	a0 e0       	ldi	r26, 0x00	; 0
    1442:	b0 e0       	ldi	r27, 0x00	; 0
    1444:	e6 e2       	ldi	r30, 0x26	; 38
    1446:	fa e0       	ldi	r31, 0x0A	; 10
    1448:	0c 94 be 0a 	jmp	0x157c	; 0x157c <__prologue_saves__+0xc>
    144c:	09 2e       	mov	r0, r25
    144e:	05 94       	asr	r0
    1450:	22 f4       	brpl	.+8      	; 0x145a <__divdi3_moddi3+0x24>
    1452:	0e 94 a8 0a 	call	0x1550	; 0x1550 <__negdi2>
    1456:	11 23       	and	r17, r17
    1458:	92 f4       	brpl	.+36     	; 0x147e <__divdi3_moddi3+0x48>
    145a:	f0 e8       	ldi	r31, 0x80	; 128
    145c:	0f 26       	eor	r0, r31
    145e:	ff ef       	ldi	r31, 0xFF	; 255
    1460:	e0 94       	com	r14
    1462:	f0 94       	com	r15
    1464:	00 95       	com	r16
    1466:	10 95       	com	r17
    1468:	b0 94       	com	r11
    146a:	c0 94       	com	r12
    146c:	d0 94       	com	r13
    146e:	a1 94       	neg	r10
    1470:	bf 0a       	sbc	r11, r31
    1472:	cf 0a       	sbc	r12, r31
    1474:	df 0a       	sbc	r13, r31
    1476:	ef 0a       	sbc	r14, r31
    1478:	ff 0a       	sbc	r15, r31
    147a:	0f 0b       	sbc	r16, r31
    147c:	1f 0b       	sbc	r17, r31
    147e:	0e 94 57 0a 	call	0x14ae	; 0x14ae <__udivmod64>
    1482:	07 fc       	sbrc	r0, 7
    1484:	0e 94 a8 0a 	call	0x1550	; 0x1550 <__negdi2>
    1488:	cd b7       	in	r28, 0x3d	; 61
    148a:	de b7       	in	r29, 0x3e	; 62
    148c:	ec e0       	ldi	r30, 0x0C	; 12
    148e:	0c 94 da 0a 	jmp	0x15b4	; 0x15b4 <__epilogue_restores__+0xc>

00001492 <__umoddi3>:
    1492:	68 94       	set
    1494:	01 c0       	rjmp	.+2      	; 0x1498 <__udivdi3_umoddi3>

00001496 <__udivdi3>:
    1496:	e8 94       	clt

00001498 <__udivdi3_umoddi3>:
    1498:	8f 92       	push	r8
    149a:	9f 92       	push	r9
    149c:	cf 93       	push	r28
    149e:	df 93       	push	r29
    14a0:	0e 94 57 0a 	call	0x14ae	; 0x14ae <__udivmod64>
    14a4:	df 91       	pop	r29
    14a6:	cf 91       	pop	r28
    14a8:	9f 90       	pop	r9
    14aa:	8f 90       	pop	r8
    14ac:	08 95       	ret

000014ae <__udivmod64>:
    14ae:	88 24       	eor	r8, r8
    14b0:	99 24       	eor	r9, r9
    14b2:	f4 01       	movw	r30, r8
    14b4:	e4 01       	movw	r28, r8
    14b6:	b0 e4       	ldi	r27, 0x40	; 64
    14b8:	9f 93       	push	r25
    14ba:	aa 27       	eor	r26, r26
    14bc:	9a 15       	cp	r25, r10
    14be:	8b 04       	cpc	r8, r11
    14c0:	9c 04       	cpc	r9, r12
    14c2:	ed 05       	cpc	r30, r13
    14c4:	fe 05       	cpc	r31, r14
    14c6:	cf 05       	cpc	r28, r15
    14c8:	d0 07       	cpc	r29, r16
    14ca:	a1 07       	cpc	r26, r17
    14cc:	98 f4       	brcc	.+38     	; 0x14f4 <__udivmod64+0x46>
    14ce:	ad 2f       	mov	r26, r29
    14d0:	dc 2f       	mov	r29, r28
    14d2:	cf 2f       	mov	r28, r31
    14d4:	fe 2f       	mov	r31, r30
    14d6:	e9 2d       	mov	r30, r9
    14d8:	98 2c       	mov	r9, r8
    14da:	89 2e       	mov	r8, r25
    14dc:	98 2f       	mov	r25, r24
    14de:	87 2f       	mov	r24, r23
    14e0:	76 2f       	mov	r23, r22
    14e2:	65 2f       	mov	r22, r21
    14e4:	54 2f       	mov	r21, r20
    14e6:	43 2f       	mov	r20, r19
    14e8:	32 2f       	mov	r19, r18
    14ea:	22 27       	eor	r18, r18
    14ec:	b8 50       	subi	r27, 0x08	; 8
    14ee:	31 f7       	brne	.-52     	; 0x14bc <__udivmod64+0xe>
    14f0:	bf 91       	pop	r27
    14f2:	27 c0       	rjmp	.+78     	; 0x1542 <__udivmod64+0x94>
    14f4:	1b 2e       	mov	r1, r27
    14f6:	bf 91       	pop	r27
    14f8:	bb 27       	eor	r27, r27
    14fa:	22 0f       	add	r18, r18
    14fc:	33 1f       	adc	r19, r19
    14fe:	44 1f       	adc	r20, r20
    1500:	55 1f       	adc	r21, r21
    1502:	66 1f       	adc	r22, r22
    1504:	77 1f       	adc	r23, r23
    1506:	88 1f       	adc	r24, r24
    1508:	99 1f       	adc	r25, r25
    150a:	88 1c       	adc	r8, r8
    150c:	99 1c       	adc	r9, r9
    150e:	ee 1f       	adc	r30, r30
    1510:	ff 1f       	adc	r31, r31
    1512:	cc 1f       	adc	r28, r28
    1514:	dd 1f       	adc	r29, r29
    1516:	aa 1f       	adc	r26, r26
    1518:	bb 1f       	adc	r27, r27
    151a:	8a 14       	cp	r8, r10
    151c:	9b 04       	cpc	r9, r11
    151e:	ec 05       	cpc	r30, r12
    1520:	fd 05       	cpc	r31, r13
    1522:	ce 05       	cpc	r28, r14
    1524:	df 05       	cpc	r29, r15
    1526:	a0 07       	cpc	r26, r16
    1528:	b1 07       	cpc	r27, r17
    152a:	48 f0       	brcs	.+18     	; 0x153e <__udivmod64+0x90>
    152c:	8a 18       	sub	r8, r10
    152e:	9b 08       	sbc	r9, r11
    1530:	ec 09       	sbc	r30, r12
    1532:	fd 09       	sbc	r31, r13
    1534:	ce 09       	sbc	r28, r14
    1536:	df 09       	sbc	r29, r15
    1538:	a0 0b       	sbc	r26, r16
    153a:	b1 0b       	sbc	r27, r17
    153c:	21 60       	ori	r18, 0x01	; 1
    153e:	1a 94       	dec	r1
    1540:	e1 f6       	brne	.-72     	; 0x14fa <__udivmod64+0x4c>
    1542:	2e f4       	brtc	.+10     	; 0x154e <__udivmod64+0xa0>
    1544:	94 01       	movw	r18, r8
    1546:	af 01       	movw	r20, r30
    1548:	be 01       	movw	r22, r28
    154a:	cd 01       	movw	r24, r26
    154c:	00 0c       	add	r0, r0
    154e:	08 95       	ret

00001550 <__negdi2>:
    1550:	60 95       	com	r22
    1552:	70 95       	com	r23
    1554:	80 95       	com	r24
    1556:	90 95       	com	r25
    1558:	30 95       	com	r19
    155a:	40 95       	com	r20
    155c:	50 95       	com	r21
    155e:	21 95       	neg	r18
    1560:	3f 4f       	sbci	r19, 0xFF	; 255
    1562:	4f 4f       	sbci	r20, 0xFF	; 255
    1564:	5f 4f       	sbci	r21, 0xFF	; 255
    1566:	6f 4f       	sbci	r22, 0xFF	; 255
    1568:	7f 4f       	sbci	r23, 0xFF	; 255
    156a:	8f 4f       	sbci	r24, 0xFF	; 255
    156c:	9f 4f       	sbci	r25, 0xFF	; 255
    156e:	08 95       	ret

00001570 <__prologue_saves__>:
    1570:	2f 92       	push	r2
    1572:	3f 92       	push	r3
    1574:	4f 92       	push	r4
    1576:	5f 92       	push	r5
    1578:	6f 92       	push	r6
    157a:	7f 92       	push	r7
    157c:	8f 92       	push	r8
    157e:	9f 92       	push	r9
    1580:	af 92       	push	r10
    1582:	bf 92       	push	r11
    1584:	cf 92       	push	r12
    1586:	df 92       	push	r13
    1588:	ef 92       	push	r14
    158a:	ff 92       	push	r15
    158c:	0f 93       	push	r16
    158e:	1f 93       	push	r17
    1590:	cf 93       	push	r28
    1592:	df 93       	push	r29
    1594:	cd b7       	in	r28, 0x3d	; 61
    1596:	de b7       	in	r29, 0x3e	; 62
    1598:	ca 1b       	sub	r28, r26
    159a:	db 0b       	sbc	r29, r27
    159c:	0f b6       	in	r0, 0x3f	; 63
    159e:	f8 94       	cli
    15a0:	de bf       	out	0x3e, r29	; 62
    15a2:	0f be       	out	0x3f, r0	; 63
    15a4:	cd bf       	out	0x3d, r28	; 61
    15a6:	09 94       	ijmp

000015a8 <__epilogue_restores__>:
    15a8:	2a 88       	ldd	r2, Y+18	; 0x12
    15aa:	39 88       	ldd	r3, Y+17	; 0x11
    15ac:	48 88       	ldd	r4, Y+16	; 0x10
    15ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    15b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    15b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    15b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    15b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    15b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    15ba:	b9 84       	ldd	r11, Y+9	; 0x09
    15bc:	c8 84       	ldd	r12, Y+8	; 0x08
    15be:	df 80       	ldd	r13, Y+7	; 0x07
    15c0:	ee 80       	ldd	r14, Y+6	; 0x06
    15c2:	fd 80       	ldd	r15, Y+5	; 0x05
    15c4:	0c 81       	ldd	r16, Y+4	; 0x04
    15c6:	1b 81       	ldd	r17, Y+3	; 0x03
    15c8:	aa 81       	ldd	r26, Y+2	; 0x02
    15ca:	b9 81       	ldd	r27, Y+1	; 0x01
    15cc:	ce 0f       	add	r28, r30
    15ce:	d1 1d       	adc	r29, r1
    15d0:	0f b6       	in	r0, 0x3f	; 63
    15d2:	f8 94       	cli
    15d4:	de bf       	out	0x3e, r29	; 62
    15d6:	0f be       	out	0x3f, r0	; 63
    15d8:	cd bf       	out	0x3d, r28	; 61
    15da:	ed 01       	movw	r28, r26
    15dc:	08 95       	ret

000015de <__cmpdi2_s8>:
    15de:	00 24       	eor	r0, r0
    15e0:	a7 fd       	sbrc	r26, 7
    15e2:	00 94       	com	r0
    15e4:	2a 17       	cp	r18, r26
    15e6:	30 05       	cpc	r19, r0
    15e8:	40 05       	cpc	r20, r0
    15ea:	50 05       	cpc	r21, r0
    15ec:	60 05       	cpc	r22, r0
    15ee:	70 05       	cpc	r23, r0
    15f0:	80 05       	cpc	r24, r0
    15f2:	90 05       	cpc	r25, r0
    15f4:	08 95       	ret

000015f6 <__umulhisi3>:
    15f6:	a2 9f       	mul	r26, r18
    15f8:	b0 01       	movw	r22, r0
    15fa:	b3 9f       	mul	r27, r19
    15fc:	c0 01       	movw	r24, r0
    15fe:	a3 9f       	mul	r26, r19
    1600:	70 0d       	add	r23, r0
    1602:	81 1d       	adc	r24, r1
    1604:	11 24       	eor	r1, r1
    1606:	91 1d       	adc	r25, r1
    1608:	b2 9f       	mul	r27, r18
    160a:	70 0d       	add	r23, r0
    160c:	81 1d       	adc	r24, r1
    160e:	11 24       	eor	r1, r1
    1610:	91 1d       	adc	r25, r1
    1612:	08 95       	ret

00001614 <_exit>:
    1614:	f8 94       	cli

00001616 <__stop_program>:
    1616:	ff cf       	rjmp	.-2      	; 0x1616 <__stop_program>
