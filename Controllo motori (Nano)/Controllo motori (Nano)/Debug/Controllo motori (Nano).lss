
Controllo motori (Nano).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00001652  000016e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001652  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000146  0080010a  0080010a  000016f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000016f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001720  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a67  00000000  00000000  00001880  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b56  00000000  00000000  000032e7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a36  00000000  00000000  00003e3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000444  00000000  00000000  00004874  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006bd  00000000  00000000  00004cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ddb  00000000  00000000  00005375  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00006150  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 75 00 	jmp	0xea	; 0xea <__ctors_end>
       4:	0c 94 ff 00 	jmp	0x1fe	; 0x1fe <__vector_1>
       8:	0c 94 12 02 	jmp	0x424	; 0x424 <__vector_2>
       c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      10:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      14:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      18:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      1c:	0c 94 b0 00 	jmp	0x160	; 0x160 <__vector_7>
      20:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      24:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      28:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      2c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      30:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      34:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      38:	0c 94 da 00 	jmp	0x1b4	; 0x1b4 <__vector_14>
      3c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      40:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      44:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      48:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      4c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      50:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      54:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      58:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      5c:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      60:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      64:	0c 94 92 00 	jmp	0x124	; 0x124 <__bad_interrupt>
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	08 00       	.word	0x0008	; ????
      92:	00 00       	nop
      94:	be 92       	st	-X, r11
      96:	24 49       	sbci	r18, 0x94	; 148
      98:	12 3e       	cpi	r17, 0xE2	; 226
      9a:	ab aa       	std	Y+51, r10	; 0x33
      9c:	aa 2a       	or	r10, r26
      9e:	be cd       	rjmp	.-1156   	; 0xfffffc1c <__eeprom_end+0xff7efc1c>
      a0:	cc cc       	rjmp	.-1640   	; 0xfffffa3a <__eeprom_end+0xff7efa3a>
      a2:	4c 3e       	cpi	r20, 0xEC	; 236
      a4:	00 00       	nop
      a6:	00 80       	ld	r0, Z
      a8:	be ab       	std	Y+54, r27	; 0x36
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	aa 3e       	cpi	r26, 0xEA	; 234
      ae:	00 00       	nop
      b0:	00 00       	nop
      b2:	bf 00       	.word	0x00bf	; ????
      b4:	00 00       	nop
      b6:	80 3f       	cpi	r24, 0xF0	; 240
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	00 08       	sbc	r0, r0
      be:	41 78       	andi	r20, 0x81	; 129
      c0:	d3 bb       	out	0x13, r29	; 19
      c2:	43 87       	std	Z+11, r20	; 0x0b
      c4:	d1 13       	cpse	r29, r17
      c6:	3d 19       	sub	r19, r13
      c8:	0e 3c       	cpi	r16, 0xCE	; 206
      ca:	c3 bd       	out	0x23, r28	; 35
      cc:	42 82       	std	Z+2, r4	; 0x02
      ce:	ad 2b       	or	r26, r29
      d0:	3e 68       	ori	r19, 0x8E	; 142
      d2:	ec 82       	std	Y+4, r14	; 0x04
      d4:	76 be       	out	0x36, r7	; 54
      d6:	d9 8f       	std	Y+25, r29	; 0x19
      d8:	e1 a9       	ldd	r30, Z+49	; 0x31
      da:	3e 4c       	sbci	r19, 0xCE	; 206
      dc:	80 ef       	ldi	r24, 0xF0	; 240
      de:	ff be       	out	0x3f, r15	; 63
      e0:	01 c4       	rjmp	.+2050   	; 0x8e4 <Serial_Send_Int+0x6e>
      e2:	ff 7f       	andi	r31, 0xFF	; 255
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
	...

000000ea <__ctors_end>:
      ea:	11 24       	eor	r1, r1
      ec:	1f be       	out	0x3f, r1	; 63
      ee:	cf ef       	ldi	r28, 0xFF	; 255
      f0:	d8 e0       	ldi	r29, 0x08	; 8
      f2:	de bf       	out	0x3e, r29	; 62
      f4:	cd bf       	out	0x3d, r28	; 61

000000f6 <__do_copy_data>:
      f6:	11 e0       	ldi	r17, 0x01	; 1
      f8:	a0 e0       	ldi	r26, 0x00	; 0
      fa:	b1 e0       	ldi	r27, 0x01	; 1
      fc:	e2 e5       	ldi	r30, 0x52	; 82
      fe:	f6 e1       	ldi	r31, 0x16	; 22
     100:	02 c0       	rjmp	.+4      	; 0x106 <__do_copy_data+0x10>
     102:	05 90       	lpm	r0, Z+
     104:	0d 92       	st	X+, r0
     106:	aa 30       	cpi	r26, 0x0A	; 10
     108:	b1 07       	cpc	r27, r17
     10a:	d9 f7       	brne	.-10     	; 0x102 <__do_copy_data+0xc>

0000010c <__do_clear_bss>:
     10c:	22 e0       	ldi	r18, 0x02	; 2
     10e:	aa e0       	ldi	r26, 0x0A	; 10
     110:	b1 e0       	ldi	r27, 0x01	; 1
     112:	01 c0       	rjmp	.+2      	; 0x116 <.do_clear_bss_start>

00000114 <.do_clear_bss_loop>:
     114:	1d 92       	st	X+, r1

00000116 <.do_clear_bss_start>:
     116:	a0 35       	cpi	r26, 0x50	; 80
     118:	b2 07       	cpc	r27, r18
     11a:	e1 f7       	brne	.-8      	; 0x114 <.do_clear_bss_loop>
     11c:	0e 94 1c 02 	call	0x438	; 0x438 <main>
     120:	0c 94 27 0b 	jmp	0x164e	; 0x164e <_exit>

00000124 <__bad_interrupt>:
     124:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000128 <InitADC>:
     128:	ea e7       	ldi	r30, 0x7A	; 122
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	80 81       	ld	r24, Z
     12e:	87 60       	ori	r24, 0x07	; 7
     130:	80 83       	st	Z, r24
     132:	ac e7       	ldi	r26, 0x7C	; 124
     134:	b0 e0       	ldi	r27, 0x00	; 0
     136:	8c 91       	ld	r24, X
     138:	80 64       	ori	r24, 0x40	; 64
     13a:	8c 93       	st	X, r24
     13c:	80 81       	ld	r24, Z
     13e:	80 68       	ori	r24, 0x80	; 128
     140:	80 83       	st	Z, r24
     142:	80 81       	ld	r24, Z
     144:	80 64       	ori	r24, 0x40	; 64
     146:	80 83       	st	Z, r24
     148:	08 95       	ret

0000014a <InitISR>:

volatile unsigned long topRaggiunti = 0;
volatile unsigned long ciao = 0;

void InitISR(void){
	PORTD|=(1<<PD3);
     14a:	5b 9a       	sbi	0x0b, 3	; 11
	EIMSK|=(1<<INT0)|(1<<INT1);
     14c:	8d b3       	in	r24, 0x1d	; 29
     14e:	83 60       	ori	r24, 0x03	; 3
     150:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC01)|(1<<ISC00)|(1<<ISC11)|(1<<ISC10);
     152:	e9 e6       	ldi	r30, 0x69	; 105
     154:	f0 e0       	ldi	r31, 0x00	; 0
     156:	80 81       	ld	r24, Z
     158:	8f 60       	ori	r24, 0x0F	; 15
     15a:	80 83       	st	Z, r24
	sei();
     15c:	78 94       	sei
     15e:	08 95       	ret

00000160 <__vector_7>:

}


	
ISR(TIMER2_COMPA_vect){
     160:	1f 92       	push	r1
     162:	0f 92       	push	r0
     164:	0f b6       	in	r0, 0x3f	; 63
     166:	0f 92       	push	r0
     168:	11 24       	eor	r1, r1
     16a:	2f 93       	push	r18
     16c:	3f 93       	push	r19
     16e:	4f 93       	push	r20
     170:	5f 93       	push	r21
     172:	6f 93       	push	r22
     174:	7f 93       	push	r23
     176:	8f 93       	push	r24
     178:	9f 93       	push	r25
     17a:	af 93       	push	r26
     17c:	bf 93       	push	r27
     17e:	ef 93       	push	r30
     180:	ff 93       	push	r31
	OCR1A = CalculatePID(1);
     182:	81 e0       	ldi	r24, 0x01	; 1
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	0e 94 93 02 	call	0x526	; 0x526 <CalculatePID>
     18a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     18e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	//dutyMDxA = CalculatePID(MDxA);
	//dutyMSxD = CalculatePID(MSxD);
	//dutyMDxD = CalculatePID(MDxD);
	
}
     192:	ff 91       	pop	r31
     194:	ef 91       	pop	r30
     196:	bf 91       	pop	r27
     198:	af 91       	pop	r26
     19a:	9f 91       	pop	r25
     19c:	8f 91       	pop	r24
     19e:	7f 91       	pop	r23
     1a0:	6f 91       	pop	r22
     1a2:	5f 91       	pop	r21
     1a4:	4f 91       	pop	r20
     1a6:	3f 91       	pop	r19
     1a8:	2f 91       	pop	r18
     1aa:	0f 90       	pop	r0
     1ac:	0f be       	out	0x3f, r0	; 63
     1ae:	0f 90       	pop	r0
     1b0:	1f 90       	pop	r1
     1b2:	18 95       	reti

000001b4 <__vector_14>:

ISR(TIMER0_COMPA_vect){
     1b4:	1f 92       	push	r1
     1b6:	0f 92       	push	r0
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	0f 92       	push	r0
     1bc:	11 24       	eor	r1, r1
     1be:	8f 93       	push	r24
     1c0:	9f 93       	push	r25
     1c2:	af 93       	push	r26
     1c4:	bf 93       	push	r27
	topRaggiunti++;	
     1c6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
     1ca:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
     1ce:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <__data_end+0x2>
     1d2:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <__data_end+0x3>
     1d6:	01 96       	adiw	r24, 0x01	; 1
     1d8:	a1 1d       	adc	r26, r1
     1da:	b1 1d       	adc	r27, r1
     1dc:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
     1e0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__data_end+0x1>
     1e4:	a0 93 0c 01 	sts	0x010C, r26	; 0x80010c <__data_end+0x2>
     1e8:	b0 93 0d 01 	sts	0x010D, r27	; 0x80010d <__data_end+0x3>
	
}
     1ec:	bf 91       	pop	r27
     1ee:	af 91       	pop	r26
     1f0:	9f 91       	pop	r25
     1f2:	8f 91       	pop	r24
     1f4:	0f 90       	pop	r0
     1f6:	0f be       	out	0x3f, r0	; 63
     1f8:	0f 90       	pop	r0
     1fa:	1f 90       	pop	r1
     1fc:	18 95       	reti

000001fe <__vector_1>:

ISR(INT0_vect){	
     1fe:	1f 92       	push	r1
     200:	0f 92       	push	r0
     202:	0f b6       	in	r0, 0x3f	; 63
     204:	0f 92       	push	r0
     206:	11 24       	eor	r1, r1
     208:	4f 92       	push	r4
     20a:	5f 92       	push	r5
     20c:	6f 92       	push	r6
     20e:	7f 92       	push	r7
     210:	8f 92       	push	r8
     212:	9f 92       	push	r9
     214:	af 92       	push	r10
     216:	bf 92       	push	r11
     218:	cf 92       	push	r12
     21a:	df 92       	push	r13
     21c:	ef 92       	push	r14
     21e:	ff 92       	push	r15
     220:	2f 93       	push	r18
     222:	3f 93       	push	r19
     224:	4f 93       	push	r20
     226:	5f 93       	push	r21
     228:	6f 93       	push	r22
     22a:	7f 93       	push	r23
     22c:	8f 93       	push	r24
     22e:	9f 93       	push	r25
     230:	af 93       	push	r26
     232:	bf 93       	push	r27
     234:	ef 93       	push	r30
     236:	ff 93       	push	r31

	tImp1 = TCNT0;
     238:	86 b5       	in	r24, 0x26	; 38
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	a0 e0       	ldi	r26, 0x00	; 0
     23e:	b0 e0       	ldi	r27, 0x00	; 0
     240:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <tImp1>
     244:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <tImp1+0x1>
     248:	a0 93 5c 01 	sts	0x015C, r26	; 0x80015c <tImp1+0x2>
     24c:	b0 93 5d 01 	sts	0x015D, r27	; 0x80015d <tImp1+0x3>
	topRaggiuntiProv1=topRaggiunti;
     250:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
     254:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
     258:	a0 91 0c 01 	lds	r26, 0x010C	; 0x80010c <__data_end+0x2>
     25c:	b0 91 0d 01 	lds	r27, 0x010D	; 0x80010d <__data_end+0x3>
     260:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <topRaggiuntiProv1>
     264:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <topRaggiuntiProv1+0x1>
     268:	a0 93 14 01 	sts	0x0114, r26	; 0x800114 <topRaggiuntiProv1+0x2>
     26c:	b0 93 15 01 	sts	0x0115, r27	; 0x800115 <topRaggiuntiProv1+0x3>
	if(topRaggiuntiProv1==vTopRaggiunti1){
     270:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <topRaggiuntiProv1>
     274:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <topRaggiuntiProv1+0x1>
     278:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <topRaggiuntiProv1+0x2>
     27c:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <topRaggiuntiProv1+0x3>
     280:	80 91 ae 01 	lds	r24, 0x01AE	; 0x8001ae <vTopRaggiunti1>
     284:	90 91 af 01 	lds	r25, 0x01AF	; 0x8001af <vTopRaggiunti1+0x1>
     288:	a0 91 b0 01 	lds	r26, 0x01B0	; 0x8001b0 <vTopRaggiunti1+0x2>
     28c:	b0 91 b1 01 	lds	r27, 0x01B1	; 0x8001b1 <vTopRaggiunti1+0x3>
     290:	48 17       	cp	r20, r24
     292:	59 07       	cpc	r21, r25
     294:	6a 07       	cpc	r22, r26
     296:	7b 07       	cpc	r23, r27
     298:	e9 f4       	brne	.+58     	; 0x2d4 <__vector_1+0xd6>
		difftImp1 = tImp1 - vtImp1;
     29a:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <tImp1>
     29e:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <tImp1+0x1>
     2a2:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <tImp1+0x2>
     2a6:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <tImp1+0x3>
     2aa:	40 91 36 01 	lds	r20, 0x0136	; 0x800136 <vtImp1>
     2ae:	50 91 37 01 	lds	r21, 0x0137	; 0x800137 <vtImp1+0x1>
     2b2:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <vtImp1+0x2>
     2b6:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <vtImp1+0x3>
     2ba:	84 1b       	sub	r24, r20
     2bc:	95 0b       	sbc	r25, r21
     2be:	a6 0b       	sbc	r26, r22
     2c0:	b7 0b       	sbc	r27, r23
     2c2:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <difftImp1>
     2c6:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <difftImp1+0x1>
     2ca:	a0 93 70 01 	sts	0x0170, r26	; 0x800170 <difftImp1+0x2>
     2ce:	b0 93 71 01 	sts	0x0171, r27	; 0x800171 <difftImp1+0x3>
     2d2:	4b c0       	rjmp	.+150    	; 0x36a <__vector_1+0x16c>
	}
	else{
		difftImp1 = (OCR0A - vtImp1) + (tImp1) + ((topRaggiuntiProv1-vTopRaggiunti1-1)*OCR0A);
     2d4:	e7 b5       	in	r30, 0x27	; 39
     2d6:	80 90 36 01 	lds	r8, 0x0136	; 0x800136 <vtImp1>
     2da:	90 90 37 01 	lds	r9, 0x0137	; 0x800137 <vtImp1+0x1>
     2de:	a0 90 38 01 	lds	r10, 0x0138	; 0x800138 <vtImp1+0x2>
     2e2:	b0 90 39 01 	lds	r11, 0x0139	; 0x800139 <vtImp1+0x3>
     2e6:	c0 90 5a 01 	lds	r12, 0x015A	; 0x80015a <tImp1>
     2ea:	d0 90 5b 01 	lds	r13, 0x015B	; 0x80015b <tImp1+0x1>
     2ee:	e0 90 5c 01 	lds	r14, 0x015C	; 0x80015c <tImp1+0x2>
     2f2:	f0 90 5d 01 	lds	r15, 0x015D	; 0x80015d <tImp1+0x3>
     2f6:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <topRaggiuntiProv1>
     2fa:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <topRaggiuntiProv1+0x1>
     2fe:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <topRaggiuntiProv1+0x2>
     302:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <topRaggiuntiProv1+0x3>
     306:	40 90 ae 01 	lds	r4, 0x01AE	; 0x8001ae <vTopRaggiunti1>
     30a:	50 90 af 01 	lds	r5, 0x01AF	; 0x8001af <vTopRaggiunti1+0x1>
     30e:	60 90 b0 01 	lds	r6, 0x01B0	; 0x8001b0 <vTopRaggiunti1+0x2>
     312:	70 90 b1 01 	lds	r7, 0x01B1	; 0x8001b1 <vTopRaggiunti1+0x3>
     316:	a7 b5       	in	r26, 0x27	; 39
     318:	41 50       	subi	r20, 0x01	; 1
     31a:	51 09       	sbc	r21, r1
     31c:	61 09       	sbc	r22, r1
     31e:	71 09       	sbc	r23, r1
     320:	9a 01       	movw	r18, r20
     322:	ab 01       	movw	r20, r22
     324:	24 19       	sub	r18, r4
     326:	35 09       	sbc	r19, r5
     328:	46 09       	sbc	r20, r6
     32a:	57 09       	sbc	r21, r7
     32c:	b0 e0       	ldi	r27, 0x00	; 0
     32e:	0e 94 2a 0a 	call	0x1454	; 0x1454 <__muluhisi3>
     332:	4e 2e       	mov	r4, r30
     334:	51 2c       	mov	r5, r1
     336:	61 2c       	mov	r6, r1
     338:	71 2c       	mov	r7, r1
     33a:	a3 01       	movw	r20, r6
     33c:	92 01       	movw	r18, r4
     33e:	28 19       	sub	r18, r8
     340:	39 09       	sbc	r19, r9
     342:	4a 09       	sbc	r20, r10
     344:	5b 09       	sbc	r21, r11
     346:	c2 0e       	add	r12, r18
     348:	d3 1e       	adc	r13, r19
     34a:	e4 1e       	adc	r14, r20
     34c:	f5 1e       	adc	r15, r21
     34e:	dc 01       	movw	r26, r24
     350:	cb 01       	movw	r24, r22
     352:	8c 0d       	add	r24, r12
     354:	9d 1d       	adc	r25, r13
     356:	ae 1d       	adc	r26, r14
     358:	bf 1d       	adc	r27, r15
     35a:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <difftImp1>
     35e:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <difftImp1+0x1>
     362:	a0 93 70 01 	sts	0x0170, r26	; 0x800170 <difftImp1+0x2>
     366:	b0 93 71 01 	sts	0x0171, r27	; 0x800171 <difftImp1+0x3>
		
	}
	speed[1] = 250000.0 / (622.0*difftImp1);
     36a:	60 91 6e 01 	lds	r22, 0x016E	; 0x80016e <difftImp1>
     36e:	70 91 6f 01 	lds	r23, 0x016F	; 0x80016f <difftImp1+0x1>
     372:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <difftImp1+0x2>
     376:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <difftImp1+0x3>
     37a:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__floatunsisf>
     37e:	20 e0       	ldi	r18, 0x00	; 0
     380:	30 e8       	ldi	r19, 0x80	; 128
     382:	4b e1       	ldi	r20, 0x1B	; 27
     384:	54 e4       	ldi	r21, 0x44	; 68
     386:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     38a:	9b 01       	movw	r18, r22
     38c:	ac 01       	movw	r20, r24
     38e:	60 e0       	ldi	r22, 0x00	; 0
     390:	74 e2       	ldi	r23, 0x24	; 36
     392:	84 e7       	ldi	r24, 0x74	; 116
     394:	98 e4       	ldi	r25, 0x48	; 72
     396:	0e 94 85 06 	call	0xd0a	; 0xd0a <__divsf3>
     39a:	60 93 ea 01 	sts	0x01EA, r22	; 0x8001ea <speed+0x4>
     39e:	70 93 eb 01 	sts	0x01EB, r23	; 0x8001eb <speed+0x5>
     3a2:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <speed+0x6>
     3a6:	90 93 ed 01 	sts	0x01ED, r25	; 0x8001ed <speed+0x7>
	vtImp1 = tImp1;
     3aa:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <tImp1>
     3ae:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <tImp1+0x1>
     3b2:	a0 91 5c 01 	lds	r26, 0x015C	; 0x80015c <tImp1+0x2>
     3b6:	b0 91 5d 01 	lds	r27, 0x015D	; 0x80015d <tImp1+0x3>
     3ba:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <vtImp1>
     3be:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <vtImp1+0x1>
     3c2:	a0 93 38 01 	sts	0x0138, r26	; 0x800138 <vtImp1+0x2>
     3c6:	b0 93 39 01 	sts	0x0139, r27	; 0x800139 <vtImp1+0x3>
	vTopRaggiunti1 = topRaggiuntiProv1;
     3ca:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <topRaggiuntiProv1>
     3ce:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <topRaggiuntiProv1+0x1>
     3d2:	a0 91 14 01 	lds	r26, 0x0114	; 0x800114 <topRaggiuntiProv1+0x2>
     3d6:	b0 91 15 01 	lds	r27, 0x0115	; 0x800115 <topRaggiuntiProv1+0x3>
     3da:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <vTopRaggiunti1>
     3de:	90 93 af 01 	sts	0x01AF, r25	; 0x8001af <vTopRaggiunti1+0x1>
     3e2:	a0 93 b0 01 	sts	0x01B0, r26	; 0x8001b0 <vTopRaggiunti1+0x2>
     3e6:	b0 93 b1 01 	sts	0x01B1, r27	; 0x8001b1 <vTopRaggiunti1+0x3>
}
     3ea:	ff 91       	pop	r31
     3ec:	ef 91       	pop	r30
     3ee:	bf 91       	pop	r27
     3f0:	af 91       	pop	r26
     3f2:	9f 91       	pop	r25
     3f4:	8f 91       	pop	r24
     3f6:	7f 91       	pop	r23
     3f8:	6f 91       	pop	r22
     3fa:	5f 91       	pop	r21
     3fc:	4f 91       	pop	r20
     3fe:	3f 91       	pop	r19
     400:	2f 91       	pop	r18
     402:	ff 90       	pop	r15
     404:	ef 90       	pop	r14
     406:	df 90       	pop	r13
     408:	cf 90       	pop	r12
     40a:	bf 90       	pop	r11
     40c:	af 90       	pop	r10
     40e:	9f 90       	pop	r9
     410:	8f 90       	pop	r8
     412:	7f 90       	pop	r7
     414:	6f 90       	pop	r6
     416:	5f 90       	pop	r5
     418:	4f 90       	pop	r4
     41a:	0f 90       	pop	r0
     41c:	0f be       	out	0x3f, r0	; 63
     41e:	0f 90       	pop	r0
     420:	1f 90       	pop	r1
     422:	18 95       	reti

00000424 <__vector_2>:

ISR(INT1_vect){
     424:	1f 92       	push	r1
     426:	0f 92       	push	r0
     428:	0f b6       	in	r0, 0x3f	; 63
     42a:	0f 92       	push	r0
     42c:	11 24       	eor	r1, r1
}
     42e:	0f 90       	pop	r0
     430:	0f be       	out	0x3f, r0	; 63
     432:	0f 90       	pop	r0
     434:	1f 90       	pop	r1
     436:	18 95       	reti

00000438 <main>:
#include "ADC.h"
int main(void)
{
	
	//init_millis(F_CPU);
	Serial_Init();
     438:	0e 94 f6 03 	call	0x7ec	; 0x7ec <Serial_Init>
	InitADC();
     43c:	0e 94 94 00 	call	0x128	; 0x128 <InitADC>
	Serial_Send("xd");
     440:	80 e0       	ldi	r24, 0x00	; 0
     442:	91 e0       	ldi	r25, 0x01	; 1
     444:	0e 94 19 04 	call	0x832	; 0x832 <Serial_Send_String>
	SerialN();
     448:	0e 94 38 05 	call	0xa70	; 0xa70 <SerialN>
	InitPWM();
     44c:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <InitPWM>
	InitISR();
     450:	0e 94 a5 00 	call	0x14a	; 0x14a <InitISR>
	DDRC=0;
     454:	17 b8       	out	0x07, r1	; 7
	DDRD=0;
     456:	1a b8       	out	0x0a, r1	; 10

	setpoint[1]=1;
     458:	80 e0       	ldi	r24, 0x00	; 0
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	a0 e8       	ldi	r26, 0x80	; 128
     45e:	bf e3       	ldi	r27, 0x3F	; 63
     460:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <setpoint+0x4>
     464:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <setpoint+0x5>
     468:	a0 93 44 01 	sts	0x0144, r26	; 0x800144 <setpoint+0x6>
     46c:	b0 93 45 01 	sts	0x0145, r27	; 0x800145 <setpoint+0x7>

    while (1) 
    {
		
		Serial_Send(speed[1]*1000);
     470:	06 ee       	ldi	r16, 0xE6	; 230
     472:	11 e0       	ldi	r17, 0x01	; 1
		Serial_Send("\t");
		Serial_Send(OCR1A);
     474:	c8 e8       	ldi	r28, 0x88	; 136
     476:	d0 e0       	ldi	r29, 0x00	; 0
	setpoint[1]=1;

    while (1) 
    {
		
		Serial_Send(speed[1]*1000);
     478:	f8 01       	movw	r30, r16
     47a:	64 81       	ldd	r22, Z+4	; 0x04
     47c:	75 81       	ldd	r23, Z+5	; 0x05
     47e:	86 81       	ldd	r24, Z+6	; 0x06
     480:	97 81       	ldd	r25, Z+7	; 0x07
     482:	20 e0       	ldi	r18, 0x00	; 0
     484:	30 e0       	ldi	r19, 0x00	; 0
     486:	4a e7       	ldi	r20, 0x7A	; 122
     488:	54 e4       	ldi	r21, 0x44	; 68
     48a:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     48e:	0e 94 3f 05 	call	0xa7e	; 0xa7e <Serial_Send_Float>
		Serial_Send("\t");
     492:	83 e0       	ldi	r24, 0x03	; 3
     494:	91 e0       	ldi	r25, 0x01	; 1
     496:	0e 94 19 04 	call	0x832	; 0x832 <Serial_Send_String>
		Serial_Send(OCR1A);
     49a:	88 80       	ld	r8, Y
     49c:	99 80       	ldd	r9, Y+1	; 0x01
     49e:	28 2d       	mov	r18, r8
     4a0:	39 2d       	mov	r19, r9
     4a2:	40 e0       	ldi	r20, 0x00	; 0
     4a4:	50 e0       	ldi	r21, 0x00	; 0
     4a6:	60 e0       	ldi	r22, 0x00	; 0
     4a8:	70 e0       	ldi	r23, 0x00	; 0
     4aa:	80 e0       	ldi	r24, 0x00	; 0
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	0e 94 3b 04 	call	0x876	; 0x876 <Serial_Send_Int>
		SerialN();
     4b2:	0e 94 38 05 	call	0xa70	; 0xa70 <SerialN>
     4b6:	e0 cf       	rjmp	.-64     	; 0x478 <main+0x40>

000004b8 <InitPWM>:
//#include "BNO.h"

/*-------------------PWM-------------------*/
//Inizializzazione PWM
void InitPWM(void){
	TCCR1A|=(1<<WGM10)|(1<<WGM11)|(1<<COM1A1)|(1<<COM1B1);								//PWM 10 bit, non-inverting mode, PRESCALER = 256, FREQUENZA OTTENUTA = 61 Hz
     4b8:	e0 e8       	ldi	r30, 0x80	; 128
     4ba:	f0 e0       	ldi	r31, 0x00	; 0
     4bc:	80 81       	ld	r24, Z
     4be:	83 6a       	ori	r24, 0xA3	; 163
     4c0:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM12)|(0<<WGM13)|(1<<CS12);
     4c2:	e1 e8       	ldi	r30, 0x81	; 129
     4c4:	f0 e0       	ldi	r31, 0x00	; 0
     4c6:	80 81       	ld	r24, Z
     4c8:	8c 60       	ori	r24, 0x0C	; 12
     4ca:	80 83       	st	Z, r24
	
	TCCR2A|=(0<<WGM20)|(0<<WGM21)|(0<<COM2A1)|(0<<COM2B1);								//CTC timer 5, PRESCALER = 8
     4cc:	e0 eb       	ldi	r30, 0xB0	; 176
     4ce:	f0 e0       	ldi	r31, 0x00	; 0
     4d0:	80 81       	ld	r24, Z
     4d2:	80 83       	st	Z, r24
	TCCR2B|=(1<<WGM22)|(1<<CS20)|(1<<CS21);
     4d4:	e1 eb       	ldi	r30, 0xB1	; 177
     4d6:	f0 e0       	ldi	r31, 0x00	; 0
     4d8:	80 81       	ld	r24, Z
     4da:	8b 60       	ori	r24, 0x0B	; 11
     4dc:	80 83       	st	Z, r24
	TIMSK2 = (1<<OCIE2A);
     4de:	22 e0       	ldi	r18, 0x02	; 2
     4e0:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
	OCR2A = 255;																				
     4e4:	8f ef       	ldi	r24, 0xFF	; 255
     4e6:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
	
	TCCR0A|=(0<<WGM00)|(1<<WGM01)|(0<<COM0A1)|(0<<COM0B1);					
     4ea:	94 b5       	in	r25, 0x24	; 36
     4ec:	92 60       	ori	r25, 0x02	; 2
     4ee:	94 bd       	out	0x24, r25	; 36
	TCCR0B|=(1<<WGM02)|(1<<CS00)|(1<<CS01);
     4f0:	95 b5       	in	r25, 0x25	; 37
     4f2:	9b 60       	ori	r25, 0x0B	; 11
     4f4:	95 bd       	out	0x25, r25	; 37
	TIMSK0 = (1<<OCIE0A);
     4f6:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	OCR0A = 255;
     4fa:	87 bd       	out	0x27, r24	; 39
	TCNT0=0xFF;
     4fc:	86 bd       	out	0x26, r24	; 38

	
	DDRB=0xFF;
     4fe:	84 b9       	out	0x04, r24	; 4

	for(int i=1;i<5;i++)integral[i]=0;
     500:	e2 e1       	ldi	r30, 0x12	; 18
     502:	f2 e0       	ldi	r31, 0x02	; 2
     504:	14 82       	std	Z+4, r1	; 0x04
     506:	15 82       	std	Z+5, r1	; 0x05
     508:	16 82       	std	Z+6, r1	; 0x06
     50a:	17 82       	std	Z+7, r1	; 0x07
     50c:	10 86       	std	Z+8, r1	; 0x08
     50e:	11 86       	std	Z+9, r1	; 0x09
     510:	12 86       	std	Z+10, r1	; 0x0a
     512:	13 86       	std	Z+11, r1	; 0x0b
     514:	14 86       	std	Z+12, r1	; 0x0c
     516:	15 86       	std	Z+13, r1	; 0x0d
     518:	16 86       	std	Z+14, r1	; 0x0e
     51a:	17 86       	std	Z+15, r1	; 0x0f
     51c:	10 8a       	std	Z+16, r1	; 0x10
     51e:	11 8a       	std	Z+17, r1	; 0x11
     520:	12 8a       	std	Z+18, r1	; 0x12
     522:	13 8a       	std	Z+19, r1	; 0x13
     524:	08 95       	ret

00000526 <CalculatePID>:
	//setpointGy+=degrees;
//}
//
///*-------------------PID-------------------*/

int CalculatePID(int N){
     526:	8f 92       	push	r8
     528:	9f 92       	push	r9
     52a:	af 92       	push	r10
     52c:	bf 92       	push	r11
     52e:	cf 92       	push	r12
     530:	df 92       	push	r13
     532:	ef 92       	push	r14
     534:	ff 92       	push	r15
     536:	0f 93       	push	r16
     538:	1f 93       	push	r17
     53a:	cf 93       	push	r28
     53c:	df 93       	push	r29
     53e:	ec 01       	movw	r28, r24
	error[N] = setpoint[N] - speed[N];
     540:	8c 01       	movw	r16, r24
     542:	00 0f       	add	r16, r16
     544:	11 1f       	adc	r17, r17
     546:	00 0f       	add	r16, r16
     548:	11 1f       	adc	r17, r17
     54a:	f8 01       	movw	r30, r16
     54c:	e2 5c       	subi	r30, 0xC2	; 194
     54e:	fe 4f       	sbci	r31, 0xFE	; 254
     550:	60 81       	ld	r22, Z
     552:	71 81       	ldd	r23, Z+1	; 0x01
     554:	82 81       	ldd	r24, Z+2	; 0x02
     556:	93 81       	ldd	r25, Z+3	; 0x03
     558:	f8 01       	movw	r30, r16
     55a:	ea 51       	subi	r30, 0x1A	; 26
     55c:	fe 4f       	sbci	r31, 0xFE	; 254
     55e:	20 81       	ld	r18, Z
     560:	31 81       	ldd	r19, Z+1	; 0x01
     562:	42 81       	ldd	r20, Z+2	; 0x02
     564:	53 81       	ldd	r21, Z+3	; 0x03
     566:	0e 94 13 06 	call	0xc26	; 0xc26 <__subsf3>
     56a:	f8 01       	movw	r30, r16
     56c:	ee 52       	subi	r30, 0x2E	; 46
     56e:	fe 4f       	sbci	r31, 0xFE	; 254
     570:	60 83       	st	Z, r22
     572:	71 83       	std	Z+1, r23	; 0x01
     574:	82 83       	std	Z+2, r24	; 0x02
     576:	93 83       	std	Z+3, r25	; 0x03
	integral[N] += error[N]*0.002;
     578:	60 81       	ld	r22, Z
     57a:	71 81       	ldd	r23, Z+1	; 0x01
     57c:	82 81       	ldd	r24, Z+2	; 0x02
     57e:	93 81       	ldd	r25, Z+3	; 0x03
     580:	0e 5e       	subi	r16, 0xEE	; 238
     582:	1d 4f       	sbci	r17, 0xFD	; 253
     584:	f8 01       	movw	r30, r16
     586:	c0 80       	ld	r12, Z
     588:	d1 80       	ldd	r13, Z+1	; 0x01
     58a:	e2 80       	ldd	r14, Z+2	; 0x02
     58c:	f3 80       	ldd	r15, Z+3	; 0x03
     58e:	2f e6       	ldi	r18, 0x6F	; 111
     590:	32 e1       	ldi	r19, 0x12	; 18
     592:	43 e0       	ldi	r20, 0x03	; 3
     594:	5b e3       	ldi	r21, 0x3B	; 59
     596:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     59a:	a7 01       	movw	r20, r14
     59c:	96 01       	movw	r18, r12
     59e:	0e 94 14 06 	call	0xc28	; 0xc28 <__addsf3>
     5a2:	f8 01       	movw	r30, r16
     5a4:	60 83       	st	Z, r22
     5a6:	71 83       	std	Z+1, r23	; 0x01
     5a8:	82 83       	std	Z+2, r24	; 0x02
     5aa:	93 83       	std	Z+3, r25	; 0x03
	integral[N] = integral[N] > limI ? limI : integral[N] < -limI ? -limI : integral[N];
     5ac:	60 81       	ld	r22, Z
     5ae:	71 81       	ldd	r23, Z+1	; 0x01
     5b0:	82 81       	ldd	r24, Z+2	; 0x02
     5b2:	93 81       	ldd	r25, Z+3	; 0x03
     5b4:	20 e0       	ldi	r18, 0x00	; 0
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	40 e8       	ldi	r20, 0x80	; 128
     5ba:	5f e3       	ldi	r21, 0x3F	; 63
     5bc:	0e 94 41 08 	call	0x1082	; 0x1082 <__gesf2>
     5c0:	18 16       	cp	r1, r24
     5c2:	9c f0       	brlt	.+38     	; 0x5ea <CalculatePID+0xc4>
     5c4:	f8 01       	movw	r30, r16
     5c6:	60 81       	ld	r22, Z
     5c8:	71 81       	ldd	r23, Z+1	; 0x01
     5ca:	82 81       	ldd	r24, Z+2	; 0x02
     5cc:	93 81       	ldd	r25, Z+3	; 0x03
     5ce:	20 e0       	ldi	r18, 0x00	; 0
     5d0:	30 e0       	ldi	r19, 0x00	; 0
     5d2:	40 e8       	ldi	r20, 0x80	; 128
     5d4:	5f eb       	ldi	r21, 0xBF	; 191
     5d6:	0e 94 80 06 	call	0xd00	; 0xd00 <__cmpsf2>
     5da:	88 23       	and	r24, r24
     5dc:	5c f0       	brlt	.+22     	; 0x5f4 <CalculatePID+0xce>
     5de:	f8 01       	movw	r30, r16
     5e0:	40 81       	ld	r20, Z
     5e2:	51 81       	ldd	r21, Z+1	; 0x01
     5e4:	62 81       	ldd	r22, Z+2	; 0x02
     5e6:	73 81       	ldd	r23, Z+3	; 0x03
     5e8:	09 c0       	rjmp	.+18     	; 0x5fc <CalculatePID+0xd6>
     5ea:	40 e0       	ldi	r20, 0x00	; 0
     5ec:	50 e0       	ldi	r21, 0x00	; 0
     5ee:	60 e8       	ldi	r22, 0x80	; 128
     5f0:	7f e3       	ldi	r23, 0x3F	; 63
     5f2:	04 c0       	rjmp	.+8      	; 0x5fc <CalculatePID+0xd6>
     5f4:	40 e0       	ldi	r20, 0x00	; 0
     5f6:	50 e0       	ldi	r21, 0x00	; 0
     5f8:	60 e8       	ldi	r22, 0x80	; 128
     5fa:	7f eb       	ldi	r23, 0xBF	; 191
     5fc:	ce 01       	movw	r24, r28
     5fe:	88 0f       	add	r24, r24
     600:	99 1f       	adc	r25, r25
     602:	88 0f       	add	r24, r24
     604:	99 1f       	adc	r25, r25
     606:	fc 01       	movw	r30, r24
     608:	ee 5e       	subi	r30, 0xEE	; 238
     60a:	fd 4f       	sbci	r31, 0xFD	; 253
     60c:	40 83       	st	Z, r20
     60e:	51 83       	std	Z+1, r21	; 0x01
     610:	62 83       	std	Z+2, r22	; 0x02
     612:	73 83       	std	Z+3, r23	; 0x03
	proportional[N] = error[N]*Kp > limP ? limP : error[N]*Kp < -limP ? -limP : error[N]*Kp;
     614:	fc 01       	movw	r30, r24
     616:	ee 52       	subi	r30, 0x2E	; 46
     618:	fe 4f       	sbci	r31, 0xFE	; 254
     61a:	60 81       	ld	r22, Z
     61c:	71 81       	ldd	r23, Z+1	; 0x01
     61e:	82 81       	ldd	r24, Z+2	; 0x02
     620:	93 81       	ldd	r25, Z+3	; 0x03
     622:	20 e0       	ldi	r18, 0x00	; 0
     624:	30 e8       	ldi	r19, 0x80	; 128
     626:	42 e2       	ldi	r20, 0x22	; 34
     628:	54 e4       	ldi	r21, 0x44	; 68
     62a:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     62e:	20 e0       	ldi	r18, 0x00	; 0
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	4a e7       	ldi	r20, 0x7A	; 122
     634:	54 e4       	ldi	r21, 0x44	; 68
     636:	0e 94 41 08 	call	0x1082	; 0x1082 <__gesf2>
     63a:	18 16       	cp	r1, r24
     63c:	5c f1       	brlt	.+86     	; 0x694 <CalculatePID+0x16e>
     63e:	fe 01       	movw	r30, r28
     640:	ee 0f       	add	r30, r30
     642:	ff 1f       	adc	r31, r31
     644:	ee 0f       	add	r30, r30
     646:	ff 1f       	adc	r31, r31
     648:	ee 52       	subi	r30, 0x2E	; 46
     64a:	fe 4f       	sbci	r31, 0xFE	; 254
     64c:	60 81       	ld	r22, Z
     64e:	71 81       	ldd	r23, Z+1	; 0x01
     650:	82 81       	ldd	r24, Z+2	; 0x02
     652:	93 81       	ldd	r25, Z+3	; 0x03
     654:	20 e0       	ldi	r18, 0x00	; 0
     656:	30 e8       	ldi	r19, 0x80	; 128
     658:	42 e2       	ldi	r20, 0x22	; 34
     65a:	54 e4       	ldi	r21, 0x44	; 68
     65c:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     660:	20 e0       	ldi	r18, 0x00	; 0
     662:	30 e0       	ldi	r19, 0x00	; 0
     664:	4a e7       	ldi	r20, 0x7A	; 122
     666:	54 ec       	ldi	r21, 0xC4	; 196
     668:	0e 94 80 06 	call	0xd00	; 0xd00 <__cmpsf2>
     66c:	88 23       	and	r24, r24
     66e:	bc f0       	brlt	.+46     	; 0x69e <CalculatePID+0x178>
     670:	fe 01       	movw	r30, r28
     672:	ee 0f       	add	r30, r30
     674:	ff 1f       	adc	r31, r31
     676:	ee 0f       	add	r30, r30
     678:	ff 1f       	adc	r31, r31
     67a:	ee 52       	subi	r30, 0x2E	; 46
     67c:	fe 4f       	sbci	r31, 0xFE	; 254
     67e:	60 81       	ld	r22, Z
     680:	71 81       	ldd	r23, Z+1	; 0x01
     682:	82 81       	ldd	r24, Z+2	; 0x02
     684:	93 81       	ldd	r25, Z+3	; 0x03
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e8       	ldi	r19, 0x80	; 128
     68a:	42 e2       	ldi	r20, 0x22	; 34
     68c:	54 e4       	ldi	r21, 0x44	; 68
     68e:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     692:	09 c0       	rjmp	.+18     	; 0x6a6 <CalculatePID+0x180>
     694:	60 e0       	ldi	r22, 0x00	; 0
     696:	70 e0       	ldi	r23, 0x00	; 0
     698:	8a e7       	ldi	r24, 0x7A	; 122
     69a:	94 e4       	ldi	r25, 0x44	; 68
     69c:	04 c0       	rjmp	.+8      	; 0x6a6 <CalculatePID+0x180>
     69e:	60 e0       	ldi	r22, 0x00	; 0
     6a0:	70 e0       	ldi	r23, 0x00	; 0
     6a2:	8a e7       	ldi	r24, 0x7A	; 122
     6a4:	94 ec       	ldi	r25, 0xC4	; 196
     6a6:	8e 01       	movw	r16, r28
     6a8:	00 0f       	add	r16, r16
     6aa:	11 1f       	adc	r17, r17
     6ac:	00 0f       	add	r16, r16
     6ae:	11 1f       	adc	r17, r17
     6b0:	98 01       	movw	r18, r16
     6b2:	2a 58       	subi	r18, 0x8A	; 138
     6b4:	3e 4f       	sbci	r19, 0xFE	; 254
     6b6:	79 01       	movw	r14, r18
     6b8:	f9 01       	movw	r30, r18
     6ba:	60 83       	st	Z, r22
     6bc:	71 83       	std	Z+1, r23	; 0x01
     6be:	82 83       	std	Z+2, r24	; 0x02
     6c0:	93 83       	std	Z+3, r25	; 0x03
	derivative[N] = (error[N] - old_error[N])/0.002;
     6c2:	f8 01       	movw	r30, r16
     6c4:	ee 52       	subi	r30, 0x2E	; 46
     6c6:	fe 4f       	sbci	r31, 0xFE	; 254
     6c8:	60 81       	ld	r22, Z
     6ca:	71 81       	ldd	r23, Z+1	; 0x01
     6cc:	82 81       	ldd	r24, Z+2	; 0x02
     6ce:	93 81       	ldd	r25, Z+3	; 0x03
     6d0:	f8 01       	movw	r30, r16
     6d2:	ea 56       	subi	r30, 0x6A	; 106
     6d4:	fe 4f       	sbci	r31, 0xFE	; 254
     6d6:	20 81       	ld	r18, Z
     6d8:	31 81       	ldd	r19, Z+1	; 0x01
     6da:	42 81       	ldd	r20, Z+2	; 0x02
     6dc:	53 81       	ldd	r21, Z+3	; 0x03
     6de:	0e 94 13 06 	call	0xc26	; 0xc26 <__subsf3>
     6e2:	2f e6       	ldi	r18, 0x6F	; 111
     6e4:	32 e1       	ldi	r19, 0x12	; 18
     6e6:	43 e0       	ldi	r20, 0x03	; 3
     6e8:	5b e3       	ldi	r21, 0x3B	; 59
     6ea:	0e 94 85 06 	call	0xd0a	; 0xd0a <__divsf3>
     6ee:	d8 01       	movw	r26, r16
     6f0:	ae 5d       	subi	r26, 0xDE	; 222
     6f2:	be 4f       	sbci	r27, 0xFE	; 254
     6f4:	6d 93       	st	X+, r22
     6f6:	7d 93       	st	X+, r23
     6f8:	8d 93       	st	X+, r24
     6fa:	9c 93       	st	X, r25
     6fc:	13 97       	sbiw	r26, 0x03	; 3
	duty[N] = proportional[N] + integral[N]*Ki + derivative[N]*Kd;
     6fe:	f7 01       	movw	r30, r14
     700:	c0 80       	ld	r12, Z
     702:	d1 80       	ldd	r13, Z+1	; 0x01
     704:	e2 80       	ldd	r14, Z+2	; 0x02
     706:	f3 80       	ldd	r15, Z+3	; 0x03
     708:	f8 01       	movw	r30, r16
     70a:	ee 5e       	subi	r30, 0xEE	; 238
     70c:	fd 4f       	sbci	r31, 0xFD	; 253
     70e:	60 81       	ld	r22, Z
     710:	71 81       	ldd	r23, Z+1	; 0x01
     712:	82 81       	ldd	r24, Z+2	; 0x02
     714:	93 81       	ldd	r25, Z+3	; 0x03
     716:	8d 90       	ld	r8, X+
     718:	9d 90       	ld	r9, X+
     71a:	ad 90       	ld	r10, X+
     71c:	bc 90       	ld	r11, X
     71e:	20 e0       	ldi	r18, 0x00	; 0
     720:	30 e0       	ldi	r19, 0x00	; 0
     722:	4a e7       	ldi	r20, 0x7A	; 122
     724:	53 e4       	ldi	r21, 0x43	; 67
     726:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     72a:	a7 01       	movw	r20, r14
     72c:	96 01       	movw	r18, r12
     72e:	0e 94 14 06 	call	0xc28	; 0xc28 <__addsf3>
     732:	6b 01       	movw	r12, r22
     734:	7c 01       	movw	r14, r24
     736:	2a e9       	ldi	r18, 0x9A	; 154
     738:	39 e9       	ldi	r19, 0x99	; 153
     73a:	49 e9       	ldi	r20, 0x99	; 153
     73c:	5e e3       	ldi	r21, 0x3E	; 62
     73e:	c5 01       	movw	r24, r10
     740:	b4 01       	movw	r22, r8
     742:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     746:	9b 01       	movw	r18, r22
     748:	ac 01       	movw	r20, r24
     74a:	c7 01       	movw	r24, r14
     74c:	b6 01       	movw	r22, r12
     74e:	0e 94 14 06 	call	0xc28	; 0xc28 <__addsf3>
     752:	0e 94 f7 06 	call	0xdee	; 0xdee <__fixsfsi>
     756:	fe 01       	movw	r30, r28
     758:	ee 0f       	add	r30, r30
     75a:	ff 1f       	adc	r31, r31
     75c:	e0 50       	subi	r30, 0x00	; 0
     75e:	fe 4f       	sbci	r31, 0xFE	; 254
     760:	71 83       	std	Z+1, r23	; 0x01
     762:	60 83       	st	Z, r22
	if (duty[N]<0) duty[N]=0;
     764:	80 81       	ld	r24, Z
     766:	91 81       	ldd	r25, Z+1	; 0x01
     768:	99 23       	and	r25, r25
     76a:	3c f4       	brge	.+14     	; 0x77a <CalculatePID+0x254>
     76c:	fe 01       	movw	r30, r28
     76e:	ee 0f       	add	r30, r30
     770:	ff 1f       	adc	r31, r31
     772:	e0 50       	subi	r30, 0x00	; 0
     774:	fe 4f       	sbci	r31, 0xFE	; 254
     776:	11 82       	std	Z+1, r1	; 0x01
     778:	10 82       	st	Z, r1
	if (duty[N]>1023) duty[N]=1023;
     77a:	fe 01       	movw	r30, r28
     77c:	ee 0f       	add	r30, r30
     77e:	ff 1f       	adc	r31, r31
     780:	e0 50       	subi	r30, 0x00	; 0
     782:	fe 4f       	sbci	r31, 0xFE	; 254
     784:	80 81       	ld	r24, Z
     786:	91 81       	ldd	r25, Z+1	; 0x01
     788:	81 15       	cp	r24, r1
     78a:	94 40       	sbci	r25, 0x04	; 4
     78c:	4c f0       	brlt	.+18     	; 0x7a0 <CalculatePID+0x27a>
     78e:	fe 01       	movw	r30, r28
     790:	ee 0f       	add	r30, r30
     792:	ff 1f       	adc	r31, r31
     794:	e0 50       	subi	r30, 0x00	; 0
     796:	fe 4f       	sbci	r31, 0xFE	; 254
     798:	8f ef       	ldi	r24, 0xFF	; 255
     79a:	93 e0       	ldi	r25, 0x03	; 3
     79c:	91 83       	std	Z+1, r25	; 0x01
     79e:	80 83       	st	Z, r24
	old_error[N] = error[N];
     7a0:	ce 01       	movw	r24, r28
     7a2:	88 0f       	add	r24, r24
     7a4:	99 1f       	adc	r25, r25
     7a6:	88 0f       	add	r24, r24
     7a8:	99 1f       	adc	r25, r25
     7aa:	fc 01       	movw	r30, r24
     7ac:	ee 52       	subi	r30, 0x2E	; 46
     7ae:	fe 4f       	sbci	r31, 0xFE	; 254
     7b0:	40 81       	ld	r20, Z
     7b2:	51 81       	ldd	r21, Z+1	; 0x01
     7b4:	62 81       	ldd	r22, Z+2	; 0x02
     7b6:	73 81       	ldd	r23, Z+3	; 0x03
     7b8:	fc 01       	movw	r30, r24
     7ba:	ea 56       	subi	r30, 0x6A	; 106
     7bc:	fe 4f       	sbci	r31, 0xFE	; 254
     7be:	40 83       	st	Z, r20
     7c0:	51 83       	std	Z+1, r21	; 0x01
     7c2:	62 83       	std	Z+2, r22	; 0x02
     7c4:	73 83       	std	Z+3, r23	; 0x03
	return duty[N];
     7c6:	cc 0f       	add	r28, r28
     7c8:	dd 1f       	adc	r29, r29
     7ca:	c0 50       	subi	r28, 0x00	; 0
     7cc:	de 4f       	sbci	r29, 0xFE	; 254
     7ce:	88 81       	ld	r24, Y
     7d0:	99 81       	ldd	r25, Y+1	; 0x01
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	1f 91       	pop	r17
     7d8:	0f 91       	pop	r16
     7da:	ff 90       	pop	r15
     7dc:	ef 90       	pop	r14
     7de:	df 90       	pop	r13
     7e0:	cf 90       	pop	r12
     7e2:	bf 90       	pop	r11
     7e4:	af 90       	pop	r10
     7e6:	9f 90       	pop	r9
     7e8:	8f 90       	pop	r8
     7ea:	08 95       	ret

000007ec <Serial_Init>:
}
unsigned char Serial_Rx( void )
{
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}
     7ec:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <BAUD0>
     7f0:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <BAUD0+0x1>
     7f4:	a0 91 10 01 	lds	r26, 0x0110	; 0x800110 <BAUD0+0x2>
     7f8:	b0 91 11 01 	lds	r27, 0x0111	; 0x800111 <BAUD0+0x3>
     7fc:	89 2f       	mov	r24, r25
     7fe:	9a 2f       	mov	r25, r26
     800:	ab 2f       	mov	r26, r27
     802:	bb 27       	eor	r27, r27
     804:	a7 fd       	sbrc	r26, 7
     806:	ba 95       	dec	r27
     808:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     80c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <BAUD0>
     810:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     814:	88 e1       	ldi	r24, 0x18	; 24
     816:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     81a:	86 e0       	ldi	r24, 0x06	; 6
     81c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     820:	08 95       	ret

00000822 <Serial_Tx>:
     822:	e0 ec       	ldi	r30, 0xC0	; 192
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	90 81       	ld	r25, Z
     828:	95 ff       	sbrs	r25, 5
     82a:	fd cf       	rjmp	.-6      	; 0x826 <Serial_Tx+0x4>
     82c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     830:	08 95       	ret

00000832 <Serial_Send_String>:
	}
}


void Serial_Send_String(char *string1)
{
     832:	ef 92       	push	r14
     834:	ff 92       	push	r15
     836:	0f 93       	push	r16
     838:	1f 93       	push	r17
     83a:	cf 93       	push	r28
     83c:	df 93       	push	r29
     83e:	8c 01       	movw	r16, r24
     840:	7c 01       	movw	r14, r24
	int i=0;
	for(i=0;i<strlen(string1);i++)
     842:	c0 e0       	ldi	r28, 0x00	; 0
     844:	d0 e0       	ldi	r29, 0x00	; 0
     846:	06 c0       	rjmp	.+12     	; 0x854 <Serial_Send_String+0x22>
	{
		Serial_Tx(string1[i]);
     848:	f7 01       	movw	r30, r14
     84a:	81 91       	ld	r24, Z+
     84c:	7f 01       	movw	r14, r30
     84e:	0e 94 11 04 	call	0x822	; 0x822 <Serial_Tx>


void Serial_Send_String(char *string1)
{
	int i=0;
	for(i=0;i<strlen(string1);i++)
     852:	21 96       	adiw	r28, 0x01	; 1
     854:	f8 01       	movw	r30, r16
     856:	01 90       	ld	r0, Z+
     858:	00 20       	and	r0, r0
     85a:	e9 f7       	brne	.-6      	; 0x856 <Serial_Send_String+0x24>
     85c:	31 97       	sbiw	r30, 0x01	; 1
     85e:	e0 1b       	sub	r30, r16
     860:	f1 0b       	sbc	r31, r17
     862:	ce 17       	cp	r28, r30
     864:	df 07       	cpc	r29, r31
     866:	80 f3       	brcs	.-32     	; 0x848 <Serial_Send_String+0x16>
	{
		Serial_Tx(string1[i]);
	}
}
     868:	df 91       	pop	r29
     86a:	cf 91       	pop	r28
     86c:	1f 91       	pop	r17
     86e:	0f 91       	pop	r16
     870:	ff 90       	pop	r15
     872:	ef 90       	pop	r14
     874:	08 95       	ret

00000876 <Serial_Send_Int>:
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}

void Serial_Send_Int(int64_t num)
{
     876:	2f 92       	push	r2
     878:	3f 92       	push	r3
     87a:	4f 92       	push	r4
     87c:	5f 92       	push	r5
     87e:	6f 92       	push	r6
     880:	7f 92       	push	r7
     882:	8f 92       	push	r8
     884:	9f 92       	push	r9
     886:	af 92       	push	r10
     888:	bf 92       	push	r11
     88a:	cf 92       	push	r12
     88c:	df 92       	push	r13
     88e:	ef 92       	push	r14
     890:	ff 92       	push	r15
     892:	0f 93       	push	r16
     894:	1f 93       	push	r17
     896:	cf 93       	push	r28
     898:	df 93       	push	r29
     89a:	cd b7       	in	r28, 0x3d	; 61
     89c:	de b7       	in	r29, 0x3e	; 62
     89e:	c9 54       	subi	r28, 0x49	; 73
     8a0:	d1 09       	sbc	r29, r1
     8a2:	0f b6       	in	r0, 0x3f	; 63
     8a4:	f8 94       	cli
     8a6:	de bf       	out	0x3e, r29	; 62
     8a8:	0f be       	out	0x3f, r0	; 63
     8aa:	cd bf       	out	0x3d, r28	; 61
     8ac:	22 2e       	mov	r2, r18
     8ae:	33 2e       	mov	r3, r19
     8b0:	04 2f       	mov	r16, r20
     8b2:	22 96       	adiw	r28, 0x02	; 2
     8b4:	5f af       	std	Y+63, r21	; 0x3f
     8b6:	22 97       	sbiw	r28, 0x02	; 2
     8b8:	86 2e       	mov	r8, r22
     8ba:	17 2f       	mov	r17, r23
     8bc:	23 96       	adiw	r28, 0x03	; 3
     8be:	8f af       	std	Y+63, r24	; 0x3f
     8c0:	23 97       	sbiw	r28, 0x03	; 3
     8c2:	24 96       	adiw	r28, 0x04	; 4
     8c4:	9f af       	std	Y+63, r25	; 0x3f
     8c6:	24 97       	sbiw	r28, 0x04	; 4
	if(num<0)
     8c8:	a0 e0       	ldi	r26, 0x00	; 0
     8ca:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__cmpdi2_s8>
     8ce:	0c f0       	brlt	.+2      	; 0x8d2 <Serial_Send_Int+0x5c>
     8d0:	a6 c0       	rjmp	.+332    	; 0xa1e <__stack+0x11f>
	{
		Serial_Send_String("-");
     8d2:	85 e0       	ldi	r24, 0x05	; 5
     8d4:	91 e0       	ldi	r25, 0x01	; 1
     8d6:	0e 94 19 04 	call	0x832	; 0x832 <Serial_Send_String>
		num=-num;
     8da:	22 2d       	mov	r18, r2
     8dc:	33 2d       	mov	r19, r3
     8de:	40 2f       	mov	r20, r16
     8e0:	22 96       	adiw	r28, 0x02	; 2
     8e2:	5f ad       	ldd	r21, Y+63	; 0x3f
     8e4:	22 97       	sbiw	r28, 0x02	; 2
     8e6:	68 2d       	mov	r22, r8
     8e8:	71 2f       	mov	r23, r17
     8ea:	23 96       	adiw	r28, 0x03	; 3
     8ec:	8f ad       	ldd	r24, Y+63	; 0x3f
     8ee:	23 97       	sbiw	r28, 0x03	; 3
     8f0:	24 96       	adiw	r28, 0x04	; 4
     8f2:	9f ad       	ldd	r25, Y+63	; 0x3f
     8f4:	24 97       	sbiw	r28, 0x04	; 4
     8f6:	0e 94 c5 0a 	call	0x158a	; 0x158a <__negdi2>
     8fa:	22 2e       	mov	r2, r18
     8fc:	33 2e       	mov	r3, r19
     8fe:	04 2f       	mov	r16, r20
     900:	22 96       	adiw	r28, 0x02	; 2
     902:	5f af       	std	Y+63, r21	; 0x3f
     904:	22 97       	sbiw	r28, 0x02	; 2
     906:	86 2e       	mov	r8, r22
     908:	17 2f       	mov	r17, r23
     90a:	23 96       	adiw	r28, 0x03	; 3
     90c:	8f af       	std	Y+63, r24	; 0x3f
     90e:	23 97       	sbiw	r28, 0x03	; 3
     910:	24 96       	adiw	r28, 0x04	; 4
     912:	9f af       	std	Y+63, r25	; 0x3f
     914:	24 97       	sbiw	r28, 0x04	; 4
	}
	if(num==0){Serial_Tx('0');}
     916:	a0 e0       	ldi	r26, 0x00	; 0
     918:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__cmpdi2_s8>
     91c:	21 f4       	brne	.+8      	; 0x926 <__stack+0x27>
     91e:	80 e3       	ldi	r24, 0x30	; 48
     920:	0e 94 11 04 	call	0x822	; 0x822 <Serial_Tx>
     924:	8b c0       	rjmp	.+278    	; 0xa3c <__stack+0x13d>
     926:	ce 01       	movw	r24, r28
     928:	01 96       	adiw	r24, 0x01	; 1
     92a:	2c 01       	movw	r4, r24
     92c:	3e 01       	movw	r6, r28
     92e:	91 e2       	ldi	r25, 0x21	; 33
     930:	69 0e       	add	r6, r25
     932:	71 1c       	adc	r7, r1
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}

void Serial_Send_Int(int64_t num)
{
     934:	f2 01       	movw	r30, r4
	if(num==0){Serial_Tx('0');}
	else
	{
		char str[64];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
     936:	11 92       	st	Z+, r1
     938:	e6 15       	cp	r30, r6
     93a:	f7 05       	cpc	r31, r7
     93c:	e1 f7       	brne	.-8      	; 0x936 <__stack+0x37>
     93e:	0f 2e       	mov	r0, r31
     940:	ff e1       	ldi	r31, 0x1F	; 31
     942:	9f 2e       	mov	r9, r31
     944:	f0 2d       	mov	r31, r0
		i=31;
		while (num)
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
     946:	28 96       	adiw	r28, 0x08	; 8
     948:	5f ae       	std	Y+63, r5	; 0x3f
     94a:	4e ae       	std	Y+62, r4	; 0x3e
     94c:	28 97       	sbiw	r28, 0x08	; 8
     94e:	2a 96       	adiw	r28, 0x0a	; 10
     950:	7f ae       	std	Y+63, r7	; 0x3f
     952:	6e ae       	std	Y+62, r6	; 0x3e
     954:	2a 97       	sbiw	r28, 0x0a	; 10
     956:	79 2c       	mov	r7, r9
     958:	50 2e       	mov	r5, r16
     95a:	91 2e       	mov	r9, r17
     95c:	e1 e0       	ldi	r30, 0x01	; 1
     95e:	f0 e0       	ldi	r31, 0x00	; 0
     960:	ec 0f       	add	r30, r28
     962:	fd 1f       	adc	r31, r29
     964:	e7 0d       	add	r30, r7
     966:	f1 1d       	adc	r31, r1
     968:	26 96       	adiw	r28, 0x06	; 6
     96a:	ff af       	std	Y+63, r31	; 0x3f
     96c:	ee af       	std	Y+62, r30	; 0x3e
     96e:	26 97       	sbiw	r28, 0x06	; 6
     970:	0f 2e       	mov	r0, r31
     972:	fa e0       	ldi	r31, 0x0A	; 10
     974:	af 2e       	mov	r10, r31
     976:	f0 2d       	mov	r31, r0
     978:	b1 2c       	mov	r11, r1
     97a:	c1 2c       	mov	r12, r1
     97c:	d1 2c       	mov	r13, r1
     97e:	e1 2c       	mov	r14, r1
     980:	f1 2c       	mov	r15, r1
     982:	00 e0       	ldi	r16, 0x00	; 0
     984:	10 e0       	ldi	r17, 0x00	; 0
     986:	22 2d       	mov	r18, r2
     988:	33 2d       	mov	r19, r3
     98a:	45 2d       	mov	r20, r5
     98c:	22 96       	adiw	r28, 0x02	; 2
     98e:	5f ad       	ldd	r21, Y+63	; 0x3f
     990:	22 97       	sbiw	r28, 0x02	; 2
     992:	68 2d       	mov	r22, r8
     994:	79 2d       	mov	r23, r9
     996:	23 96       	adiw	r28, 0x03	; 3
     998:	8f ad       	ldd	r24, Y+63	; 0x3f
     99a:	23 97       	sbiw	r28, 0x03	; 3
     99c:	24 96       	adiw	r28, 0x04	; 4
     99e:	9f ad       	ldd	r25, Y+63	; 0x3f
     9a0:	24 97       	sbiw	r28, 0x04	; 4
     9a2:	0e 94 35 0a 	call	0x146a	; 0x146a <__moddi3>
     9a6:	20 5d       	subi	r18, 0xD0	; 208
     9a8:	26 96       	adiw	r28, 0x06	; 6
     9aa:	ee ad       	ldd	r30, Y+62	; 0x3e
     9ac:	ff ad       	ldd	r31, Y+63	; 0x3f
     9ae:	26 97       	sbiw	r28, 0x06	; 6
     9b0:	20 83       	st	Z, r18
			num/=10;
     9b2:	22 2d       	mov	r18, r2
     9b4:	33 2d       	mov	r19, r3
     9b6:	45 2d       	mov	r20, r5
     9b8:	22 96       	adiw	r28, 0x02	; 2
     9ba:	5f ad       	ldd	r21, Y+63	; 0x3f
     9bc:	22 97       	sbiw	r28, 0x02	; 2
     9be:	68 2d       	mov	r22, r8
     9c0:	79 2d       	mov	r23, r9
     9c2:	23 96       	adiw	r28, 0x03	; 3
     9c4:	8f ad       	ldd	r24, Y+63	; 0x3f
     9c6:	23 97       	sbiw	r28, 0x03	; 3
     9c8:	24 96       	adiw	r28, 0x04	; 4
     9ca:	9f ad       	ldd	r25, Y+63	; 0x3f
     9cc:	24 97       	sbiw	r28, 0x04	; 4
     9ce:	0e 94 37 0a 	call	0x146e	; 0x146e <__divdi3>
     9d2:	22 2e       	mov	r2, r18
     9d4:	33 2e       	mov	r3, r19
     9d6:	54 2e       	mov	r5, r20
     9d8:	22 96       	adiw	r28, 0x02	; 2
     9da:	5f af       	std	Y+63, r21	; 0x3f
     9dc:	22 97       	sbiw	r28, 0x02	; 2
     9de:	86 2e       	mov	r8, r22
     9e0:	97 2e       	mov	r9, r23
     9e2:	23 96       	adiw	r28, 0x03	; 3
     9e4:	8f af       	std	Y+63, r24	; 0x3f
     9e6:	23 97       	sbiw	r28, 0x03	; 3
     9e8:	24 96       	adiw	r28, 0x04	; 4
     9ea:	9f af       	std	Y+63, r25	; 0x3f
     9ec:	24 97       	sbiw	r28, 0x04	; 4
			i--;
     9ee:	7a 94       	dec	r7
	{
		char str[64];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
		i=31;
		while (num)
     9f0:	a0 e0       	ldi	r26, 0x00	; 0
     9f2:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__cmpdi2_s8>
     9f6:	09 f0       	breq	.+2      	; 0x9fa <__stack+0xfb>
     9f8:	b1 cf       	rjmp	.-158    	; 0x95c <__stack+0x5d>
     9fa:	28 96       	adiw	r28, 0x08	; 8
     9fc:	4e ac       	ldd	r4, Y+62	; 0x3e
     9fe:	5f ac       	ldd	r5, Y+63	; 0x3f
     a00:	28 97       	sbiw	r28, 0x08	; 8
     a02:	2a 96       	adiw	r28, 0x0a	; 10
     a04:	6e ac       	ldd	r6, Y+62	; 0x3e
     a06:	7f ac       	ldd	r7, Y+63	; 0x3f
     a08:	2a 97       	sbiw	r28, 0x0a	; 10
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
		if (str[i]) Serial_Tx(str[i]);
     a0a:	f2 01       	movw	r30, r4
     a0c:	81 91       	ld	r24, Z+
     a0e:	2f 01       	movw	r4, r30
     a10:	81 11       	cpse	r24, r1
     a12:	0e 94 11 04 	call	0x822	; 0x822 <Serial_Tx>
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
     a16:	46 14       	cp	r4, r6
     a18:	57 04       	cpc	r5, r7
     a1a:	b9 f7       	brne	.-18     	; 0xa0a <__stack+0x10b>
     a1c:	0f c0       	rjmp	.+30     	; 0xa3c <__stack+0x13d>
	if(num<0)
	{
		Serial_Send_String("-");
		num=-num;
	}
	if(num==0){Serial_Tx('0');}
     a1e:	22 96       	adiw	r28, 0x02	; 2
     a20:	5f ad       	ldd	r21, Y+63	; 0x3f
     a22:	22 97       	sbiw	r28, 0x02	; 2
     a24:	23 96       	adiw	r28, 0x03	; 3
     a26:	8f ad       	ldd	r24, Y+63	; 0x3f
     a28:	23 97       	sbiw	r28, 0x03	; 3
     a2a:	24 96       	adiw	r28, 0x04	; 4
     a2c:	9f ad       	ldd	r25, Y+63	; 0x3f
     a2e:	24 97       	sbiw	r28, 0x04	; 4
     a30:	a0 e0       	ldi	r26, 0x00	; 0
     a32:	0e 94 0c 0b 	call	0x1618	; 0x1618 <__cmpdi2_s8>
     a36:	09 f0       	breq	.+2      	; 0xa3a <__stack+0x13b>
     a38:	76 cf       	rjmp	.-276    	; 0x926 <__stack+0x27>
     a3a:	71 cf       	rjmp	.-286    	; 0x91e <__stack+0x1f>
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
		if (str[i]) Serial_Tx(str[i]);
	}
}
     a3c:	c7 5b       	subi	r28, 0xB7	; 183
     a3e:	df 4f       	sbci	r29, 0xFF	; 255
     a40:	0f b6       	in	r0, 0x3f	; 63
     a42:	f8 94       	cli
     a44:	de bf       	out	0x3e, r29	; 62
     a46:	0f be       	out	0x3f, r0	; 63
     a48:	cd bf       	out	0x3d, r28	; 61
     a4a:	df 91       	pop	r29
     a4c:	cf 91       	pop	r28
     a4e:	1f 91       	pop	r17
     a50:	0f 91       	pop	r16
     a52:	ff 90       	pop	r15
     a54:	ef 90       	pop	r14
     a56:	df 90       	pop	r13
     a58:	cf 90       	pop	r12
     a5a:	bf 90       	pop	r11
     a5c:	af 90       	pop	r10
     a5e:	9f 90       	pop	r9
     a60:	8f 90       	pop	r8
     a62:	7f 90       	pop	r7
     a64:	6f 90       	pop	r6
     a66:	5f 90       	pop	r5
     a68:	4f 90       	pop	r4
     a6a:	3f 90       	pop	r3
     a6c:	2f 90       	pop	r2
     a6e:	08 95       	ret

00000a70 <SerialN>:
		Serial_Tx(string1[i]);
	}
}
void SerialN()
{
	Serial_Tx(13);
     a70:	8d e0       	ldi	r24, 0x0D	; 13
     a72:	0e 94 11 04 	call	0x822	; 0x822 <Serial_Tx>
	Serial_Tx(10);
     a76:	8a e0       	ldi	r24, 0x0A	; 10
     a78:	0e 94 11 04 	call	0x822	; 0x822 <Serial_Tx>
     a7c:	08 95       	ret

00000a7e <Serial_Send_Float>:
}
void Serial_Send_Float(double data)
{
     a7e:	4f 92       	push	r4
     a80:	5f 92       	push	r5
     a82:	6f 92       	push	r6
     a84:	7f 92       	push	r7
     a86:	8f 92       	push	r8
     a88:	9f 92       	push	r9
     a8a:	af 92       	push	r10
     a8c:	bf 92       	push	r11
     a8e:	cf 92       	push	r12
     a90:	df 92       	push	r13
     a92:	ef 92       	push	r14
     a94:	ff 92       	push	r15
     a96:	0f 93       	push	r16
     a98:	1f 93       	push	r17
     a9a:	cf 93       	push	r28
     a9c:	df 93       	push	r29
     a9e:	6b 01       	movw	r12, r22
     aa0:	7c 01       	movw	r14, r24
	if(data<0)
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	a9 01       	movw	r20, r18
     aa8:	0e 94 80 06 	call	0xd00	; 0xd00 <__cmpsf2>
     aac:	88 23       	and	r24, r24
     aae:	44 f4       	brge	.+16     	; 0xac0 <Serial_Send_Float+0x42>
	{
		Serial_Send_String("-");
     ab0:	85 e0       	ldi	r24, 0x05	; 5
     ab2:	91 e0       	ldi	r25, 0x01	; 1
     ab4:	0e 94 19 04 	call	0x832	; 0x832 <Serial_Send_String>
		data=-data;
     ab8:	f7 fa       	bst	r15, 7
     aba:	f0 94       	com	r15
     abc:	f7 f8       	bld	r15, 7
     abe:	f0 94       	com	r15
	}
	long var=data;
     ac0:	c7 01       	movw	r24, r14
     ac2:	b6 01       	movw	r22, r12
     ac4:	0e 94 f7 06 	call	0xdee	; 0xdee <__fixsfsi>
     ac8:	2b 01       	movw	r4, r22
     aca:	3c 01       	movw	r6, r24
	Serial_Send_Int(var);
     acc:	4b 01       	movw	r8, r22
     ace:	5c 01       	movw	r10, r24
     ad0:	bb 0c       	add	r11, r11
     ad2:	88 08       	sbc	r8, r8
     ad4:	98 2c       	mov	r9, r8
     ad6:	54 01       	movw	r10, r8
     ad8:	26 2f       	mov	r18, r22
     ada:	35 2d       	mov	r19, r5
     adc:	46 2d       	mov	r20, r6
     ade:	57 2d       	mov	r21, r7
     ae0:	68 2d       	mov	r22, r8
     ae2:	78 2d       	mov	r23, r8
     ae4:	88 2d       	mov	r24, r8
     ae6:	98 2d       	mov	r25, r8
     ae8:	0e 94 3b 04 	call	0x876	; 0x876 <Serial_Send_Int>
	int k=0,j=0;
     aec:	c0 e0       	ldi	r28, 0x00	; 0
     aee:	d0 e0       	ldi	r29, 0x00	; 0
	double Num=data;
	
	
	while (fmod(Num,1.00)!=0)
     af0:	0b c0       	rjmp	.+22     	; 0xb08 <Serial_Send_Float+0x8a>
	{
		Num*=10;
     af2:	20 e0       	ldi	r18, 0x00	; 0
     af4:	30 e0       	ldi	r19, 0x00	; 0
     af6:	40 e2       	ldi	r20, 0x20	; 32
     af8:	51 e4       	ldi	r21, 0x41	; 65
     afa:	c7 01       	movw	r24, r14
     afc:	b6 01       	movw	r22, r12
     afe:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
     b02:	6b 01       	movw	r12, r22
     b04:	7c 01       	movw	r14, r24
		k++;
     b06:	21 96       	adiw	r28, 0x01	; 1
	Serial_Send_Int(var);
	int k=0,j=0;
	double Num=data;
	
	
	while (fmod(Num,1.00)!=0)
     b08:	20 e0       	ldi	r18, 0x00	; 0
     b0a:	30 e0       	ldi	r19, 0x00	; 0
     b0c:	40 e8       	ldi	r20, 0x80	; 128
     b0e:	5f e3       	ldi	r21, 0x3F	; 63
     b10:	c7 01       	movw	r24, r14
     b12:	b6 01       	movw	r22, r12
     b14:	0e 94 75 07 	call	0xeea	; 0xeea <fmod>
     b18:	20 e0       	ldi	r18, 0x00	; 0
     b1a:	30 e0       	ldi	r19, 0x00	; 0
     b1c:	a9 01       	movw	r20, r18
     b1e:	0e 94 80 06 	call	0xd00	; 0xd00 <__cmpsf2>
     b22:	81 11       	cpse	r24, r1
     b24:	e6 cf       	rjmp	.-52     	; 0xaf2 <Serial_Send_Float+0x74>
		k++;
	}
	double data1=Num;

		
	var=var*pow(10,k);
     b26:	be 01       	movw	r22, r28
     b28:	0d 2e       	mov	r0, r29
     b2a:	00 0c       	add	r0, r0
     b2c:	88 0b       	sbc	r24, r24
     b2e:	99 0b       	sbc	r25, r25
     b30:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__floatsisf>
     b34:	9b 01       	movw	r18, r22
     b36:	ac 01       	movw	r20, r24
     b38:	60 e0       	ldi	r22, 0x00	; 0
     b3a:	70 e0       	ldi	r23, 0x00	; 0
     b3c:	80 e2       	ldi	r24, 0x20	; 32
     b3e:	91 e4       	ldi	r25, 0x41	; 65
     b40:	0e 94 b3 08 	call	0x1166	; 0x1166 <pow>
     b44:	4b 01       	movw	r8, r22
     b46:	5c 01       	movw	r10, r24
     b48:	c3 01       	movw	r24, r6
     b4a:	b2 01       	movw	r22, r4
     b4c:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__floatsisf>
     b50:	a5 01       	movw	r20, r10
     b52:	94 01       	movw	r18, r8
     b54:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>

	data1=data1-var;
     b58:	0e 94 f7 06 	call	0xdee	; 0xdee <__fixsfsi>
     b5c:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__floatsisf>
     b60:	9b 01       	movw	r18, r22
     b62:	ac 01       	movw	r20, r24
     b64:	c7 01       	movw	r24, r14
     b66:	b6 01       	movw	r22, r12
     b68:	0e 94 13 06 	call	0xc26	; 0xc26 <__subsf3>
     b6c:	6b 01       	movw	r12, r22
     b6e:	7c 01       	movw	r14, r24
	
	long NuM=data1;
     b70:	0e 94 f7 06 	call	0xdee	; 0xdee <__fixsfsi>
     b74:	4b 01       	movw	r8, r22
     b76:	5c 01       	movw	r10, r24
	while (data1>1){
     b78:	20 e0       	ldi	r18, 0x00	; 0
     b7a:	30 e0       	ldi	r19, 0x00	; 0
     b7c:	40 e8       	ldi	r20, 0x80	; 128
     b7e:	5f e3       	ldi	r21, 0x3F	; 63
     b80:	c7 01       	movw	r24, r14
     b82:	b6 01       	movw	r22, r12
     b84:	0e 94 41 08 	call	0x1082	; 0x1082 <__gesf2>
     b88:	18 16       	cp	r1, r24
     b8a:	bc f4       	brge	.+46     	; 0xbba <Serial_Send_Float+0x13c>
     b8c:	00 e0       	ldi	r16, 0x00	; 0
     b8e:	10 e0       	ldi	r17, 0x00	; 0
		data1/=10.00;
     b90:	20 e0       	ldi	r18, 0x00	; 0
     b92:	30 e0       	ldi	r19, 0x00	; 0
     b94:	40 e2       	ldi	r20, 0x20	; 32
     b96:	51 e4       	ldi	r21, 0x41	; 65
     b98:	c7 01       	movw	r24, r14
     b9a:	b6 01       	movw	r22, r12
     b9c:	0e 94 85 06 	call	0xd0a	; 0xd0a <__divsf3>
     ba0:	6b 01       	movw	r12, r22
     ba2:	7c 01       	movw	r14, r24
		j++;
     ba4:	0f 5f       	subi	r16, 0xFF	; 255
     ba6:	1f 4f       	sbci	r17, 0xFF	; 255
	var=var*pow(10,k);

	data1=data1-var;
	
	long NuM=data1;
	while (data1>1){
     ba8:	20 e0       	ldi	r18, 0x00	; 0
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	40 e8       	ldi	r20, 0x80	; 128
     bae:	5f e3       	ldi	r21, 0x3F	; 63
     bb0:	0e 94 41 08 	call	0x1082	; 0x1082 <__gesf2>
     bb4:	18 16       	cp	r1, r24
     bb6:	64 f3       	brlt	.-40     	; 0xb90 <Serial_Send_Float+0x112>
     bb8:	02 c0       	rjmp	.+4      	; 0xbbe <Serial_Send_Float+0x140>
		Serial_Send_String("-");
		data=-data;
	}
	long var=data;
	Serial_Send_Int(var);
	int k=0,j=0;
     bba:	00 e0       	ldi	r16, 0x00	; 0
     bbc:	10 e0       	ldi	r17, 0x00	; 0
	while (data1>1){
		data1/=10.00;
		j++;
		
	}
	int diff=k-j;
     bbe:	c0 1b       	sub	r28, r16
     bc0:	d1 0b       	sbc	r29, r17
	Serial_Send_String(".");
     bc2:	87 e0       	ldi	r24, 0x07	; 7
     bc4:	91 e0       	ldi	r25, 0x01	; 1
     bc6:	0e 94 19 04 	call	0x832	; 0x832 <Serial_Send_String>
	
	for(int i=0;i<diff;i++)Serial_Tx('0');
     bca:	1c 16       	cp	r1, r28
     bcc:	1d 06       	cpc	r1, r29
     bce:	54 f4       	brge	.+20     	; 0xbe4 <Serial_Send_Float+0x166>
     bd0:	00 e0       	ldi	r16, 0x00	; 0
     bd2:	10 e0       	ldi	r17, 0x00	; 0
     bd4:	80 e3       	ldi	r24, 0x30	; 48
     bd6:	0e 94 11 04 	call	0x822	; 0x822 <Serial_Tx>
     bda:	0f 5f       	subi	r16, 0xFF	; 255
     bdc:	1f 4f       	sbci	r17, 0xFF	; 255
     bde:	c0 17       	cp	r28, r16
     be0:	d1 07       	cpc	r29, r17
     be2:	c1 f7       	brne	.-16     	; 0xbd4 <Serial_Send_Float+0x156>
	Serial_Send_Int(NuM);
     be4:	75 01       	movw	r14, r10
     be6:	64 01       	movw	r12, r8
     be8:	ff 0c       	add	r15, r15
     bea:	cc 08       	sbc	r12, r12
     bec:	dc 2c       	mov	r13, r12
     bee:	76 01       	movw	r14, r12
     bf0:	28 2d       	mov	r18, r8
     bf2:	39 2d       	mov	r19, r9
     bf4:	4a 2d       	mov	r20, r10
     bf6:	5b 2d       	mov	r21, r11
     bf8:	6c 2d       	mov	r22, r12
     bfa:	7c 2d       	mov	r23, r12
     bfc:	8c 2d       	mov	r24, r12
     bfe:	9c 2d       	mov	r25, r12
     c00:	0e 94 3b 04 	call	0x876	; 0x876 <Serial_Send_Int>
}
     c04:	df 91       	pop	r29
     c06:	cf 91       	pop	r28
     c08:	1f 91       	pop	r17
     c0a:	0f 91       	pop	r16
     c0c:	ff 90       	pop	r15
     c0e:	ef 90       	pop	r14
     c10:	df 90       	pop	r13
     c12:	cf 90       	pop	r12
     c14:	bf 90       	pop	r11
     c16:	af 90       	pop	r10
     c18:	9f 90       	pop	r9
     c1a:	8f 90       	pop	r8
     c1c:	7f 90       	pop	r7
     c1e:	6f 90       	pop	r6
     c20:	5f 90       	pop	r5
     c22:	4f 90       	pop	r4
     c24:	08 95       	ret

00000c26 <__subsf3>:
     c26:	50 58       	subi	r21, 0x80	; 128

00000c28 <__addsf3>:
     c28:	bb 27       	eor	r27, r27
     c2a:	aa 27       	eor	r26, r26
     c2c:	0e 94 2b 06 	call	0xc56	; 0xc56 <__addsf3x>
     c30:	0c 94 07 08 	jmp	0x100e	; 0x100e <__fp_round>
     c34:	0e 94 f9 07 	call	0xff2	; 0xff2 <__fp_pscA>
     c38:	38 f0       	brcs	.+14     	; 0xc48 <__addsf3+0x20>
     c3a:	0e 94 00 08 	call	0x1000	; 0x1000 <__fp_pscB>
     c3e:	20 f0       	brcs	.+8      	; 0xc48 <__addsf3+0x20>
     c40:	39 f4       	brne	.+14     	; 0xc50 <__addsf3+0x28>
     c42:	9f 3f       	cpi	r25, 0xFF	; 255
     c44:	19 f4       	brne	.+6      	; 0xc4c <__addsf3+0x24>
     c46:	26 f4       	brtc	.+8      	; 0xc50 <__addsf3+0x28>
     c48:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__fp_nan>
     c4c:	0e f4       	brtc	.+2      	; 0xc50 <__addsf3+0x28>
     c4e:	e0 95       	com	r30
     c50:	e7 fb       	bst	r30, 7
     c52:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__fp_inf>

00000c56 <__addsf3x>:
     c56:	e9 2f       	mov	r30, r25
     c58:	0e 94 18 08 	call	0x1030	; 0x1030 <__fp_split3>
     c5c:	58 f3       	brcs	.-42     	; 0xc34 <__addsf3+0xc>
     c5e:	ba 17       	cp	r27, r26
     c60:	62 07       	cpc	r22, r18
     c62:	73 07       	cpc	r23, r19
     c64:	84 07       	cpc	r24, r20
     c66:	95 07       	cpc	r25, r21
     c68:	20 f0       	brcs	.+8      	; 0xc72 <__addsf3x+0x1c>
     c6a:	79 f4       	brne	.+30     	; 0xc8a <__addsf3x+0x34>
     c6c:	a6 f5       	brtc	.+104    	; 0xcd6 <__addsf3x+0x80>
     c6e:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__fp_zero>
     c72:	0e f4       	brtc	.+2      	; 0xc76 <__addsf3x+0x20>
     c74:	e0 95       	com	r30
     c76:	0b 2e       	mov	r0, r27
     c78:	ba 2f       	mov	r27, r26
     c7a:	a0 2d       	mov	r26, r0
     c7c:	0b 01       	movw	r0, r22
     c7e:	b9 01       	movw	r22, r18
     c80:	90 01       	movw	r18, r0
     c82:	0c 01       	movw	r0, r24
     c84:	ca 01       	movw	r24, r20
     c86:	a0 01       	movw	r20, r0
     c88:	11 24       	eor	r1, r1
     c8a:	ff 27       	eor	r31, r31
     c8c:	59 1b       	sub	r21, r25
     c8e:	99 f0       	breq	.+38     	; 0xcb6 <__addsf3x+0x60>
     c90:	59 3f       	cpi	r21, 0xF9	; 249
     c92:	50 f4       	brcc	.+20     	; 0xca8 <__addsf3x+0x52>
     c94:	50 3e       	cpi	r21, 0xE0	; 224
     c96:	68 f1       	brcs	.+90     	; 0xcf2 <__addsf3x+0x9c>
     c98:	1a 16       	cp	r1, r26
     c9a:	f0 40       	sbci	r31, 0x00	; 0
     c9c:	a2 2f       	mov	r26, r18
     c9e:	23 2f       	mov	r18, r19
     ca0:	34 2f       	mov	r19, r20
     ca2:	44 27       	eor	r20, r20
     ca4:	58 5f       	subi	r21, 0xF8	; 248
     ca6:	f3 cf       	rjmp	.-26     	; 0xc8e <__addsf3x+0x38>
     ca8:	46 95       	lsr	r20
     caa:	37 95       	ror	r19
     cac:	27 95       	ror	r18
     cae:	a7 95       	ror	r26
     cb0:	f0 40       	sbci	r31, 0x00	; 0
     cb2:	53 95       	inc	r21
     cb4:	c9 f7       	brne	.-14     	; 0xca8 <__addsf3x+0x52>
     cb6:	7e f4       	brtc	.+30     	; 0xcd6 <__addsf3x+0x80>
     cb8:	1f 16       	cp	r1, r31
     cba:	ba 0b       	sbc	r27, r26
     cbc:	62 0b       	sbc	r22, r18
     cbe:	73 0b       	sbc	r23, r19
     cc0:	84 0b       	sbc	r24, r20
     cc2:	ba f0       	brmi	.+46     	; 0xcf2 <__addsf3x+0x9c>
     cc4:	91 50       	subi	r25, 0x01	; 1
     cc6:	a1 f0       	breq	.+40     	; 0xcf0 <__addsf3x+0x9a>
     cc8:	ff 0f       	add	r31, r31
     cca:	bb 1f       	adc	r27, r27
     ccc:	66 1f       	adc	r22, r22
     cce:	77 1f       	adc	r23, r23
     cd0:	88 1f       	adc	r24, r24
     cd2:	c2 f7       	brpl	.-16     	; 0xcc4 <__addsf3x+0x6e>
     cd4:	0e c0       	rjmp	.+28     	; 0xcf2 <__addsf3x+0x9c>
     cd6:	ba 0f       	add	r27, r26
     cd8:	62 1f       	adc	r22, r18
     cda:	73 1f       	adc	r23, r19
     cdc:	84 1f       	adc	r24, r20
     cde:	48 f4       	brcc	.+18     	; 0xcf2 <__addsf3x+0x9c>
     ce0:	87 95       	ror	r24
     ce2:	77 95       	ror	r23
     ce4:	67 95       	ror	r22
     ce6:	b7 95       	ror	r27
     ce8:	f7 95       	ror	r31
     cea:	9e 3f       	cpi	r25, 0xFE	; 254
     cec:	08 f0       	brcs	.+2      	; 0xcf0 <__addsf3x+0x9a>
     cee:	b0 cf       	rjmp	.-160    	; 0xc50 <__addsf3+0x28>
     cf0:	93 95       	inc	r25
     cf2:	88 0f       	add	r24, r24
     cf4:	08 f0       	brcs	.+2      	; 0xcf8 <__addsf3x+0xa2>
     cf6:	99 27       	eor	r25, r25
     cf8:	ee 0f       	add	r30, r30
     cfa:	97 95       	ror	r25
     cfc:	87 95       	ror	r24
     cfe:	08 95       	ret

00000d00 <__cmpsf2>:
     d00:	0e 94 be 07 	call	0xf7c	; 0xf7c <__fp_cmp>
     d04:	08 f4       	brcc	.+2      	; 0xd08 <__cmpsf2+0x8>
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	08 95       	ret

00000d0a <__divsf3>:
     d0a:	0e 94 99 06 	call	0xd32	; 0xd32 <__divsf3x>
     d0e:	0c 94 07 08 	jmp	0x100e	; 0x100e <__fp_round>
     d12:	0e 94 00 08 	call	0x1000	; 0x1000 <__fp_pscB>
     d16:	58 f0       	brcs	.+22     	; 0xd2e <__divsf3+0x24>
     d18:	0e 94 f9 07 	call	0xff2	; 0xff2 <__fp_pscA>
     d1c:	40 f0       	brcs	.+16     	; 0xd2e <__divsf3+0x24>
     d1e:	29 f4       	brne	.+10     	; 0xd2a <__divsf3+0x20>
     d20:	5f 3f       	cpi	r21, 0xFF	; 255
     d22:	29 f0       	breq	.+10     	; 0xd2e <__divsf3+0x24>
     d24:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__fp_inf>
     d28:	51 11       	cpse	r21, r1
     d2a:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__fp_szero>
     d2e:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__fp_nan>

00000d32 <__divsf3x>:
     d32:	0e 94 18 08 	call	0x1030	; 0x1030 <__fp_split3>
     d36:	68 f3       	brcs	.-38     	; 0xd12 <__divsf3+0x8>

00000d38 <__divsf3_pse>:
     d38:	99 23       	and	r25, r25
     d3a:	b1 f3       	breq	.-20     	; 0xd28 <__divsf3+0x1e>
     d3c:	55 23       	and	r21, r21
     d3e:	91 f3       	breq	.-28     	; 0xd24 <__divsf3+0x1a>
     d40:	95 1b       	sub	r25, r21
     d42:	55 0b       	sbc	r21, r21
     d44:	bb 27       	eor	r27, r27
     d46:	aa 27       	eor	r26, r26
     d48:	62 17       	cp	r22, r18
     d4a:	73 07       	cpc	r23, r19
     d4c:	84 07       	cpc	r24, r20
     d4e:	38 f0       	brcs	.+14     	; 0xd5e <__divsf3_pse+0x26>
     d50:	9f 5f       	subi	r25, 0xFF	; 255
     d52:	5f 4f       	sbci	r21, 0xFF	; 255
     d54:	22 0f       	add	r18, r18
     d56:	33 1f       	adc	r19, r19
     d58:	44 1f       	adc	r20, r20
     d5a:	aa 1f       	adc	r26, r26
     d5c:	a9 f3       	breq	.-22     	; 0xd48 <__divsf3_pse+0x10>
     d5e:	35 d0       	rcall	.+106    	; 0xdca <__divsf3_pse+0x92>
     d60:	0e 2e       	mov	r0, r30
     d62:	3a f0       	brmi	.+14     	; 0xd72 <__divsf3_pse+0x3a>
     d64:	e0 e8       	ldi	r30, 0x80	; 128
     d66:	32 d0       	rcall	.+100    	; 0xdcc <__divsf3_pse+0x94>
     d68:	91 50       	subi	r25, 0x01	; 1
     d6a:	50 40       	sbci	r21, 0x00	; 0
     d6c:	e6 95       	lsr	r30
     d6e:	00 1c       	adc	r0, r0
     d70:	ca f7       	brpl	.-14     	; 0xd64 <__divsf3_pse+0x2c>
     d72:	2b d0       	rcall	.+86     	; 0xdca <__divsf3_pse+0x92>
     d74:	fe 2f       	mov	r31, r30
     d76:	29 d0       	rcall	.+82     	; 0xdca <__divsf3_pse+0x92>
     d78:	66 0f       	add	r22, r22
     d7a:	77 1f       	adc	r23, r23
     d7c:	88 1f       	adc	r24, r24
     d7e:	bb 1f       	adc	r27, r27
     d80:	26 17       	cp	r18, r22
     d82:	37 07       	cpc	r19, r23
     d84:	48 07       	cpc	r20, r24
     d86:	ab 07       	cpc	r26, r27
     d88:	b0 e8       	ldi	r27, 0x80	; 128
     d8a:	09 f0       	breq	.+2      	; 0xd8e <__divsf3_pse+0x56>
     d8c:	bb 0b       	sbc	r27, r27
     d8e:	80 2d       	mov	r24, r0
     d90:	bf 01       	movw	r22, r30
     d92:	ff 27       	eor	r31, r31
     d94:	93 58       	subi	r25, 0x83	; 131
     d96:	5f 4f       	sbci	r21, 0xFF	; 255
     d98:	3a f0       	brmi	.+14     	; 0xda8 <__divsf3_pse+0x70>
     d9a:	9e 3f       	cpi	r25, 0xFE	; 254
     d9c:	51 05       	cpc	r21, r1
     d9e:	78 f0       	brcs	.+30     	; 0xdbe <__divsf3_pse+0x86>
     da0:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__fp_inf>
     da4:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__fp_szero>
     da8:	5f 3f       	cpi	r21, 0xFF	; 255
     daa:	e4 f3       	brlt	.-8      	; 0xda4 <__divsf3_pse+0x6c>
     dac:	98 3e       	cpi	r25, 0xE8	; 232
     dae:	d4 f3       	brlt	.-12     	; 0xda4 <__divsf3_pse+0x6c>
     db0:	86 95       	lsr	r24
     db2:	77 95       	ror	r23
     db4:	67 95       	ror	r22
     db6:	b7 95       	ror	r27
     db8:	f7 95       	ror	r31
     dba:	9f 5f       	subi	r25, 0xFF	; 255
     dbc:	c9 f7       	brne	.-14     	; 0xdb0 <__divsf3_pse+0x78>
     dbe:	88 0f       	add	r24, r24
     dc0:	91 1d       	adc	r25, r1
     dc2:	96 95       	lsr	r25
     dc4:	87 95       	ror	r24
     dc6:	97 f9       	bld	r25, 7
     dc8:	08 95       	ret
     dca:	e1 e0       	ldi	r30, 0x01	; 1
     dcc:	66 0f       	add	r22, r22
     dce:	77 1f       	adc	r23, r23
     dd0:	88 1f       	adc	r24, r24
     dd2:	bb 1f       	adc	r27, r27
     dd4:	62 17       	cp	r22, r18
     dd6:	73 07       	cpc	r23, r19
     dd8:	84 07       	cpc	r24, r20
     dda:	ba 07       	cpc	r27, r26
     ddc:	20 f0       	brcs	.+8      	; 0xde6 <__divsf3_pse+0xae>
     dde:	62 1b       	sub	r22, r18
     de0:	73 0b       	sbc	r23, r19
     de2:	84 0b       	sbc	r24, r20
     de4:	ba 0b       	sbc	r27, r26
     de6:	ee 1f       	adc	r30, r30
     de8:	88 f7       	brcc	.-30     	; 0xdcc <__divsf3_pse+0x94>
     dea:	e0 95       	com	r30
     dec:	08 95       	ret

00000dee <__fixsfsi>:
     dee:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__fixunssfsi>
     df2:	68 94       	set
     df4:	b1 11       	cpse	r27, r1
     df6:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__fp_szero>
     dfa:	08 95       	ret

00000dfc <__fixunssfsi>:
     dfc:	0e 94 20 08 	call	0x1040	; 0x1040 <__fp_splitA>
     e00:	88 f0       	brcs	.+34     	; 0xe24 <__fixunssfsi+0x28>
     e02:	9f 57       	subi	r25, 0x7F	; 127
     e04:	98 f0       	brcs	.+38     	; 0xe2c <__fixunssfsi+0x30>
     e06:	b9 2f       	mov	r27, r25
     e08:	99 27       	eor	r25, r25
     e0a:	b7 51       	subi	r27, 0x17	; 23
     e0c:	b0 f0       	brcs	.+44     	; 0xe3a <__fixunssfsi+0x3e>
     e0e:	e1 f0       	breq	.+56     	; 0xe48 <__fixunssfsi+0x4c>
     e10:	66 0f       	add	r22, r22
     e12:	77 1f       	adc	r23, r23
     e14:	88 1f       	adc	r24, r24
     e16:	99 1f       	adc	r25, r25
     e18:	1a f0       	brmi	.+6      	; 0xe20 <__fixunssfsi+0x24>
     e1a:	ba 95       	dec	r27
     e1c:	c9 f7       	brne	.-14     	; 0xe10 <__fixunssfsi+0x14>
     e1e:	14 c0       	rjmp	.+40     	; 0xe48 <__fixunssfsi+0x4c>
     e20:	b1 30       	cpi	r27, 0x01	; 1
     e22:	91 f0       	breq	.+36     	; 0xe48 <__fixunssfsi+0x4c>
     e24:	0e 94 3a 08 	call	0x1074	; 0x1074 <__fp_zero>
     e28:	b1 e0       	ldi	r27, 0x01	; 1
     e2a:	08 95       	ret
     e2c:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__fp_zero>
     e30:	67 2f       	mov	r22, r23
     e32:	78 2f       	mov	r23, r24
     e34:	88 27       	eor	r24, r24
     e36:	b8 5f       	subi	r27, 0xF8	; 248
     e38:	39 f0       	breq	.+14     	; 0xe48 <__fixunssfsi+0x4c>
     e3a:	b9 3f       	cpi	r27, 0xF9	; 249
     e3c:	cc f3       	brlt	.-14     	; 0xe30 <__fixunssfsi+0x34>
     e3e:	86 95       	lsr	r24
     e40:	77 95       	ror	r23
     e42:	67 95       	ror	r22
     e44:	b3 95       	inc	r27
     e46:	d9 f7       	brne	.-10     	; 0xe3e <__fixunssfsi+0x42>
     e48:	3e f4       	brtc	.+14     	; 0xe58 <__fixunssfsi+0x5c>
     e4a:	90 95       	com	r25
     e4c:	80 95       	com	r24
     e4e:	70 95       	com	r23
     e50:	61 95       	neg	r22
     e52:	7f 4f       	sbci	r23, 0xFF	; 255
     e54:	8f 4f       	sbci	r24, 0xFF	; 255
     e56:	9f 4f       	sbci	r25, 0xFF	; 255
     e58:	08 95       	ret

00000e5a <__floatunsisf>:
     e5a:	e8 94       	clt
     e5c:	09 c0       	rjmp	.+18     	; 0xe70 <__floatsisf+0x12>

00000e5e <__floatsisf>:
     e5e:	97 fb       	bst	r25, 7
     e60:	3e f4       	brtc	.+14     	; 0xe70 <__floatsisf+0x12>
     e62:	90 95       	com	r25
     e64:	80 95       	com	r24
     e66:	70 95       	com	r23
     e68:	61 95       	neg	r22
     e6a:	7f 4f       	sbci	r23, 0xFF	; 255
     e6c:	8f 4f       	sbci	r24, 0xFF	; 255
     e6e:	9f 4f       	sbci	r25, 0xFF	; 255
     e70:	99 23       	and	r25, r25
     e72:	a9 f0       	breq	.+42     	; 0xe9e <__floatsisf+0x40>
     e74:	f9 2f       	mov	r31, r25
     e76:	96 e9       	ldi	r25, 0x96	; 150
     e78:	bb 27       	eor	r27, r27
     e7a:	93 95       	inc	r25
     e7c:	f6 95       	lsr	r31
     e7e:	87 95       	ror	r24
     e80:	77 95       	ror	r23
     e82:	67 95       	ror	r22
     e84:	b7 95       	ror	r27
     e86:	f1 11       	cpse	r31, r1
     e88:	f8 cf       	rjmp	.-16     	; 0xe7a <__floatsisf+0x1c>
     e8a:	fa f4       	brpl	.+62     	; 0xeca <__floatsisf+0x6c>
     e8c:	bb 0f       	add	r27, r27
     e8e:	11 f4       	brne	.+4      	; 0xe94 <__floatsisf+0x36>
     e90:	60 ff       	sbrs	r22, 0
     e92:	1b c0       	rjmp	.+54     	; 0xeca <__floatsisf+0x6c>
     e94:	6f 5f       	subi	r22, 0xFF	; 255
     e96:	7f 4f       	sbci	r23, 0xFF	; 255
     e98:	8f 4f       	sbci	r24, 0xFF	; 255
     e9a:	9f 4f       	sbci	r25, 0xFF	; 255
     e9c:	16 c0       	rjmp	.+44     	; 0xeca <__floatsisf+0x6c>
     e9e:	88 23       	and	r24, r24
     ea0:	11 f0       	breq	.+4      	; 0xea6 <__floatsisf+0x48>
     ea2:	96 e9       	ldi	r25, 0x96	; 150
     ea4:	11 c0       	rjmp	.+34     	; 0xec8 <__floatsisf+0x6a>
     ea6:	77 23       	and	r23, r23
     ea8:	21 f0       	breq	.+8      	; 0xeb2 <__floatsisf+0x54>
     eaa:	9e e8       	ldi	r25, 0x8E	; 142
     eac:	87 2f       	mov	r24, r23
     eae:	76 2f       	mov	r23, r22
     eb0:	05 c0       	rjmp	.+10     	; 0xebc <__floatsisf+0x5e>
     eb2:	66 23       	and	r22, r22
     eb4:	71 f0       	breq	.+28     	; 0xed2 <__floatsisf+0x74>
     eb6:	96 e8       	ldi	r25, 0x86	; 134
     eb8:	86 2f       	mov	r24, r22
     eba:	70 e0       	ldi	r23, 0x00	; 0
     ebc:	60 e0       	ldi	r22, 0x00	; 0
     ebe:	2a f0       	brmi	.+10     	; 0xeca <__floatsisf+0x6c>
     ec0:	9a 95       	dec	r25
     ec2:	66 0f       	add	r22, r22
     ec4:	77 1f       	adc	r23, r23
     ec6:	88 1f       	adc	r24, r24
     ec8:	da f7       	brpl	.-10     	; 0xec0 <__floatsisf+0x62>
     eca:	88 0f       	add	r24, r24
     ecc:	96 95       	lsr	r25
     ece:	87 95       	ror	r24
     ed0:	97 f9       	bld	r25, 7
     ed2:	08 95       	ret
     ed4:	0e 94 f9 07 	call	0xff2	; 0xff2 <__fp_pscA>
     ed8:	20 f0       	brcs	.+8      	; 0xee2 <__floatsisf+0x84>
     eda:	19 f0       	breq	.+6      	; 0xee2 <__floatsisf+0x84>
     edc:	0e 94 00 08 	call	0x1000	; 0x1000 <__fp_pscB>
     ee0:	50 f4       	brcc	.+20     	; 0xef6 <fmod+0xc>
     ee2:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__fp_nan>
     ee6:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__fp_szero>

00000eea <fmod>:
     eea:	e9 2f       	mov	r30, r25
     eec:	0e 94 18 08 	call	0x1030	; 0x1030 <__fp_split3>
     ef0:	88 f3       	brcs	.-30     	; 0xed4 <__floatsisf+0x76>
     ef2:	55 23       	and	r21, r21
     ef4:	b1 f3       	breq	.-20     	; 0xee2 <__floatsisf+0x84>
     ef6:	e7 fb       	bst	r30, 7
     ef8:	62 17       	cp	r22, r18
     efa:	73 07       	cpc	r23, r19
     efc:	84 07       	cpc	r24, r20
     efe:	95 07       	cpc	r25, r21
     f00:	a8 f1       	brcs	.+106    	; 0xf6c <fmod+0x82>
     f02:	89 f3       	breq	.-30     	; 0xee6 <__floatsisf+0x88>
     f04:	e9 2f       	mov	r30, r25
     f06:	ff 27       	eor	r31, r31
     f08:	88 23       	and	r24, r24
     f0a:	2a f0       	brmi	.+10     	; 0xf16 <fmod+0x2c>
     f0c:	31 97       	sbiw	r30, 0x01	; 1
     f0e:	66 0f       	add	r22, r22
     f10:	77 1f       	adc	r23, r23
     f12:	88 1f       	adc	r24, r24
     f14:	da f7       	brpl	.-10     	; 0xf0c <fmod+0x22>
     f16:	95 2f       	mov	r25, r21
     f18:	55 27       	eor	r21, r21
     f1a:	44 23       	and	r20, r20
     f1c:	32 f0       	brmi	.+12     	; 0xf2a <fmod+0x40>
     f1e:	91 50       	subi	r25, 0x01	; 1
     f20:	50 40       	sbci	r21, 0x00	; 0
     f22:	22 0f       	add	r18, r18
     f24:	33 1f       	adc	r19, r19
     f26:	44 1f       	adc	r20, r20
     f28:	d2 f7       	brpl	.-12     	; 0xf1e <fmod+0x34>
     f2a:	bb 27       	eor	r27, r27
     f2c:	e9 1b       	sub	r30, r25
     f2e:	f5 0b       	sbc	r31, r21
     f30:	62 1b       	sub	r22, r18
     f32:	73 0b       	sbc	r23, r19
     f34:	84 0b       	sbc	r24, r20
     f36:	b1 09       	sbc	r27, r1
     f38:	b1 f2       	breq	.-84     	; 0xee6 <__floatsisf+0x88>
     f3a:	22 f4       	brpl	.+8      	; 0xf44 <fmod+0x5a>
     f3c:	62 0f       	add	r22, r18
     f3e:	73 1f       	adc	r23, r19
     f40:	84 1f       	adc	r24, r20
     f42:	b1 1d       	adc	r27, r1
     f44:	31 97       	sbiw	r30, 0x01	; 1
     f46:	2a f0       	brmi	.+10     	; 0xf52 <fmod+0x68>
     f48:	66 0f       	add	r22, r22
     f4a:	77 1f       	adc	r23, r23
     f4c:	88 1f       	adc	r24, r24
     f4e:	bb 1f       	adc	r27, r27
     f50:	ef cf       	rjmp	.-34     	; 0xf30 <fmod+0x46>
     f52:	91 50       	subi	r25, 0x01	; 1
     f54:	50 40       	sbci	r21, 0x00	; 0
     f56:	62 f0       	brmi	.+24     	; 0xf70 <fmod+0x86>
     f58:	41 f0       	breq	.+16     	; 0xf6a <fmod+0x80>
     f5a:	88 23       	and	r24, r24
     f5c:	32 f0       	brmi	.+12     	; 0xf6a <fmod+0x80>
     f5e:	66 0f       	add	r22, r22
     f60:	77 1f       	adc	r23, r23
     f62:	88 1f       	adc	r24, r24
     f64:	91 50       	subi	r25, 0x01	; 1
     f66:	50 40       	sbci	r21, 0x00	; 0
     f68:	c1 f7       	brne	.-16     	; 0xf5a <fmod+0x70>
     f6a:	93 95       	inc	r25
     f6c:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <__fp_mpack>
     f70:	86 95       	lsr	r24
     f72:	77 95       	ror	r23
     f74:	67 95       	ror	r22
     f76:	9f 5f       	subi	r25, 0xFF	; 255
     f78:	d9 f7       	brne	.-10     	; 0xf70 <fmod+0x86>
     f7a:	f7 cf       	rjmp	.-18     	; 0xf6a <fmod+0x80>

00000f7c <__fp_cmp>:
     f7c:	99 0f       	add	r25, r25
     f7e:	00 08       	sbc	r0, r0
     f80:	55 0f       	add	r21, r21
     f82:	aa 0b       	sbc	r26, r26
     f84:	e0 e8       	ldi	r30, 0x80	; 128
     f86:	fe ef       	ldi	r31, 0xFE	; 254
     f88:	16 16       	cp	r1, r22
     f8a:	17 06       	cpc	r1, r23
     f8c:	e8 07       	cpc	r30, r24
     f8e:	f9 07       	cpc	r31, r25
     f90:	c0 f0       	brcs	.+48     	; 0xfc2 <__fp_cmp+0x46>
     f92:	12 16       	cp	r1, r18
     f94:	13 06       	cpc	r1, r19
     f96:	e4 07       	cpc	r30, r20
     f98:	f5 07       	cpc	r31, r21
     f9a:	98 f0       	brcs	.+38     	; 0xfc2 <__fp_cmp+0x46>
     f9c:	62 1b       	sub	r22, r18
     f9e:	73 0b       	sbc	r23, r19
     fa0:	84 0b       	sbc	r24, r20
     fa2:	95 0b       	sbc	r25, r21
     fa4:	39 f4       	brne	.+14     	; 0xfb4 <__fp_cmp+0x38>
     fa6:	0a 26       	eor	r0, r26
     fa8:	61 f0       	breq	.+24     	; 0xfc2 <__fp_cmp+0x46>
     faa:	23 2b       	or	r18, r19
     fac:	24 2b       	or	r18, r20
     fae:	25 2b       	or	r18, r21
     fb0:	21 f4       	brne	.+8      	; 0xfba <__fp_cmp+0x3e>
     fb2:	08 95       	ret
     fb4:	0a 26       	eor	r0, r26
     fb6:	09 f4       	brne	.+2      	; 0xfba <__fp_cmp+0x3e>
     fb8:	a1 40       	sbci	r26, 0x01	; 1
     fba:	a6 95       	lsr	r26
     fbc:	8f ef       	ldi	r24, 0xFF	; 255
     fbe:	81 1d       	adc	r24, r1
     fc0:	81 1d       	adc	r24, r1
     fc2:	08 95       	ret

00000fc4 <__fp_inf>:
     fc4:	97 f9       	bld	r25, 7
     fc6:	9f 67       	ori	r25, 0x7F	; 127
     fc8:	80 e8       	ldi	r24, 0x80	; 128
     fca:	70 e0       	ldi	r23, 0x00	; 0
     fcc:	60 e0       	ldi	r22, 0x00	; 0
     fce:	08 95       	ret

00000fd0 <__fp_mpack>:
     fd0:	9f 3f       	cpi	r25, 0xFF	; 255
     fd2:	31 f0       	breq	.+12     	; 0xfe0 <__fp_mpack_finite+0xc>

00000fd4 <__fp_mpack_finite>:
     fd4:	91 50       	subi	r25, 0x01	; 1
     fd6:	20 f4       	brcc	.+8      	; 0xfe0 <__fp_mpack_finite+0xc>
     fd8:	87 95       	ror	r24
     fda:	77 95       	ror	r23
     fdc:	67 95       	ror	r22
     fde:	b7 95       	ror	r27
     fe0:	88 0f       	add	r24, r24
     fe2:	91 1d       	adc	r25, r1
     fe4:	96 95       	lsr	r25
     fe6:	87 95       	ror	r24
     fe8:	97 f9       	bld	r25, 7
     fea:	08 95       	ret

00000fec <__fp_nan>:
     fec:	9f ef       	ldi	r25, 0xFF	; 255
     fee:	80 ec       	ldi	r24, 0xC0	; 192
     ff0:	08 95       	ret

00000ff2 <__fp_pscA>:
     ff2:	00 24       	eor	r0, r0
     ff4:	0a 94       	dec	r0
     ff6:	16 16       	cp	r1, r22
     ff8:	17 06       	cpc	r1, r23
     ffa:	18 06       	cpc	r1, r24
     ffc:	09 06       	cpc	r0, r25
     ffe:	08 95       	ret

00001000 <__fp_pscB>:
    1000:	00 24       	eor	r0, r0
    1002:	0a 94       	dec	r0
    1004:	12 16       	cp	r1, r18
    1006:	13 06       	cpc	r1, r19
    1008:	14 06       	cpc	r1, r20
    100a:	05 06       	cpc	r0, r21
    100c:	08 95       	ret

0000100e <__fp_round>:
    100e:	09 2e       	mov	r0, r25
    1010:	03 94       	inc	r0
    1012:	00 0c       	add	r0, r0
    1014:	11 f4       	brne	.+4      	; 0x101a <__fp_round+0xc>
    1016:	88 23       	and	r24, r24
    1018:	52 f0       	brmi	.+20     	; 0x102e <__fp_round+0x20>
    101a:	bb 0f       	add	r27, r27
    101c:	40 f4       	brcc	.+16     	; 0x102e <__fp_round+0x20>
    101e:	bf 2b       	or	r27, r31
    1020:	11 f4       	brne	.+4      	; 0x1026 <__fp_round+0x18>
    1022:	60 ff       	sbrs	r22, 0
    1024:	04 c0       	rjmp	.+8      	; 0x102e <__fp_round+0x20>
    1026:	6f 5f       	subi	r22, 0xFF	; 255
    1028:	7f 4f       	sbci	r23, 0xFF	; 255
    102a:	8f 4f       	sbci	r24, 0xFF	; 255
    102c:	9f 4f       	sbci	r25, 0xFF	; 255
    102e:	08 95       	ret

00001030 <__fp_split3>:
    1030:	57 fd       	sbrc	r21, 7
    1032:	90 58       	subi	r25, 0x80	; 128
    1034:	44 0f       	add	r20, r20
    1036:	55 1f       	adc	r21, r21
    1038:	59 f0       	breq	.+22     	; 0x1050 <__fp_splitA+0x10>
    103a:	5f 3f       	cpi	r21, 0xFF	; 255
    103c:	71 f0       	breq	.+28     	; 0x105a <__fp_splitA+0x1a>
    103e:	47 95       	ror	r20

00001040 <__fp_splitA>:
    1040:	88 0f       	add	r24, r24
    1042:	97 fb       	bst	r25, 7
    1044:	99 1f       	adc	r25, r25
    1046:	61 f0       	breq	.+24     	; 0x1060 <__fp_splitA+0x20>
    1048:	9f 3f       	cpi	r25, 0xFF	; 255
    104a:	79 f0       	breq	.+30     	; 0x106a <__fp_splitA+0x2a>
    104c:	87 95       	ror	r24
    104e:	08 95       	ret
    1050:	12 16       	cp	r1, r18
    1052:	13 06       	cpc	r1, r19
    1054:	14 06       	cpc	r1, r20
    1056:	55 1f       	adc	r21, r21
    1058:	f2 cf       	rjmp	.-28     	; 0x103e <__fp_split3+0xe>
    105a:	46 95       	lsr	r20
    105c:	f1 df       	rcall	.-30     	; 0x1040 <__fp_splitA>
    105e:	08 c0       	rjmp	.+16     	; 0x1070 <__fp_splitA+0x30>
    1060:	16 16       	cp	r1, r22
    1062:	17 06       	cpc	r1, r23
    1064:	18 06       	cpc	r1, r24
    1066:	99 1f       	adc	r25, r25
    1068:	f1 cf       	rjmp	.-30     	; 0x104c <__fp_splitA+0xc>
    106a:	86 95       	lsr	r24
    106c:	71 05       	cpc	r23, r1
    106e:	61 05       	cpc	r22, r1
    1070:	08 94       	sec
    1072:	08 95       	ret

00001074 <__fp_zero>:
    1074:	e8 94       	clt

00001076 <__fp_szero>:
    1076:	bb 27       	eor	r27, r27
    1078:	66 27       	eor	r22, r22
    107a:	77 27       	eor	r23, r23
    107c:	cb 01       	movw	r24, r22
    107e:	97 f9       	bld	r25, 7
    1080:	08 95       	ret

00001082 <__gesf2>:
    1082:	0e 94 be 07 	call	0xf7c	; 0xf7c <__fp_cmp>
    1086:	08 f4       	brcc	.+2      	; 0x108a <__gesf2+0x8>
    1088:	8f ef       	ldi	r24, 0xFF	; 255
    108a:	08 95       	ret

0000108c <__mulsf3>:
    108c:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__mulsf3x>
    1090:	0c 94 07 08 	jmp	0x100e	; 0x100e <__fp_round>
    1094:	0e 94 f9 07 	call	0xff2	; 0xff2 <__fp_pscA>
    1098:	38 f0       	brcs	.+14     	; 0x10a8 <__mulsf3+0x1c>
    109a:	0e 94 00 08 	call	0x1000	; 0x1000 <__fp_pscB>
    109e:	20 f0       	brcs	.+8      	; 0x10a8 <__mulsf3+0x1c>
    10a0:	95 23       	and	r25, r21
    10a2:	11 f0       	breq	.+4      	; 0x10a8 <__mulsf3+0x1c>
    10a4:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__fp_inf>
    10a8:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__fp_nan>
    10ac:	11 24       	eor	r1, r1
    10ae:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__fp_szero>

000010b2 <__mulsf3x>:
    10b2:	0e 94 18 08 	call	0x1030	; 0x1030 <__fp_split3>
    10b6:	70 f3       	brcs	.-36     	; 0x1094 <__mulsf3+0x8>

000010b8 <__mulsf3_pse>:
    10b8:	95 9f       	mul	r25, r21
    10ba:	c1 f3       	breq	.-16     	; 0x10ac <__mulsf3+0x20>
    10bc:	95 0f       	add	r25, r21
    10be:	50 e0       	ldi	r21, 0x00	; 0
    10c0:	55 1f       	adc	r21, r21
    10c2:	62 9f       	mul	r22, r18
    10c4:	f0 01       	movw	r30, r0
    10c6:	72 9f       	mul	r23, r18
    10c8:	bb 27       	eor	r27, r27
    10ca:	f0 0d       	add	r31, r0
    10cc:	b1 1d       	adc	r27, r1
    10ce:	63 9f       	mul	r22, r19
    10d0:	aa 27       	eor	r26, r26
    10d2:	f0 0d       	add	r31, r0
    10d4:	b1 1d       	adc	r27, r1
    10d6:	aa 1f       	adc	r26, r26
    10d8:	64 9f       	mul	r22, r20
    10da:	66 27       	eor	r22, r22
    10dc:	b0 0d       	add	r27, r0
    10de:	a1 1d       	adc	r26, r1
    10e0:	66 1f       	adc	r22, r22
    10e2:	82 9f       	mul	r24, r18
    10e4:	22 27       	eor	r18, r18
    10e6:	b0 0d       	add	r27, r0
    10e8:	a1 1d       	adc	r26, r1
    10ea:	62 1f       	adc	r22, r18
    10ec:	73 9f       	mul	r23, r19
    10ee:	b0 0d       	add	r27, r0
    10f0:	a1 1d       	adc	r26, r1
    10f2:	62 1f       	adc	r22, r18
    10f4:	83 9f       	mul	r24, r19
    10f6:	a0 0d       	add	r26, r0
    10f8:	61 1d       	adc	r22, r1
    10fa:	22 1f       	adc	r18, r18
    10fc:	74 9f       	mul	r23, r20
    10fe:	33 27       	eor	r19, r19
    1100:	a0 0d       	add	r26, r0
    1102:	61 1d       	adc	r22, r1
    1104:	23 1f       	adc	r18, r19
    1106:	84 9f       	mul	r24, r20
    1108:	60 0d       	add	r22, r0
    110a:	21 1d       	adc	r18, r1
    110c:	82 2f       	mov	r24, r18
    110e:	76 2f       	mov	r23, r22
    1110:	6a 2f       	mov	r22, r26
    1112:	11 24       	eor	r1, r1
    1114:	9f 57       	subi	r25, 0x7F	; 127
    1116:	50 40       	sbci	r21, 0x00	; 0
    1118:	9a f0       	brmi	.+38     	; 0x1140 <__mulsf3_pse+0x88>
    111a:	f1 f0       	breq	.+60     	; 0x1158 <__mulsf3_pse+0xa0>
    111c:	88 23       	and	r24, r24
    111e:	4a f0       	brmi	.+18     	; 0x1132 <__mulsf3_pse+0x7a>
    1120:	ee 0f       	add	r30, r30
    1122:	ff 1f       	adc	r31, r31
    1124:	bb 1f       	adc	r27, r27
    1126:	66 1f       	adc	r22, r22
    1128:	77 1f       	adc	r23, r23
    112a:	88 1f       	adc	r24, r24
    112c:	91 50       	subi	r25, 0x01	; 1
    112e:	50 40       	sbci	r21, 0x00	; 0
    1130:	a9 f7       	brne	.-22     	; 0x111c <__mulsf3_pse+0x64>
    1132:	9e 3f       	cpi	r25, 0xFE	; 254
    1134:	51 05       	cpc	r21, r1
    1136:	80 f0       	brcs	.+32     	; 0x1158 <__mulsf3_pse+0xa0>
    1138:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__fp_inf>
    113c:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__fp_szero>
    1140:	5f 3f       	cpi	r21, 0xFF	; 255
    1142:	e4 f3       	brlt	.-8      	; 0x113c <__mulsf3_pse+0x84>
    1144:	98 3e       	cpi	r25, 0xE8	; 232
    1146:	d4 f3       	brlt	.-12     	; 0x113c <__mulsf3_pse+0x84>
    1148:	86 95       	lsr	r24
    114a:	77 95       	ror	r23
    114c:	67 95       	ror	r22
    114e:	b7 95       	ror	r27
    1150:	f7 95       	ror	r31
    1152:	e7 95       	ror	r30
    1154:	9f 5f       	subi	r25, 0xFF	; 255
    1156:	c1 f7       	brne	.-16     	; 0x1148 <__mulsf3_pse+0x90>
    1158:	fe 2b       	or	r31, r30
    115a:	88 0f       	add	r24, r24
    115c:	91 1d       	adc	r25, r1
    115e:	96 95       	lsr	r25
    1160:	87 95       	ror	r24
    1162:	97 f9       	bld	r25, 7
    1164:	08 95       	ret

00001166 <pow>:
    1166:	fa 01       	movw	r30, r20
    1168:	ee 0f       	add	r30, r30
    116a:	ff 1f       	adc	r31, r31
    116c:	30 96       	adiw	r30, 0x00	; 0
    116e:	21 05       	cpc	r18, r1
    1170:	31 05       	cpc	r19, r1
    1172:	a1 f1       	breq	.+104    	; 0x11dc <pow+0x76>
    1174:	61 15       	cp	r22, r1
    1176:	71 05       	cpc	r23, r1
    1178:	61 f4       	brne	.+24     	; 0x1192 <pow+0x2c>
    117a:	80 38       	cpi	r24, 0x80	; 128
    117c:	bf e3       	ldi	r27, 0x3F	; 63
    117e:	9b 07       	cpc	r25, r27
    1180:	49 f1       	breq	.+82     	; 0x11d4 <pow+0x6e>
    1182:	68 94       	set
    1184:	90 38       	cpi	r25, 0x80	; 128
    1186:	81 05       	cpc	r24, r1
    1188:	61 f0       	breq	.+24     	; 0x11a2 <pow+0x3c>
    118a:	80 38       	cpi	r24, 0x80	; 128
    118c:	bf ef       	ldi	r27, 0xFF	; 255
    118e:	9b 07       	cpc	r25, r27
    1190:	41 f0       	breq	.+16     	; 0x11a2 <pow+0x3c>
    1192:	99 23       	and	r25, r25
    1194:	4a f5       	brpl	.+82     	; 0x11e8 <pow+0x82>
    1196:	ff 3f       	cpi	r31, 0xFF	; 255
    1198:	e1 05       	cpc	r30, r1
    119a:	31 05       	cpc	r19, r1
    119c:	21 05       	cpc	r18, r1
    119e:	19 f1       	breq	.+70     	; 0x11e6 <pow+0x80>
    11a0:	e8 94       	clt
    11a2:	08 94       	sec
    11a4:	e7 95       	ror	r30
    11a6:	d9 01       	movw	r26, r18
    11a8:	aa 23       	and	r26, r26
    11aa:	29 f4       	brne	.+10     	; 0x11b6 <pow+0x50>
    11ac:	ab 2f       	mov	r26, r27
    11ae:	be 2f       	mov	r27, r30
    11b0:	f8 5f       	subi	r31, 0xF8	; 248
    11b2:	d0 f3       	brcs	.-12     	; 0x11a8 <pow+0x42>
    11b4:	10 c0       	rjmp	.+32     	; 0x11d6 <pow+0x70>
    11b6:	ff 5f       	subi	r31, 0xFF	; 255
    11b8:	70 f4       	brcc	.+28     	; 0x11d6 <pow+0x70>
    11ba:	a6 95       	lsr	r26
    11bc:	e0 f7       	brcc	.-8      	; 0x11b6 <pow+0x50>
    11be:	f7 39       	cpi	r31, 0x97	; 151
    11c0:	50 f0       	brcs	.+20     	; 0x11d6 <pow+0x70>
    11c2:	19 f0       	breq	.+6      	; 0x11ca <pow+0x64>
    11c4:	ff 3a       	cpi	r31, 0xAF	; 175
    11c6:	38 f4       	brcc	.+14     	; 0x11d6 <pow+0x70>
    11c8:	9f 77       	andi	r25, 0x7F	; 127
    11ca:	9f 93       	push	r25
    11cc:	0d d0       	rcall	.+26     	; 0x11e8 <pow+0x82>
    11ce:	0f 90       	pop	r0
    11d0:	07 fc       	sbrc	r0, 7
    11d2:	90 58       	subi	r25, 0x80	; 128
    11d4:	08 95       	ret
    11d6:	46 f0       	brts	.+16     	; 0x11e8 <pow+0x82>
    11d8:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__fp_nan>
    11dc:	60 e0       	ldi	r22, 0x00	; 0
    11de:	70 e0       	ldi	r23, 0x00	; 0
    11e0:	80 e8       	ldi	r24, 0x80	; 128
    11e2:	9f e3       	ldi	r25, 0x3F	; 63
    11e4:	08 95       	ret
    11e6:	4f e7       	ldi	r20, 0x7F	; 127
    11e8:	9f 77       	andi	r25, 0x7F	; 127
    11ea:	5f 93       	push	r21
    11ec:	4f 93       	push	r20
    11ee:	3f 93       	push	r19
    11f0:	2f 93       	push	r18
    11f2:	0e 94 ae 09 	call	0x135c	; 0x135c <log>
    11f6:	2f 91       	pop	r18
    11f8:	3f 91       	pop	r19
    11fa:	4f 91       	pop	r20
    11fc:	5f 91       	pop	r21
    11fe:	0e 94 46 08 	call	0x108c	; 0x108c <__mulsf3>
    1202:	0c 94 0b 09 	jmp	0x1216	; 0x1216 <exp>
    1206:	29 f4       	brne	.+10     	; 0x1212 <pow+0xac>
    1208:	16 f0       	brts	.+4      	; 0x120e <pow+0xa8>
    120a:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__fp_inf>
    120e:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__fp_zero>
    1212:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__fp_nan>

00001216 <exp>:
    1216:	0e 94 20 08 	call	0x1040	; 0x1040 <__fp_splitA>
    121a:	a8 f3       	brcs	.-22     	; 0x1206 <pow+0xa0>
    121c:	96 38       	cpi	r25, 0x86	; 134
    121e:	a0 f7       	brcc	.-24     	; 0x1208 <pow+0xa2>
    1220:	07 f8       	bld	r0, 7
    1222:	0f 92       	push	r0
    1224:	e8 94       	clt
    1226:	2b e3       	ldi	r18, 0x3B	; 59
    1228:	3a ea       	ldi	r19, 0xAA	; 170
    122a:	48 eb       	ldi	r20, 0xB8	; 184
    122c:	5f e7       	ldi	r21, 0x7F	; 127
    122e:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__mulsf3_pse>
    1232:	0f 92       	push	r0
    1234:	0f 92       	push	r0
    1236:	0f 92       	push	r0
    1238:	4d b7       	in	r20, 0x3d	; 61
    123a:	5e b7       	in	r21, 0x3e	; 62
    123c:	0f 92       	push	r0
    123e:	0e 94 f6 09 	call	0x13ec	; 0x13ec <modf>
    1242:	e8 e6       	ldi	r30, 0x68	; 104
    1244:	f0 e0       	ldi	r31, 0x00	; 0
    1246:	0e 94 3d 09 	call	0x127a	; 0x127a <__fp_powser>
    124a:	4f 91       	pop	r20
    124c:	5f 91       	pop	r21
    124e:	ef 91       	pop	r30
    1250:	ff 91       	pop	r31
    1252:	e5 95       	asr	r30
    1254:	ee 1f       	adc	r30, r30
    1256:	ff 1f       	adc	r31, r31
    1258:	49 f0       	breq	.+18     	; 0x126c <exp+0x56>
    125a:	fe 57       	subi	r31, 0x7E	; 126
    125c:	e0 68       	ori	r30, 0x80	; 128
    125e:	44 27       	eor	r20, r20
    1260:	ee 0f       	add	r30, r30
    1262:	44 1f       	adc	r20, r20
    1264:	fa 95       	dec	r31
    1266:	e1 f7       	brne	.-8      	; 0x1260 <exp+0x4a>
    1268:	41 95       	neg	r20
    126a:	55 0b       	sbc	r21, r21
    126c:	0e 94 70 09 	call	0x12e0	; 0x12e0 <ldexp>
    1270:	0f 90       	pop	r0
    1272:	07 fe       	sbrs	r0, 7
    1274:	0c 94 64 09 	jmp	0x12c8	; 0x12c8 <inverse>
    1278:	08 95       	ret

0000127a <__fp_powser>:
    127a:	df 93       	push	r29
    127c:	cf 93       	push	r28
    127e:	1f 93       	push	r17
    1280:	0f 93       	push	r16
    1282:	ff 92       	push	r15
    1284:	ef 92       	push	r14
    1286:	df 92       	push	r13
    1288:	7b 01       	movw	r14, r22
    128a:	8c 01       	movw	r16, r24
    128c:	68 94       	set
    128e:	06 c0       	rjmp	.+12     	; 0x129c <__fp_powser+0x22>
    1290:	da 2e       	mov	r13, r26
    1292:	ef 01       	movw	r28, r30
    1294:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__mulsf3x>
    1298:	fe 01       	movw	r30, r28
    129a:	e8 94       	clt
    129c:	a5 91       	lpm	r26, Z+
    129e:	25 91       	lpm	r18, Z+
    12a0:	35 91       	lpm	r19, Z+
    12a2:	45 91       	lpm	r20, Z+
    12a4:	55 91       	lpm	r21, Z+
    12a6:	a6 f3       	brts	.-24     	; 0x1290 <__fp_powser+0x16>
    12a8:	ef 01       	movw	r28, r30
    12aa:	0e 94 2b 06 	call	0xc56	; 0xc56 <__addsf3x>
    12ae:	fe 01       	movw	r30, r28
    12b0:	97 01       	movw	r18, r14
    12b2:	a8 01       	movw	r20, r16
    12b4:	da 94       	dec	r13
    12b6:	69 f7       	brne	.-38     	; 0x1292 <__fp_powser+0x18>
    12b8:	df 90       	pop	r13
    12ba:	ef 90       	pop	r14
    12bc:	ff 90       	pop	r15
    12be:	0f 91       	pop	r16
    12c0:	1f 91       	pop	r17
    12c2:	cf 91       	pop	r28
    12c4:	df 91       	pop	r29
    12c6:	08 95       	ret

000012c8 <inverse>:
    12c8:	9b 01       	movw	r18, r22
    12ca:	ac 01       	movw	r20, r24
    12cc:	60 e0       	ldi	r22, 0x00	; 0
    12ce:	70 e0       	ldi	r23, 0x00	; 0
    12d0:	80 e8       	ldi	r24, 0x80	; 128
    12d2:	9f e3       	ldi	r25, 0x3F	; 63
    12d4:	0c 94 85 06 	jmp	0xd0a	; 0xd0a <__divsf3>
    12d8:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__fp_inf>
    12dc:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <__fp_mpack>

000012e0 <ldexp>:
    12e0:	0e 94 20 08 	call	0x1040	; 0x1040 <__fp_splitA>
    12e4:	d8 f3       	brcs	.-10     	; 0x12dc <inverse+0x14>
    12e6:	99 23       	and	r25, r25
    12e8:	c9 f3       	breq	.-14     	; 0x12dc <inverse+0x14>
    12ea:	94 0f       	add	r25, r20
    12ec:	51 1d       	adc	r21, r1
    12ee:	a3 f3       	brvs	.-24     	; 0x12d8 <inverse+0x10>
    12f0:	91 50       	subi	r25, 0x01	; 1
    12f2:	50 40       	sbci	r21, 0x00	; 0
    12f4:	94 f0       	brlt	.+36     	; 0x131a <ldexp+0x3a>
    12f6:	59 f0       	breq	.+22     	; 0x130e <ldexp+0x2e>
    12f8:	88 23       	and	r24, r24
    12fa:	32 f0       	brmi	.+12     	; 0x1308 <ldexp+0x28>
    12fc:	66 0f       	add	r22, r22
    12fe:	77 1f       	adc	r23, r23
    1300:	88 1f       	adc	r24, r24
    1302:	91 50       	subi	r25, 0x01	; 1
    1304:	50 40       	sbci	r21, 0x00	; 0
    1306:	c1 f7       	brne	.-16     	; 0x12f8 <ldexp+0x18>
    1308:	9e 3f       	cpi	r25, 0xFE	; 254
    130a:	51 05       	cpc	r21, r1
    130c:	2c f7       	brge	.-54     	; 0x12d8 <inverse+0x10>
    130e:	88 0f       	add	r24, r24
    1310:	91 1d       	adc	r25, r1
    1312:	96 95       	lsr	r25
    1314:	87 95       	ror	r24
    1316:	97 f9       	bld	r25, 7
    1318:	08 95       	ret
    131a:	5f 3f       	cpi	r21, 0xFF	; 255
    131c:	ac f0       	brlt	.+42     	; 0x1348 <ldexp+0x68>
    131e:	98 3e       	cpi	r25, 0xE8	; 232
    1320:	9c f0       	brlt	.+38     	; 0x1348 <ldexp+0x68>
    1322:	bb 27       	eor	r27, r27
    1324:	86 95       	lsr	r24
    1326:	77 95       	ror	r23
    1328:	67 95       	ror	r22
    132a:	b7 95       	ror	r27
    132c:	08 f4       	brcc	.+2      	; 0x1330 <ldexp+0x50>
    132e:	b1 60       	ori	r27, 0x01	; 1
    1330:	93 95       	inc	r25
    1332:	c1 f7       	brne	.-16     	; 0x1324 <ldexp+0x44>
    1334:	bb 0f       	add	r27, r27
    1336:	58 f7       	brcc	.-42     	; 0x130e <ldexp+0x2e>
    1338:	11 f4       	brne	.+4      	; 0x133e <ldexp+0x5e>
    133a:	60 ff       	sbrs	r22, 0
    133c:	e8 cf       	rjmp	.-48     	; 0x130e <ldexp+0x2e>
    133e:	6f 5f       	subi	r22, 0xFF	; 255
    1340:	7f 4f       	sbci	r23, 0xFF	; 255
    1342:	8f 4f       	sbci	r24, 0xFF	; 255
    1344:	9f 4f       	sbci	r25, 0xFF	; 255
    1346:	e3 cf       	rjmp	.-58     	; 0x130e <ldexp+0x2e>
    1348:	0c 94 3b 08 	jmp	0x1076	; 0x1076 <__fp_szero>
    134c:	16 f0       	brts	.+4      	; 0x1352 <ldexp+0x72>
    134e:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <__fp_mpack>
    1352:	0c 94 f6 07 	jmp	0xfec	; 0xfec <__fp_nan>
    1356:	68 94       	set
    1358:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__fp_inf>

0000135c <log>:
    135c:	0e 94 20 08 	call	0x1040	; 0x1040 <__fp_splitA>
    1360:	a8 f3       	brcs	.-22     	; 0x134c <ldexp+0x6c>
    1362:	99 23       	and	r25, r25
    1364:	c1 f3       	breq	.-16     	; 0x1356 <ldexp+0x76>
    1366:	ae f3       	brts	.-22     	; 0x1352 <ldexp+0x72>
    1368:	df 93       	push	r29
    136a:	cf 93       	push	r28
    136c:	1f 93       	push	r17
    136e:	0f 93       	push	r16
    1370:	ff 92       	push	r15
    1372:	c9 2f       	mov	r28, r25
    1374:	dd 27       	eor	r29, r29
    1376:	88 23       	and	r24, r24
    1378:	2a f0       	brmi	.+10     	; 0x1384 <log+0x28>
    137a:	21 97       	sbiw	r28, 0x01	; 1
    137c:	66 0f       	add	r22, r22
    137e:	77 1f       	adc	r23, r23
    1380:	88 1f       	adc	r24, r24
    1382:	da f7       	brpl	.-10     	; 0x137a <log+0x1e>
    1384:	20 e0       	ldi	r18, 0x00	; 0
    1386:	30 e0       	ldi	r19, 0x00	; 0
    1388:	40 e8       	ldi	r20, 0x80	; 128
    138a:	5f eb       	ldi	r21, 0xBF	; 191
    138c:	9f e3       	ldi	r25, 0x3F	; 63
    138e:	88 39       	cpi	r24, 0x98	; 152
    1390:	20 f0       	brcs	.+8      	; 0x139a <log+0x3e>
    1392:	80 3e       	cpi	r24, 0xE0	; 224
    1394:	38 f0       	brcs	.+14     	; 0x13a4 <log+0x48>
    1396:	21 96       	adiw	r28, 0x01	; 1
    1398:	8f 77       	andi	r24, 0x7F	; 127
    139a:	0e 94 14 06 	call	0xc28	; 0xc28 <__addsf3>
    139e:	e0 e9       	ldi	r30, 0x90	; 144
    13a0:	f0 e0       	ldi	r31, 0x00	; 0
    13a2:	04 c0       	rjmp	.+8      	; 0x13ac <log+0x50>
    13a4:	0e 94 14 06 	call	0xc28	; 0xc28 <__addsf3>
    13a8:	ed eb       	ldi	r30, 0xBD	; 189
    13aa:	f0 e0       	ldi	r31, 0x00	; 0
    13ac:	0e 94 3d 09 	call	0x127a	; 0x127a <__fp_powser>
    13b0:	8b 01       	movw	r16, r22
    13b2:	be 01       	movw	r22, r28
    13b4:	ec 01       	movw	r28, r24
    13b6:	fb 2e       	mov	r15, r27
    13b8:	6f 57       	subi	r22, 0x7F	; 127
    13ba:	71 09       	sbc	r23, r1
    13bc:	75 95       	asr	r23
    13be:	77 1f       	adc	r23, r23
    13c0:	88 0b       	sbc	r24, r24
    13c2:	99 0b       	sbc	r25, r25
    13c4:	0e 94 2f 07 	call	0xe5e	; 0xe5e <__floatsisf>
    13c8:	28 e1       	ldi	r18, 0x18	; 24
    13ca:	32 e7       	ldi	r19, 0x72	; 114
    13cc:	41 e3       	ldi	r20, 0x31	; 49
    13ce:	5f e3       	ldi	r21, 0x3F	; 63
    13d0:	0e 94 59 08 	call	0x10b2	; 0x10b2 <__mulsf3x>
    13d4:	af 2d       	mov	r26, r15
    13d6:	98 01       	movw	r18, r16
    13d8:	ae 01       	movw	r20, r28
    13da:	ff 90       	pop	r15
    13dc:	0f 91       	pop	r16
    13de:	1f 91       	pop	r17
    13e0:	cf 91       	pop	r28
    13e2:	df 91       	pop	r29
    13e4:	0e 94 2b 06 	call	0xc56	; 0xc56 <__addsf3x>
    13e8:	0c 94 07 08 	jmp	0x100e	; 0x100e <__fp_round>

000013ec <modf>:
    13ec:	fa 01       	movw	r30, r20
    13ee:	dc 01       	movw	r26, r24
    13f0:	aa 0f       	add	r26, r26
    13f2:	bb 1f       	adc	r27, r27
    13f4:	9b 01       	movw	r18, r22
    13f6:	ac 01       	movw	r20, r24
    13f8:	bf 57       	subi	r27, 0x7F	; 127
    13fa:	28 f4       	brcc	.+10     	; 0x1406 <modf+0x1a>
    13fc:	22 27       	eor	r18, r18
    13fe:	33 27       	eor	r19, r19
    1400:	44 27       	eor	r20, r20
    1402:	50 78       	andi	r21, 0x80	; 128
    1404:	20 c0       	rjmp	.+64     	; 0x1446 <modf+0x5a>
    1406:	b7 51       	subi	r27, 0x17	; 23
    1408:	90 f4       	brcc	.+36     	; 0x142e <modf+0x42>
    140a:	ab 2f       	mov	r26, r27
    140c:	00 24       	eor	r0, r0
    140e:	46 95       	lsr	r20
    1410:	37 95       	ror	r19
    1412:	27 95       	ror	r18
    1414:	01 1c       	adc	r0, r1
    1416:	a3 95       	inc	r26
    1418:	d2 f3       	brmi	.-12     	; 0x140e <modf+0x22>
    141a:	00 20       	and	r0, r0
    141c:	71 f0       	breq	.+28     	; 0x143a <modf+0x4e>
    141e:	22 0f       	add	r18, r18
    1420:	33 1f       	adc	r19, r19
    1422:	44 1f       	adc	r20, r20
    1424:	b3 95       	inc	r27
    1426:	da f3       	brmi	.-10     	; 0x141e <modf+0x32>
    1428:	0e d0       	rcall	.+28     	; 0x1446 <modf+0x5a>
    142a:	0c 94 13 06 	jmp	0xc26	; 0xc26 <__subsf3>
    142e:	61 30       	cpi	r22, 0x01	; 1
    1430:	71 05       	cpc	r23, r1
    1432:	a0 e8       	ldi	r26, 0x80	; 128
    1434:	8a 07       	cpc	r24, r26
    1436:	b9 46       	sbci	r27, 0x69	; 105
    1438:	30 f4       	brcc	.+12     	; 0x1446 <modf+0x5a>
    143a:	9b 01       	movw	r18, r22
    143c:	ac 01       	movw	r20, r24
    143e:	66 27       	eor	r22, r22
    1440:	77 27       	eor	r23, r23
    1442:	88 27       	eor	r24, r24
    1444:	90 78       	andi	r25, 0x80	; 128
    1446:	30 96       	adiw	r30, 0x00	; 0
    1448:	21 f0       	breq	.+8      	; 0x1452 <modf+0x66>
    144a:	20 83       	st	Z, r18
    144c:	31 83       	std	Z+1, r19	; 0x01
    144e:	42 83       	std	Z+2, r20	; 0x02
    1450:	53 83       	std	Z+3, r21	; 0x03
    1452:	08 95       	ret

00001454 <__muluhisi3>:
    1454:	0e 94 18 0b 	call	0x1630	; 0x1630 <__umulhisi3>
    1458:	a5 9f       	mul	r26, r21
    145a:	90 0d       	add	r25, r0
    145c:	b4 9f       	mul	r27, r20
    145e:	90 0d       	add	r25, r0
    1460:	a4 9f       	mul	r26, r20
    1462:	80 0d       	add	r24, r0
    1464:	91 1d       	adc	r25, r1
    1466:	11 24       	eor	r1, r1
    1468:	08 95       	ret

0000146a <__moddi3>:
    146a:	68 94       	set
    146c:	01 c0       	rjmp	.+2      	; 0x1470 <__divdi3_moddi3>

0000146e <__divdi3>:
    146e:	e8 94       	clt

00001470 <__divdi3_moddi3>:
    1470:	f9 2f       	mov	r31, r25
    1472:	f1 2b       	or	r31, r17
    1474:	12 f0       	brmi	.+4      	; 0x147a <__divdi3_moddi3+0xa>
    1476:	0c 94 69 0a 	jmp	0x14d2	; 0x14d2 <__udivdi3_umoddi3>
    147a:	a0 e0       	ldi	r26, 0x00	; 0
    147c:	b0 e0       	ldi	r27, 0x00	; 0
    147e:	e3 e4       	ldi	r30, 0x43	; 67
    1480:	fa e0       	ldi	r31, 0x0A	; 10
    1482:	0c 94 db 0a 	jmp	0x15b6	; 0x15b6 <__prologue_saves__+0xc>
    1486:	09 2e       	mov	r0, r25
    1488:	05 94       	asr	r0
    148a:	22 f4       	brpl	.+8      	; 0x1494 <__divdi3_moddi3+0x24>
    148c:	0e 94 c5 0a 	call	0x158a	; 0x158a <__negdi2>
    1490:	11 23       	and	r17, r17
    1492:	92 f4       	brpl	.+36     	; 0x14b8 <__divdi3_moddi3+0x48>
    1494:	f0 e8       	ldi	r31, 0x80	; 128
    1496:	0f 26       	eor	r0, r31
    1498:	ff ef       	ldi	r31, 0xFF	; 255
    149a:	e0 94       	com	r14
    149c:	f0 94       	com	r15
    149e:	00 95       	com	r16
    14a0:	10 95       	com	r17
    14a2:	b0 94       	com	r11
    14a4:	c0 94       	com	r12
    14a6:	d0 94       	com	r13
    14a8:	a1 94       	neg	r10
    14aa:	bf 0a       	sbc	r11, r31
    14ac:	cf 0a       	sbc	r12, r31
    14ae:	df 0a       	sbc	r13, r31
    14b0:	ef 0a       	sbc	r14, r31
    14b2:	ff 0a       	sbc	r15, r31
    14b4:	0f 0b       	sbc	r16, r31
    14b6:	1f 0b       	sbc	r17, r31
    14b8:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__udivmod64>
    14bc:	07 fc       	sbrc	r0, 7
    14be:	0e 94 c5 0a 	call	0x158a	; 0x158a <__negdi2>
    14c2:	cd b7       	in	r28, 0x3d	; 61
    14c4:	de b7       	in	r29, 0x3e	; 62
    14c6:	ec e0       	ldi	r30, 0x0C	; 12
    14c8:	0c 94 f7 0a 	jmp	0x15ee	; 0x15ee <__epilogue_restores__+0xc>

000014cc <__umoddi3>:
    14cc:	68 94       	set
    14ce:	01 c0       	rjmp	.+2      	; 0x14d2 <__udivdi3_umoddi3>

000014d0 <__udivdi3>:
    14d0:	e8 94       	clt

000014d2 <__udivdi3_umoddi3>:
    14d2:	8f 92       	push	r8
    14d4:	9f 92       	push	r9
    14d6:	cf 93       	push	r28
    14d8:	df 93       	push	r29
    14da:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <__udivmod64>
    14de:	df 91       	pop	r29
    14e0:	cf 91       	pop	r28
    14e2:	9f 90       	pop	r9
    14e4:	8f 90       	pop	r8
    14e6:	08 95       	ret

000014e8 <__udivmod64>:
    14e8:	88 24       	eor	r8, r8
    14ea:	99 24       	eor	r9, r9
    14ec:	f4 01       	movw	r30, r8
    14ee:	e4 01       	movw	r28, r8
    14f0:	b0 e4       	ldi	r27, 0x40	; 64
    14f2:	9f 93       	push	r25
    14f4:	aa 27       	eor	r26, r26
    14f6:	9a 15       	cp	r25, r10
    14f8:	8b 04       	cpc	r8, r11
    14fa:	9c 04       	cpc	r9, r12
    14fc:	ed 05       	cpc	r30, r13
    14fe:	fe 05       	cpc	r31, r14
    1500:	cf 05       	cpc	r28, r15
    1502:	d0 07       	cpc	r29, r16
    1504:	a1 07       	cpc	r26, r17
    1506:	98 f4       	brcc	.+38     	; 0x152e <__udivmod64+0x46>
    1508:	ad 2f       	mov	r26, r29
    150a:	dc 2f       	mov	r29, r28
    150c:	cf 2f       	mov	r28, r31
    150e:	fe 2f       	mov	r31, r30
    1510:	e9 2d       	mov	r30, r9
    1512:	98 2c       	mov	r9, r8
    1514:	89 2e       	mov	r8, r25
    1516:	98 2f       	mov	r25, r24
    1518:	87 2f       	mov	r24, r23
    151a:	76 2f       	mov	r23, r22
    151c:	65 2f       	mov	r22, r21
    151e:	54 2f       	mov	r21, r20
    1520:	43 2f       	mov	r20, r19
    1522:	32 2f       	mov	r19, r18
    1524:	22 27       	eor	r18, r18
    1526:	b8 50       	subi	r27, 0x08	; 8
    1528:	31 f7       	brne	.-52     	; 0x14f6 <__udivmod64+0xe>
    152a:	bf 91       	pop	r27
    152c:	27 c0       	rjmp	.+78     	; 0x157c <__udivmod64+0x94>
    152e:	1b 2e       	mov	r1, r27
    1530:	bf 91       	pop	r27
    1532:	bb 27       	eor	r27, r27
    1534:	22 0f       	add	r18, r18
    1536:	33 1f       	adc	r19, r19
    1538:	44 1f       	adc	r20, r20
    153a:	55 1f       	adc	r21, r21
    153c:	66 1f       	adc	r22, r22
    153e:	77 1f       	adc	r23, r23
    1540:	88 1f       	adc	r24, r24
    1542:	99 1f       	adc	r25, r25
    1544:	88 1c       	adc	r8, r8
    1546:	99 1c       	adc	r9, r9
    1548:	ee 1f       	adc	r30, r30
    154a:	ff 1f       	adc	r31, r31
    154c:	cc 1f       	adc	r28, r28
    154e:	dd 1f       	adc	r29, r29
    1550:	aa 1f       	adc	r26, r26
    1552:	bb 1f       	adc	r27, r27
    1554:	8a 14       	cp	r8, r10
    1556:	9b 04       	cpc	r9, r11
    1558:	ec 05       	cpc	r30, r12
    155a:	fd 05       	cpc	r31, r13
    155c:	ce 05       	cpc	r28, r14
    155e:	df 05       	cpc	r29, r15
    1560:	a0 07       	cpc	r26, r16
    1562:	b1 07       	cpc	r27, r17
    1564:	48 f0       	brcs	.+18     	; 0x1578 <__udivmod64+0x90>
    1566:	8a 18       	sub	r8, r10
    1568:	9b 08       	sbc	r9, r11
    156a:	ec 09       	sbc	r30, r12
    156c:	fd 09       	sbc	r31, r13
    156e:	ce 09       	sbc	r28, r14
    1570:	df 09       	sbc	r29, r15
    1572:	a0 0b       	sbc	r26, r16
    1574:	b1 0b       	sbc	r27, r17
    1576:	21 60       	ori	r18, 0x01	; 1
    1578:	1a 94       	dec	r1
    157a:	e1 f6       	brne	.-72     	; 0x1534 <__udivmod64+0x4c>
    157c:	2e f4       	brtc	.+10     	; 0x1588 <__udivmod64+0xa0>
    157e:	94 01       	movw	r18, r8
    1580:	af 01       	movw	r20, r30
    1582:	be 01       	movw	r22, r28
    1584:	cd 01       	movw	r24, r26
    1586:	00 0c       	add	r0, r0
    1588:	08 95       	ret

0000158a <__negdi2>:
    158a:	60 95       	com	r22
    158c:	70 95       	com	r23
    158e:	80 95       	com	r24
    1590:	90 95       	com	r25
    1592:	30 95       	com	r19
    1594:	40 95       	com	r20
    1596:	50 95       	com	r21
    1598:	21 95       	neg	r18
    159a:	3f 4f       	sbci	r19, 0xFF	; 255
    159c:	4f 4f       	sbci	r20, 0xFF	; 255
    159e:	5f 4f       	sbci	r21, 0xFF	; 255
    15a0:	6f 4f       	sbci	r22, 0xFF	; 255
    15a2:	7f 4f       	sbci	r23, 0xFF	; 255
    15a4:	8f 4f       	sbci	r24, 0xFF	; 255
    15a6:	9f 4f       	sbci	r25, 0xFF	; 255
    15a8:	08 95       	ret

000015aa <__prologue_saves__>:
    15aa:	2f 92       	push	r2
    15ac:	3f 92       	push	r3
    15ae:	4f 92       	push	r4
    15b0:	5f 92       	push	r5
    15b2:	6f 92       	push	r6
    15b4:	7f 92       	push	r7
    15b6:	8f 92       	push	r8
    15b8:	9f 92       	push	r9
    15ba:	af 92       	push	r10
    15bc:	bf 92       	push	r11
    15be:	cf 92       	push	r12
    15c0:	df 92       	push	r13
    15c2:	ef 92       	push	r14
    15c4:	ff 92       	push	r15
    15c6:	0f 93       	push	r16
    15c8:	1f 93       	push	r17
    15ca:	cf 93       	push	r28
    15cc:	df 93       	push	r29
    15ce:	cd b7       	in	r28, 0x3d	; 61
    15d0:	de b7       	in	r29, 0x3e	; 62
    15d2:	ca 1b       	sub	r28, r26
    15d4:	db 0b       	sbc	r29, r27
    15d6:	0f b6       	in	r0, 0x3f	; 63
    15d8:	f8 94       	cli
    15da:	de bf       	out	0x3e, r29	; 62
    15dc:	0f be       	out	0x3f, r0	; 63
    15de:	cd bf       	out	0x3d, r28	; 61
    15e0:	09 94       	ijmp

000015e2 <__epilogue_restores__>:
    15e2:	2a 88       	ldd	r2, Y+18	; 0x12
    15e4:	39 88       	ldd	r3, Y+17	; 0x11
    15e6:	48 88       	ldd	r4, Y+16	; 0x10
    15e8:	5f 84       	ldd	r5, Y+15	; 0x0f
    15ea:	6e 84       	ldd	r6, Y+14	; 0x0e
    15ec:	7d 84       	ldd	r7, Y+13	; 0x0d
    15ee:	8c 84       	ldd	r8, Y+12	; 0x0c
    15f0:	9b 84       	ldd	r9, Y+11	; 0x0b
    15f2:	aa 84       	ldd	r10, Y+10	; 0x0a
    15f4:	b9 84       	ldd	r11, Y+9	; 0x09
    15f6:	c8 84       	ldd	r12, Y+8	; 0x08
    15f8:	df 80       	ldd	r13, Y+7	; 0x07
    15fa:	ee 80       	ldd	r14, Y+6	; 0x06
    15fc:	fd 80       	ldd	r15, Y+5	; 0x05
    15fe:	0c 81       	ldd	r16, Y+4	; 0x04
    1600:	1b 81       	ldd	r17, Y+3	; 0x03
    1602:	aa 81       	ldd	r26, Y+2	; 0x02
    1604:	b9 81       	ldd	r27, Y+1	; 0x01
    1606:	ce 0f       	add	r28, r30
    1608:	d1 1d       	adc	r29, r1
    160a:	0f b6       	in	r0, 0x3f	; 63
    160c:	f8 94       	cli
    160e:	de bf       	out	0x3e, r29	; 62
    1610:	0f be       	out	0x3f, r0	; 63
    1612:	cd bf       	out	0x3d, r28	; 61
    1614:	ed 01       	movw	r28, r26
    1616:	08 95       	ret

00001618 <__cmpdi2_s8>:
    1618:	00 24       	eor	r0, r0
    161a:	a7 fd       	sbrc	r26, 7
    161c:	00 94       	com	r0
    161e:	2a 17       	cp	r18, r26
    1620:	30 05       	cpc	r19, r0
    1622:	40 05       	cpc	r20, r0
    1624:	50 05       	cpc	r21, r0
    1626:	60 05       	cpc	r22, r0
    1628:	70 05       	cpc	r23, r0
    162a:	80 05       	cpc	r24, r0
    162c:	90 05       	cpc	r25, r0
    162e:	08 95       	ret

00001630 <__umulhisi3>:
    1630:	a2 9f       	mul	r26, r18
    1632:	b0 01       	movw	r22, r0
    1634:	b3 9f       	mul	r27, r19
    1636:	c0 01       	movw	r24, r0
    1638:	a3 9f       	mul	r26, r19
    163a:	70 0d       	add	r23, r0
    163c:	81 1d       	adc	r24, r1
    163e:	11 24       	eor	r1, r1
    1640:	91 1d       	adc	r25, r1
    1642:	b2 9f       	mul	r27, r18
    1644:	70 0d       	add	r23, r0
    1646:	81 1d       	adc	r24, r1
    1648:	11 24       	eor	r1, r1
    164a:	91 1d       	adc	r25, r1
    164c:	08 95       	ret

0000164e <_exit>:
    164e:	f8 94       	cli

00001650 <__stop_program>:
    1650:	ff cf       	rjmp	.-2      	; 0x1650 <__stop_program>
