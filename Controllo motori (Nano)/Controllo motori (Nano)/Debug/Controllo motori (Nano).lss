
Controllo motori (Nano).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000072e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000133  00800100  00800100  000007a2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000814  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000138f  00000000  00000000  0000088c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007b4  00000000  00000000  00001c1b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000044f  00000000  00000000  000023cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00002820  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056e  00000000  00000000  00002964  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000230  00000000  00000000  00002ed2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00003102  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 75 00 	jmp	0xea	; 0xea <__vector_1>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_7>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 67 00 	jmp	0xce	; 0xce <__vector_14>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	22 e0       	ldi	r18, 0x02	; 2
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a3 33       	cpi	r26, 0x33	; 51
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <main>
  88:	0c 94 95 03 	jmp	0x72a	; 0x72a <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <InitISR>:
#include "BNO.h"

volatile unsigned long topRaggiunti = 0;

void InitISR(void){
	PORTD|=(1<<PD3);
  90:	5b 9a       	sbi	0x0b, 3	; 11
	EIMSK|=(1<<INT0)|(1<<INT1);
  92:	8d b3       	in	r24, 0x1d	; 29
  94:	83 60       	ori	r24, 0x03	; 3
  96:	8d bb       	out	0x1d, r24	; 29
	EICRA|=(1<<ISC01)|(1<<ISC00)|(1<<ISC11)|(1<<ISC10);
  98:	e9 e6       	ldi	r30, 0x69	; 105
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	80 81       	ld	r24, Z
  9e:	8f 60       	ori	r24, 0x0F	; 15
  a0:	80 83       	st	Z, r24
	sei();
  a2:	78 94       	sei
  a4:	08 95       	ret

000000a6 <__vector_7>:
}


	
ISR(TIMER2_COMPA_vect){
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
	//dutyMSxA = CalculatePID(MSxA);
	//dutyMDxA = CalculatePID(MDxA);
	//dutyMSxD = CalculatePID(MSxD);
	//dutyMDxD = CalculatePID(MDxD);
	OCR1A=1023;	
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	93 e0       	ldi	r25, 0x03	; 3
  b8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
  bc:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
}
  c0:	9f 91       	pop	r25
  c2:	8f 91       	pop	r24
  c4:	0f 90       	pop	r0
  c6:	0f be       	out	0x3f, r0	; 63
  c8:	0f 90       	pop	r0
  ca:	1f 90       	pop	r1
  cc:	18 95       	reti

000000ce <__vector_14>:

ISR(TIMER0_COMPA_vect){
  ce:	1f 92       	push	r1
  d0:	0f 92       	push	r0
  d2:	0f b6       	in	r0, 0x3f	; 63
  d4:	0f 92       	push	r0
  d6:	11 24       	eor	r1, r1
	//topRaggiunti++;	
	OCR1B=0;
  d8:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
  dc:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
}
  e0:	0f 90       	pop	r0
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	0f 90       	pop	r0
  e6:	1f 90       	pop	r1
  e8:	18 95       	reti

000000ea <__vector_1>:

ISR(INT0_vect){	
  ea:	1f 92       	push	r1
  ec:	0f 92       	push	r0
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	0f 92       	push	r0
  f2:	11 24       	eor	r1, r1
  f4:	4f 92       	push	r4
  f6:	5f 92       	push	r5
  f8:	6f 92       	push	r6
  fa:	7f 92       	push	r7
  fc:	af 92       	push	r10
  fe:	bf 92       	push	r11
 100:	cf 92       	push	r12
 102:	df 92       	push	r13
 104:	ef 92       	push	r14
 106:	ff 92       	push	r15
 108:	1f 93       	push	r17
 10a:	2f 93       	push	r18
 10c:	3f 93       	push	r19
 10e:	4f 93       	push	r20
 110:	5f 93       	push	r21
 112:	6f 93       	push	r22
 114:	7f 93       	push	r23
 116:	8f 93       	push	r24
 118:	9f 93       	push	r25
 11a:	af 93       	push	r26
 11c:	bf 93       	push	r27
 11e:	cf 93       	push	r28
 120:	df 93       	push	r29
 122:	ef 93       	push	r30
 124:	ff 93       	push	r31
	tImp1 = TCNT2;
 126:	60 91 b2 00 	lds	r22, 0x00B2	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	0e 94 9a 02 	call	0x534	; 0x534 <__floatunsisf>
 134:	60 93 4e 01 	sts	0x014E, r22	; 0x80014e <tImp1>
 138:	70 93 4f 01 	sts	0x014F, r23	; 0x80014f <tImp1+0x1>
 13c:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <tImp1+0x2>
 140:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <tImp1+0x3>
	topRaggiuntiProv1=topRaggiunti;
 144:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 148:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 14c:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
 150:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
 154:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <topRaggiuntiProv1+0x1>
 158:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <topRaggiuntiProv1>
	if(topRaggiuntiProv1==vTopRaggiunti1){
 15c:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <topRaggiuntiProv1>
 160:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <topRaggiuntiProv1+0x1>
 164:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <vTopRaggiunti1>
 168:	90 91 90 01 	lds	r25, 0x0190	; 0x800190 <vTopRaggiunti1+0x1>
 16c:	28 17       	cp	r18, r24
 16e:	39 07       	cpc	r19, r25
 170:	d9 f4       	brne	.+54     	; 0x1a8 <__vector_1+0xbe>
		difftImp1 = tImp1 - vtImp1;
 172:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <tImp1>
 176:	70 91 4f 01 	lds	r23, 0x014F	; 0x80014f <tImp1+0x1>
 17a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <tImp1+0x2>
 17e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <tImp1+0x3>
 182:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <vtImp1>
 186:	30 91 27 01 	lds	r19, 0x0127	; 0x800127 <vtImp1+0x1>
 18a:	40 91 28 01 	lds	r20, 0x0128	; 0x800128 <vtImp1+0x2>
 18e:	50 91 29 01 	lds	r21, 0x0129	; 0x800129 <vtImp1+0x3>
 192:	0e 94 bb 01 	call	0x376	; 0x376 <__subsf3>
 196:	60 93 63 01 	sts	0x0163, r22	; 0x800163 <difftImp1>
 19a:	70 93 64 01 	sts	0x0164, r23	; 0x800164 <difftImp1+0x1>
 19e:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <difftImp1+0x2>
 1a2:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <difftImp1+0x3>
 1a6:	44 c0       	rjmp	.+136    	; 0x230 <__vector_1+0x146>
	}
	else{
		difftImp1 = (OCR2A - vtImp1) + (tImp1) + ((topRaggiuntiProv1-vTopRaggiunti1)*OCR2A);
 1a8:	e3 eb       	ldi	r30, 0xB3	; 179
 1aa:	f0 e0       	ldi	r31, 0x00	; 0
 1ac:	60 81       	ld	r22, Z
 1ae:	40 90 26 01 	lds	r4, 0x0126	; 0x800126 <vtImp1>
 1b2:	50 90 27 01 	lds	r5, 0x0127	; 0x800127 <vtImp1+0x1>
 1b6:	60 90 28 01 	lds	r6, 0x0128	; 0x800128 <vtImp1+0x2>
 1ba:	70 90 29 01 	lds	r7, 0x0129	; 0x800129 <vtImp1+0x3>
 1be:	c0 90 4e 01 	lds	r12, 0x014E	; 0x80014e <tImp1>
 1c2:	d0 90 4f 01 	lds	r13, 0x014F	; 0x80014f <tImp1+0x1>
 1c6:	e0 90 50 01 	lds	r14, 0x0150	; 0x800150 <tImp1+0x2>
 1ca:	f0 90 51 01 	lds	r15, 0x0151	; 0x800151 <tImp1+0x3>
 1ce:	c0 91 04 01 	lds	r28, 0x0104	; 0x800104 <topRaggiuntiProv1>
 1d2:	d0 91 05 01 	lds	r29, 0x0105	; 0x800105 <topRaggiuntiProv1+0x1>
 1d6:	a0 90 8f 01 	lds	r10, 0x018F	; 0x80018f <vTopRaggiunti1>
 1da:	b0 90 90 01 	lds	r11, 0x0190	; 0x800190 <vTopRaggiunti1+0x1>
 1de:	10 81       	ld	r17, Z
 1e0:	70 e0       	ldi	r23, 0x00	; 0
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	0e 94 9c 02 	call	0x538	; 0x538 <__floatsisf>
 1ea:	a3 01       	movw	r20, r6
 1ec:	92 01       	movw	r18, r4
 1ee:	0e 94 bb 01 	call	0x376	; 0x376 <__subsf3>
 1f2:	a7 01       	movw	r20, r14
 1f4:	96 01       	movw	r18, r12
 1f6:	0e 94 bc 01 	call	0x378	; 0x378 <__addsf3>
 1fa:	6b 01       	movw	r12, r22
 1fc:	7c 01       	movw	r14, r24
 1fe:	ca 19       	sub	r28, r10
 200:	db 09       	sbc	r29, r11
 202:	1c 9f       	mul	r17, r28
 204:	b0 01       	movw	r22, r0
 206:	1d 9f       	mul	r17, r29
 208:	70 0d       	add	r23, r0
 20a:	11 24       	eor	r1, r1
 20c:	80 e0       	ldi	r24, 0x00	; 0
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	0e 94 9a 02 	call	0x534	; 0x534 <__floatunsisf>
 214:	9b 01       	movw	r18, r22
 216:	ac 01       	movw	r20, r24
 218:	c7 01       	movw	r24, r14
 21a:	b6 01       	movw	r22, r12
 21c:	0e 94 bc 01 	call	0x378	; 0x378 <__addsf3>
 220:	60 93 63 01 	sts	0x0163, r22	; 0x800163 <difftImp1>
 224:	70 93 64 01 	sts	0x0164, r23	; 0x800164 <difftImp1+0x1>
 228:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <difftImp1+0x2>
 22c:	90 93 66 01 	sts	0x0166, r25	; 0x800166 <difftImp1+0x3>
		
	}
	vtImp1 = tImp1;
 230:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <tImp1>
 234:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <tImp1+0x1>
 238:	a0 91 50 01 	lds	r26, 0x0150	; 0x800150 <tImp1+0x2>
 23c:	b0 91 51 01 	lds	r27, 0x0151	; 0x800151 <tImp1+0x3>
 240:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <vtImp1>
 244:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <vtImp1+0x1>
 248:	a0 93 28 01 	sts	0x0128, r26	; 0x800128 <vtImp1+0x2>
 24c:	b0 93 29 01 	sts	0x0129, r27	; 0x800129 <vtImp1+0x3>
	vTopRaggiunti1 = topRaggiuntiProv1;
 250:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <topRaggiuntiProv1>
 254:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <topRaggiuntiProv1+0x1>
 258:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <vTopRaggiunti1+0x1>
 25c:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <vTopRaggiunti1>
	speed[1] = 62500.0 / (difftImp1 * 622.0);
 260:	60 91 63 01 	lds	r22, 0x0163	; 0x800163 <difftImp1>
 264:	70 91 64 01 	lds	r23, 0x0164	; 0x800164 <difftImp1+0x1>
 268:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <difftImp1+0x2>
 26c:	90 91 66 01 	lds	r25, 0x0166	; 0x800166 <difftImp1+0x3>
 270:	20 e0       	ldi	r18, 0x00	; 0
 272:	30 e8       	ldi	r19, 0x80	; 128
 274:	4b e1       	ldi	r20, 0x1B	; 27
 276:	54 e4       	ldi	r21, 0x44	; 68
 278:	0e 94 28 03 	call	0x650	; 0x650 <__mulsf3>
 27c:	9b 01       	movw	r18, r22
 27e:	ac 01       	movw	r20, r24
 280:	60 e0       	ldi	r22, 0x00	; 0
 282:	74 e2       	ldi	r23, 0x24	; 36
 284:	84 e7       	ldi	r24, 0x74	; 116
 286:	97 e4       	ldi	r25, 0x47	; 71
 288:	0e 94 28 02 	call	0x450	; 0x450 <__divsf3>
 28c:	60 93 c9 01 	sts	0x01C9, r22	; 0x8001c9 <speed+0x4>
 290:	70 93 ca 01 	sts	0x01CA, r23	; 0x8001ca <speed+0x5>
 294:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <speed+0x6>
 298:	90 93 cc 01 	sts	0x01CC, r25	; 0x8001cc <speed+0x7>
}
 29c:	ff 91       	pop	r31
 29e:	ef 91       	pop	r30
 2a0:	df 91       	pop	r29
 2a2:	cf 91       	pop	r28
 2a4:	bf 91       	pop	r27
 2a6:	af 91       	pop	r26
 2a8:	9f 91       	pop	r25
 2aa:	8f 91       	pop	r24
 2ac:	7f 91       	pop	r23
 2ae:	6f 91       	pop	r22
 2b0:	5f 91       	pop	r21
 2b2:	4f 91       	pop	r20
 2b4:	3f 91       	pop	r19
 2b6:	2f 91       	pop	r18
 2b8:	1f 91       	pop	r17
 2ba:	ff 90       	pop	r15
 2bc:	ef 90       	pop	r14
 2be:	df 90       	pop	r13
 2c0:	cf 90       	pop	r12
 2c2:	bf 90       	pop	r11
 2c4:	af 90       	pop	r10
 2c6:	7f 90       	pop	r7
 2c8:	6f 90       	pop	r6
 2ca:	5f 90       	pop	r5
 2cc:	4f 90       	pop	r4
 2ce:	0f 90       	pop	r0
 2d0:	0f be       	out	0x3f, r0	; 63
 2d2:	0f 90       	pop	r0
 2d4:	1f 90       	pop	r1
 2d6:	18 95       	reti

000002d8 <main>:
{
	//init_millis(F_CPU);
	//Serial_Init();
	//Serial_Send("xd");
	//SerialN();
	InitPWM();
 2d8:	0e 94 7d 01 	call	0x2fa	; 0x2fa <InitPWM>
	InitISR();
 2dc:	0e 94 48 00 	call	0x90	; 0x90 <InitISR>
	DDRB=0xFF;
 2e0:	8f ef       	ldi	r24, 0xFF	; 255
 2e2:	84 b9       	out	0x04, r24	; 4
	OCR1A=512;
 2e4:	80 e0       	ldi	r24, 0x00	; 0
 2e6:	92 e0       	ldi	r25, 0x02	; 2
 2e8:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 2ec:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
	OCR1B=512;
 2f0:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
 2f4:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
 2f8:	ff cf       	rjmp	.-2      	; 0x2f8 <main+0x20>

000002fa <InitPWM>:
//#include "BNO.h"

/*-------------------PWM-------------------*/
//Inizializzazione PWM
void InitPWM(void){
	TCCR1A|=(1<<WGM10)|(1<<WGM11)|(1<<COM1A1)|(1<<COM1B1);								//PWM 10 bit, non-inverting mode, PRESCALER = 256, FREQUENZA OTTENUTA = 61 Hz
 2fa:	e0 e8       	ldi	r30, 0x80	; 128
 2fc:	f0 e0       	ldi	r31, 0x00	; 0
 2fe:	80 81       	ld	r24, Z
 300:	83 6a       	ori	r24, 0xA3	; 163
 302:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM12)|(0<<WGM13)|(1<<CS12);
 304:	e1 e8       	ldi	r30, 0x81	; 129
 306:	f0 e0       	ldi	r31, 0x00	; 0
 308:	80 81       	ld	r24, Z
 30a:	8c 60       	ori	r24, 0x0C	; 12
 30c:	80 83       	st	Z, r24
	
	TCCR2A|=(0<<WGM20)|(0<<WGM21)|(0<<COM2A1)|(0<<COM2B1);								//CTC timer 5, PRESCALER = 8
 30e:	e0 eb       	ldi	r30, 0xB0	; 176
 310:	f0 e0       	ldi	r31, 0x00	; 0
 312:	80 81       	ld	r24, Z
 314:	80 83       	st	Z, r24
	TCCR2B|=(1<<WGM22)|(1<<CS21);
 316:	e1 eb       	ldi	r30, 0xB1	; 177
 318:	f0 e0       	ldi	r31, 0x00	; 0
 31a:	80 81       	ld	r24, Z
 31c:	8a 60       	ori	r24, 0x0A	; 10
 31e:	80 83       	st	Z, r24
	TIMSK2 = (1<<OCIE2A);
 320:	22 e0       	ldi	r18, 0x02	; 2
 322:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <__DATA_REGION_ORIGIN__+0x10>
	OCR2A = 1999;
 326:	8f ec       	ldi	r24, 0xCF	; 207
 328:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
	TCNT2=0x1FF;																				
 32c:	8f ef       	ldi	r24, 0xFF	; 255
 32e:	80 93 b2 00 	sts	0x00B2, r24	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
	
	TCCR0A|=(0<<WGM00)|(1<<WGM01)|(0<<COM0A1)|(0<<COM0B1);								//PRESCALER = 256, FREQUENZA timer = 62500 Hz					
 332:	94 b5       	in	r25, 0x24	; 36
 334:	92 60       	ori	r25, 0x02	; 2
 336:	94 bd       	out	0x24, r25	; 36
	TCCR0B|=(1<<WGM02)|(1<<CS00);
 338:	95 b5       	in	r25, 0x25	; 37
 33a:	99 60       	ori	r25, 0x09	; 9
 33c:	95 bd       	out	0x25, r25	; 37
	TIMSK0 = (1<<OCIE0A);
 33e:	20 93 6e 00 	sts	0x006E, r18	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
	OCR0A = 127;
 342:	9f e7       	ldi	r25, 0x7F	; 127
 344:	97 bd       	out	0x27, r25	; 39
	TCNT0=0x1FF;
 346:	86 bd       	out	0x26, r24	; 38

	
	DDRC=0xFF;
 348:	87 b9       	out	0x07, r24	; 7
	DDRB|=(1<<PB1)|(1<<PB2);
 34a:	84 b1       	in	r24, 0x04	; 4
 34c:	86 60       	ori	r24, 0x06	; 6
 34e:	84 b9       	out	0x04, r24	; 4

	for(int i=1;i<5;i++)integral[i]=0;
 350:	e5 ef       	ldi	r30, 0xF5	; 245
 352:	f1 e0       	ldi	r31, 0x01	; 1
 354:	14 82       	std	Z+4, r1	; 0x04
 356:	15 82       	std	Z+5, r1	; 0x05
 358:	16 82       	std	Z+6, r1	; 0x06
 35a:	17 82       	std	Z+7, r1	; 0x07
 35c:	10 86       	std	Z+8, r1	; 0x08
 35e:	11 86       	std	Z+9, r1	; 0x09
 360:	12 86       	std	Z+10, r1	; 0x0a
 362:	13 86       	std	Z+11, r1	; 0x0b
 364:	14 86       	std	Z+12, r1	; 0x0c
 366:	15 86       	std	Z+13, r1	; 0x0d
 368:	16 86       	std	Z+14, r1	; 0x0e
 36a:	17 86       	std	Z+15, r1	; 0x0f
 36c:	10 8a       	std	Z+16, r1	; 0x10
 36e:	11 8a       	std	Z+17, r1	; 0x11
 370:	12 8a       	std	Z+18, r1	; 0x12
 372:	13 8a       	std	Z+19, r1	; 0x13
 374:	08 95       	ret

00000376 <__subsf3>:
 376:	50 58       	subi	r21, 0x80	; 128

00000378 <__addsf3>:
 378:	bb 27       	eor	r27, r27
 37a:	aa 27       	eor	r26, r26
 37c:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <__addsf3x>
 380:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__fp_round>
 384:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__fp_pscA>
 388:	38 f0       	brcs	.+14     	; 0x398 <__addsf3+0x20>
 38a:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__fp_pscB>
 38e:	20 f0       	brcs	.+8      	; 0x398 <__addsf3+0x20>
 390:	39 f4       	brne	.+14     	; 0x3a0 <__addsf3+0x28>
 392:	9f 3f       	cpi	r25, 0xFF	; 255
 394:	19 f4       	brne	.+6      	; 0x39c <__addsf3+0x24>
 396:	26 f4       	brtc	.+8      	; 0x3a0 <__addsf3+0x28>
 398:	0c 94 dd 02 	jmp	0x5ba	; 0x5ba <__fp_nan>
 39c:	0e f4       	brtc	.+2      	; 0x3a0 <__addsf3+0x28>
 39e:	e0 95       	com	r30
 3a0:	e7 fb       	bst	r30, 7
 3a2:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_inf>

000003a6 <__addsf3x>:
 3a6:	e9 2f       	mov	r30, r25
 3a8:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__fp_split3>
 3ac:	58 f3       	brcs	.-42     	; 0x384 <__addsf3+0xc>
 3ae:	ba 17       	cp	r27, r26
 3b0:	62 07       	cpc	r22, r18
 3b2:	73 07       	cpc	r23, r19
 3b4:	84 07       	cpc	r24, r20
 3b6:	95 07       	cpc	r25, r21
 3b8:	20 f0       	brcs	.+8      	; 0x3c2 <__addsf3x+0x1c>
 3ba:	79 f4       	brne	.+30     	; 0x3da <__addsf3x+0x34>
 3bc:	a6 f5       	brtc	.+104    	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 3be:	0c 94 21 03 	jmp	0x642	; 0x642 <__fp_zero>
 3c2:	0e f4       	brtc	.+2      	; 0x3c6 <__addsf3x+0x20>
 3c4:	e0 95       	com	r30
 3c6:	0b 2e       	mov	r0, r27
 3c8:	ba 2f       	mov	r27, r26
 3ca:	a0 2d       	mov	r26, r0
 3cc:	0b 01       	movw	r0, r22
 3ce:	b9 01       	movw	r22, r18
 3d0:	90 01       	movw	r18, r0
 3d2:	0c 01       	movw	r0, r24
 3d4:	ca 01       	movw	r24, r20
 3d6:	a0 01       	movw	r20, r0
 3d8:	11 24       	eor	r1, r1
 3da:	ff 27       	eor	r31, r31
 3dc:	59 1b       	sub	r21, r25
 3de:	99 f0       	breq	.+38     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e0:	59 3f       	cpi	r21, 0xF9	; 249
 3e2:	50 f4       	brcc	.+20     	; 0x3f8 <__addsf3x+0x52>
 3e4:	50 3e       	cpi	r21, 0xE0	; 224
 3e6:	68 f1       	brcs	.+90     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 3e8:	1a 16       	cp	r1, r26
 3ea:	f0 40       	sbci	r31, 0x00	; 0
 3ec:	a2 2f       	mov	r26, r18
 3ee:	23 2f       	mov	r18, r19
 3f0:	34 2f       	mov	r19, r20
 3f2:	44 27       	eor	r20, r20
 3f4:	58 5f       	subi	r21, 0xF8	; 248
 3f6:	f3 cf       	rjmp	.-26     	; 0x3de <__addsf3x+0x38>
 3f8:	46 95       	lsr	r20
 3fa:	37 95       	ror	r19
 3fc:	27 95       	ror	r18
 3fe:	a7 95       	ror	r26
 400:	f0 40       	sbci	r31, 0x00	; 0
 402:	53 95       	inc	r21
 404:	c9 f7       	brne	.-14     	; 0x3f8 <__addsf3x+0x52>
 406:	7e f4       	brtc	.+30     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 408:	1f 16       	cp	r1, r31
 40a:	ba 0b       	sbc	r27, r26
 40c:	62 0b       	sbc	r22, r18
 40e:	73 0b       	sbc	r23, r19
 410:	84 0b       	sbc	r24, r20
 412:	ba f0       	brmi	.+46     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 414:	91 50       	subi	r25, 0x01	; 1
 416:	a1 f0       	breq	.+40     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 418:	ff 0f       	add	r31, r31
 41a:	bb 1f       	adc	r27, r27
 41c:	66 1f       	adc	r22, r22
 41e:	77 1f       	adc	r23, r23
 420:	88 1f       	adc	r24, r24
 422:	c2 f7       	brpl	.-16     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 424:	0e c0       	rjmp	.+28     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 426:	ba 0f       	add	r27, r26
 428:	62 1f       	adc	r22, r18
 42a:	73 1f       	adc	r23, r19
 42c:	84 1f       	adc	r24, r20
 42e:	48 f4       	brcc	.+18     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 430:	87 95       	ror	r24
 432:	77 95       	ror	r23
 434:	67 95       	ror	r22
 436:	b7 95       	ror	r27
 438:	f7 95       	ror	r31
 43a:	9e 3f       	cpi	r25, 0xFE	; 254
 43c:	08 f0       	brcs	.+2      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 43e:	b0 cf       	rjmp	.-160    	; 0x3a0 <__addsf3+0x28>
 440:	93 95       	inc	r25
 442:	88 0f       	add	r24, r24
 444:	08 f0       	brcs	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 446:	99 27       	eor	r25, r25
 448:	ee 0f       	add	r30, r30
 44a:	97 95       	ror	r25
 44c:	87 95       	ror	r24
 44e:	08 95       	ret

00000450 <__divsf3>:
 450:	0e 94 3c 02 	call	0x478	; 0x478 <__divsf3x>
 454:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__fp_round>
 458:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__fp_pscB>
 45c:	58 f0       	brcs	.+22     	; 0x474 <__divsf3+0x24>
 45e:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__fp_pscA>
 462:	40 f0       	brcs	.+16     	; 0x474 <__divsf3+0x24>
 464:	29 f4       	brne	.+10     	; 0x470 <__divsf3+0x20>
 466:	5f 3f       	cpi	r21, 0xFF	; 255
 468:	29 f0       	breq	.+10     	; 0x474 <__divsf3+0x24>
 46a:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_inf>
 46e:	51 11       	cpse	r21, r1
 470:	0c 94 22 03 	jmp	0x644	; 0x644 <__fp_szero>
 474:	0c 94 dd 02 	jmp	0x5ba	; 0x5ba <__fp_nan>

00000478 <__divsf3x>:
 478:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__fp_split3>
 47c:	68 f3       	brcs	.-38     	; 0x458 <__divsf3+0x8>

0000047e <__divsf3_pse>:
 47e:	99 23       	and	r25, r25
 480:	b1 f3       	breq	.-20     	; 0x46e <__divsf3+0x1e>
 482:	55 23       	and	r21, r21
 484:	91 f3       	breq	.-28     	; 0x46a <__divsf3+0x1a>
 486:	95 1b       	sub	r25, r21
 488:	55 0b       	sbc	r21, r21
 48a:	bb 27       	eor	r27, r27
 48c:	aa 27       	eor	r26, r26
 48e:	62 17       	cp	r22, r18
 490:	73 07       	cpc	r23, r19
 492:	84 07       	cpc	r24, r20
 494:	38 f0       	brcs	.+14     	; 0x4a4 <__divsf3_pse+0x26>
 496:	9f 5f       	subi	r25, 0xFF	; 255
 498:	5f 4f       	sbci	r21, 0xFF	; 255
 49a:	22 0f       	add	r18, r18
 49c:	33 1f       	adc	r19, r19
 49e:	44 1f       	adc	r20, r20
 4a0:	aa 1f       	adc	r26, r26
 4a2:	a9 f3       	breq	.-22     	; 0x48e <__divsf3_pse+0x10>
 4a4:	35 d0       	rcall	.+106    	; 0x510 <__divsf3_pse+0x92>
 4a6:	0e 2e       	mov	r0, r30
 4a8:	3a f0       	brmi	.+14     	; 0x4b8 <__divsf3_pse+0x3a>
 4aa:	e0 e8       	ldi	r30, 0x80	; 128
 4ac:	32 d0       	rcall	.+100    	; 0x512 <__divsf3_pse+0x94>
 4ae:	91 50       	subi	r25, 0x01	; 1
 4b0:	50 40       	sbci	r21, 0x00	; 0
 4b2:	e6 95       	lsr	r30
 4b4:	00 1c       	adc	r0, r0
 4b6:	ca f7       	brpl	.-14     	; 0x4aa <__divsf3_pse+0x2c>
 4b8:	2b d0       	rcall	.+86     	; 0x510 <__divsf3_pse+0x92>
 4ba:	fe 2f       	mov	r31, r30
 4bc:	29 d0       	rcall	.+82     	; 0x510 <__divsf3_pse+0x92>
 4be:	66 0f       	add	r22, r22
 4c0:	77 1f       	adc	r23, r23
 4c2:	88 1f       	adc	r24, r24
 4c4:	bb 1f       	adc	r27, r27
 4c6:	26 17       	cp	r18, r22
 4c8:	37 07       	cpc	r19, r23
 4ca:	48 07       	cpc	r20, r24
 4cc:	ab 07       	cpc	r26, r27
 4ce:	b0 e8       	ldi	r27, 0x80	; 128
 4d0:	09 f0       	breq	.+2      	; 0x4d4 <__divsf3_pse+0x56>
 4d2:	bb 0b       	sbc	r27, r27
 4d4:	80 2d       	mov	r24, r0
 4d6:	bf 01       	movw	r22, r30
 4d8:	ff 27       	eor	r31, r31
 4da:	93 58       	subi	r25, 0x83	; 131
 4dc:	5f 4f       	sbci	r21, 0xFF	; 255
 4de:	3a f0       	brmi	.+14     	; 0x4ee <__divsf3_pse+0x70>
 4e0:	9e 3f       	cpi	r25, 0xFE	; 254
 4e2:	51 05       	cpc	r21, r1
 4e4:	78 f0       	brcs	.+30     	; 0x504 <__divsf3_pse+0x86>
 4e6:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_inf>
 4ea:	0c 94 22 03 	jmp	0x644	; 0x644 <__fp_szero>
 4ee:	5f 3f       	cpi	r21, 0xFF	; 255
 4f0:	e4 f3       	brlt	.-8      	; 0x4ea <__divsf3_pse+0x6c>
 4f2:	98 3e       	cpi	r25, 0xE8	; 232
 4f4:	d4 f3       	brlt	.-12     	; 0x4ea <__divsf3_pse+0x6c>
 4f6:	86 95       	lsr	r24
 4f8:	77 95       	ror	r23
 4fa:	67 95       	ror	r22
 4fc:	b7 95       	ror	r27
 4fe:	f7 95       	ror	r31
 500:	9f 5f       	subi	r25, 0xFF	; 255
 502:	c9 f7       	brne	.-14     	; 0x4f6 <__divsf3_pse+0x78>
 504:	88 0f       	add	r24, r24
 506:	91 1d       	adc	r25, r1
 508:	96 95       	lsr	r25
 50a:	87 95       	ror	r24
 50c:	97 f9       	bld	r25, 7
 50e:	08 95       	ret
 510:	e1 e0       	ldi	r30, 0x01	; 1
 512:	66 0f       	add	r22, r22
 514:	77 1f       	adc	r23, r23
 516:	88 1f       	adc	r24, r24
 518:	bb 1f       	adc	r27, r27
 51a:	62 17       	cp	r22, r18
 51c:	73 07       	cpc	r23, r19
 51e:	84 07       	cpc	r24, r20
 520:	ba 07       	cpc	r27, r26
 522:	20 f0       	brcs	.+8      	; 0x52c <__divsf3_pse+0xae>
 524:	62 1b       	sub	r22, r18
 526:	73 0b       	sbc	r23, r19
 528:	84 0b       	sbc	r24, r20
 52a:	ba 0b       	sbc	r27, r26
 52c:	ee 1f       	adc	r30, r30
 52e:	88 f7       	brcc	.-30     	; 0x512 <__divsf3_pse+0x94>
 530:	e0 95       	com	r30
 532:	08 95       	ret

00000534 <__floatunsisf>:
 534:	e8 94       	clt
 536:	09 c0       	rjmp	.+18     	; 0x54a <__floatsisf+0x12>

00000538 <__floatsisf>:
 538:	97 fb       	bst	r25, 7
 53a:	3e f4       	brtc	.+14     	; 0x54a <__floatsisf+0x12>
 53c:	90 95       	com	r25
 53e:	80 95       	com	r24
 540:	70 95       	com	r23
 542:	61 95       	neg	r22
 544:	7f 4f       	sbci	r23, 0xFF	; 255
 546:	8f 4f       	sbci	r24, 0xFF	; 255
 548:	9f 4f       	sbci	r25, 0xFF	; 255
 54a:	99 23       	and	r25, r25
 54c:	a9 f0       	breq	.+42     	; 0x578 <__floatsisf+0x40>
 54e:	f9 2f       	mov	r31, r25
 550:	96 e9       	ldi	r25, 0x96	; 150
 552:	bb 27       	eor	r27, r27
 554:	93 95       	inc	r25
 556:	f6 95       	lsr	r31
 558:	87 95       	ror	r24
 55a:	77 95       	ror	r23
 55c:	67 95       	ror	r22
 55e:	b7 95       	ror	r27
 560:	f1 11       	cpse	r31, r1
 562:	f8 cf       	rjmp	.-16     	; 0x554 <__floatsisf+0x1c>
 564:	fa f4       	brpl	.+62     	; 0x5a4 <__floatsisf+0x6c>
 566:	bb 0f       	add	r27, r27
 568:	11 f4       	brne	.+4      	; 0x56e <__floatsisf+0x36>
 56a:	60 ff       	sbrs	r22, 0
 56c:	1b c0       	rjmp	.+54     	; 0x5a4 <__floatsisf+0x6c>
 56e:	6f 5f       	subi	r22, 0xFF	; 255
 570:	7f 4f       	sbci	r23, 0xFF	; 255
 572:	8f 4f       	sbci	r24, 0xFF	; 255
 574:	9f 4f       	sbci	r25, 0xFF	; 255
 576:	16 c0       	rjmp	.+44     	; 0x5a4 <__floatsisf+0x6c>
 578:	88 23       	and	r24, r24
 57a:	11 f0       	breq	.+4      	; 0x580 <__floatsisf+0x48>
 57c:	96 e9       	ldi	r25, 0x96	; 150
 57e:	11 c0       	rjmp	.+34     	; 0x5a2 <__floatsisf+0x6a>
 580:	77 23       	and	r23, r23
 582:	21 f0       	breq	.+8      	; 0x58c <__floatsisf+0x54>
 584:	9e e8       	ldi	r25, 0x8E	; 142
 586:	87 2f       	mov	r24, r23
 588:	76 2f       	mov	r23, r22
 58a:	05 c0       	rjmp	.+10     	; 0x596 <__floatsisf+0x5e>
 58c:	66 23       	and	r22, r22
 58e:	71 f0       	breq	.+28     	; 0x5ac <__floatsisf+0x74>
 590:	96 e8       	ldi	r25, 0x86	; 134
 592:	86 2f       	mov	r24, r22
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	60 e0       	ldi	r22, 0x00	; 0
 598:	2a f0       	brmi	.+10     	; 0x5a4 <__floatsisf+0x6c>
 59a:	9a 95       	dec	r25
 59c:	66 0f       	add	r22, r22
 59e:	77 1f       	adc	r23, r23
 5a0:	88 1f       	adc	r24, r24
 5a2:	da f7       	brpl	.-10     	; 0x59a <__floatsisf+0x62>
 5a4:	88 0f       	add	r24, r24
 5a6:	96 95       	lsr	r25
 5a8:	87 95       	ror	r24
 5aa:	97 f9       	bld	r25, 7
 5ac:	08 95       	ret

000005ae <__fp_inf>:
 5ae:	97 f9       	bld	r25, 7
 5b0:	9f 67       	ori	r25, 0x7F	; 127
 5b2:	80 e8       	ldi	r24, 0x80	; 128
 5b4:	70 e0       	ldi	r23, 0x00	; 0
 5b6:	60 e0       	ldi	r22, 0x00	; 0
 5b8:	08 95       	ret

000005ba <__fp_nan>:
 5ba:	9f ef       	ldi	r25, 0xFF	; 255
 5bc:	80 ec       	ldi	r24, 0xC0	; 192
 5be:	08 95       	ret

000005c0 <__fp_pscA>:
 5c0:	00 24       	eor	r0, r0
 5c2:	0a 94       	dec	r0
 5c4:	16 16       	cp	r1, r22
 5c6:	17 06       	cpc	r1, r23
 5c8:	18 06       	cpc	r1, r24
 5ca:	09 06       	cpc	r0, r25
 5cc:	08 95       	ret

000005ce <__fp_pscB>:
 5ce:	00 24       	eor	r0, r0
 5d0:	0a 94       	dec	r0
 5d2:	12 16       	cp	r1, r18
 5d4:	13 06       	cpc	r1, r19
 5d6:	14 06       	cpc	r1, r20
 5d8:	05 06       	cpc	r0, r21
 5da:	08 95       	ret

000005dc <__fp_round>:
 5dc:	09 2e       	mov	r0, r25
 5de:	03 94       	inc	r0
 5e0:	00 0c       	add	r0, r0
 5e2:	11 f4       	brne	.+4      	; 0x5e8 <__fp_round+0xc>
 5e4:	88 23       	and	r24, r24
 5e6:	52 f0       	brmi	.+20     	; 0x5fc <__fp_round+0x20>
 5e8:	bb 0f       	add	r27, r27
 5ea:	40 f4       	brcc	.+16     	; 0x5fc <__fp_round+0x20>
 5ec:	bf 2b       	or	r27, r31
 5ee:	11 f4       	brne	.+4      	; 0x5f4 <__fp_round+0x18>
 5f0:	60 ff       	sbrs	r22, 0
 5f2:	04 c0       	rjmp	.+8      	; 0x5fc <__fp_round+0x20>
 5f4:	6f 5f       	subi	r22, 0xFF	; 255
 5f6:	7f 4f       	sbci	r23, 0xFF	; 255
 5f8:	8f 4f       	sbci	r24, 0xFF	; 255
 5fa:	9f 4f       	sbci	r25, 0xFF	; 255
 5fc:	08 95       	ret

000005fe <__fp_split3>:
 5fe:	57 fd       	sbrc	r21, 7
 600:	90 58       	subi	r25, 0x80	; 128
 602:	44 0f       	add	r20, r20
 604:	55 1f       	adc	r21, r21
 606:	59 f0       	breq	.+22     	; 0x61e <__fp_splitA+0x10>
 608:	5f 3f       	cpi	r21, 0xFF	; 255
 60a:	71 f0       	breq	.+28     	; 0x628 <__fp_splitA+0x1a>
 60c:	47 95       	ror	r20

0000060e <__fp_splitA>:
 60e:	88 0f       	add	r24, r24
 610:	97 fb       	bst	r25, 7
 612:	99 1f       	adc	r25, r25
 614:	61 f0       	breq	.+24     	; 0x62e <__fp_splitA+0x20>
 616:	9f 3f       	cpi	r25, 0xFF	; 255
 618:	79 f0       	breq	.+30     	; 0x638 <__fp_splitA+0x2a>
 61a:	87 95       	ror	r24
 61c:	08 95       	ret
 61e:	12 16       	cp	r1, r18
 620:	13 06       	cpc	r1, r19
 622:	14 06       	cpc	r1, r20
 624:	55 1f       	adc	r21, r21
 626:	f2 cf       	rjmp	.-28     	; 0x60c <__fp_split3+0xe>
 628:	46 95       	lsr	r20
 62a:	f1 df       	rcall	.-30     	; 0x60e <__fp_splitA>
 62c:	08 c0       	rjmp	.+16     	; 0x63e <__fp_splitA+0x30>
 62e:	16 16       	cp	r1, r22
 630:	17 06       	cpc	r1, r23
 632:	18 06       	cpc	r1, r24
 634:	99 1f       	adc	r25, r25
 636:	f1 cf       	rjmp	.-30     	; 0x61a <__fp_splitA+0xc>
 638:	86 95       	lsr	r24
 63a:	71 05       	cpc	r23, r1
 63c:	61 05       	cpc	r22, r1
 63e:	08 94       	sec
 640:	08 95       	ret

00000642 <__fp_zero>:
 642:	e8 94       	clt

00000644 <__fp_szero>:
 644:	bb 27       	eor	r27, r27
 646:	66 27       	eor	r22, r22
 648:	77 27       	eor	r23, r23
 64a:	cb 01       	movw	r24, r22
 64c:	97 f9       	bld	r25, 7
 64e:	08 95       	ret

00000650 <__mulsf3>:
 650:	0e 94 3b 03 	call	0x676	; 0x676 <__mulsf3x>
 654:	0c 94 ee 02 	jmp	0x5dc	; 0x5dc <__fp_round>
 658:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__fp_pscA>
 65c:	38 f0       	brcs	.+14     	; 0x66c <__mulsf3+0x1c>
 65e:	0e 94 e7 02 	call	0x5ce	; 0x5ce <__fp_pscB>
 662:	20 f0       	brcs	.+8      	; 0x66c <__mulsf3+0x1c>
 664:	95 23       	and	r25, r21
 666:	11 f0       	breq	.+4      	; 0x66c <__mulsf3+0x1c>
 668:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_inf>
 66c:	0c 94 dd 02 	jmp	0x5ba	; 0x5ba <__fp_nan>
 670:	11 24       	eor	r1, r1
 672:	0c 94 22 03 	jmp	0x644	; 0x644 <__fp_szero>

00000676 <__mulsf3x>:
 676:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__fp_split3>
 67a:	70 f3       	brcs	.-36     	; 0x658 <__mulsf3+0x8>

0000067c <__mulsf3_pse>:
 67c:	95 9f       	mul	r25, r21
 67e:	c1 f3       	breq	.-16     	; 0x670 <__mulsf3+0x20>
 680:	95 0f       	add	r25, r21
 682:	50 e0       	ldi	r21, 0x00	; 0
 684:	55 1f       	adc	r21, r21
 686:	62 9f       	mul	r22, r18
 688:	f0 01       	movw	r30, r0
 68a:	72 9f       	mul	r23, r18
 68c:	bb 27       	eor	r27, r27
 68e:	f0 0d       	add	r31, r0
 690:	b1 1d       	adc	r27, r1
 692:	63 9f       	mul	r22, r19
 694:	aa 27       	eor	r26, r26
 696:	f0 0d       	add	r31, r0
 698:	b1 1d       	adc	r27, r1
 69a:	aa 1f       	adc	r26, r26
 69c:	64 9f       	mul	r22, r20
 69e:	66 27       	eor	r22, r22
 6a0:	b0 0d       	add	r27, r0
 6a2:	a1 1d       	adc	r26, r1
 6a4:	66 1f       	adc	r22, r22
 6a6:	82 9f       	mul	r24, r18
 6a8:	22 27       	eor	r18, r18
 6aa:	b0 0d       	add	r27, r0
 6ac:	a1 1d       	adc	r26, r1
 6ae:	62 1f       	adc	r22, r18
 6b0:	73 9f       	mul	r23, r19
 6b2:	b0 0d       	add	r27, r0
 6b4:	a1 1d       	adc	r26, r1
 6b6:	62 1f       	adc	r22, r18
 6b8:	83 9f       	mul	r24, r19
 6ba:	a0 0d       	add	r26, r0
 6bc:	61 1d       	adc	r22, r1
 6be:	22 1f       	adc	r18, r18
 6c0:	74 9f       	mul	r23, r20
 6c2:	33 27       	eor	r19, r19
 6c4:	a0 0d       	add	r26, r0
 6c6:	61 1d       	adc	r22, r1
 6c8:	23 1f       	adc	r18, r19
 6ca:	84 9f       	mul	r24, r20
 6cc:	60 0d       	add	r22, r0
 6ce:	21 1d       	adc	r18, r1
 6d0:	82 2f       	mov	r24, r18
 6d2:	76 2f       	mov	r23, r22
 6d4:	6a 2f       	mov	r22, r26
 6d6:	11 24       	eor	r1, r1
 6d8:	9f 57       	subi	r25, 0x7F	; 127
 6da:	50 40       	sbci	r21, 0x00	; 0
 6dc:	9a f0       	brmi	.+38     	; 0x704 <__mulsf3_pse+0x88>
 6de:	f1 f0       	breq	.+60     	; 0x71c <__mulsf3_pse+0xa0>
 6e0:	88 23       	and	r24, r24
 6e2:	4a f0       	brmi	.+18     	; 0x6f6 <__mulsf3_pse+0x7a>
 6e4:	ee 0f       	add	r30, r30
 6e6:	ff 1f       	adc	r31, r31
 6e8:	bb 1f       	adc	r27, r27
 6ea:	66 1f       	adc	r22, r22
 6ec:	77 1f       	adc	r23, r23
 6ee:	88 1f       	adc	r24, r24
 6f0:	91 50       	subi	r25, 0x01	; 1
 6f2:	50 40       	sbci	r21, 0x00	; 0
 6f4:	a9 f7       	brne	.-22     	; 0x6e0 <__mulsf3_pse+0x64>
 6f6:	9e 3f       	cpi	r25, 0xFE	; 254
 6f8:	51 05       	cpc	r21, r1
 6fa:	80 f0       	brcs	.+32     	; 0x71c <__mulsf3_pse+0xa0>
 6fc:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__fp_inf>
 700:	0c 94 22 03 	jmp	0x644	; 0x644 <__fp_szero>
 704:	5f 3f       	cpi	r21, 0xFF	; 255
 706:	e4 f3       	brlt	.-8      	; 0x700 <__mulsf3_pse+0x84>
 708:	98 3e       	cpi	r25, 0xE8	; 232
 70a:	d4 f3       	brlt	.-12     	; 0x700 <__mulsf3_pse+0x84>
 70c:	86 95       	lsr	r24
 70e:	77 95       	ror	r23
 710:	67 95       	ror	r22
 712:	b7 95       	ror	r27
 714:	f7 95       	ror	r31
 716:	e7 95       	ror	r30
 718:	9f 5f       	subi	r25, 0xFF	; 255
 71a:	c1 f7       	brne	.-16     	; 0x70c <__mulsf3_pse+0x90>
 71c:	fe 2b       	or	r31, r30
 71e:	88 0f       	add	r24, r24
 720:	91 1d       	adc	r25, r1
 722:	96 95       	lsr	r25
 724:	87 95       	ror	r24
 726:	97 f9       	bld	r25, 7
 728:	08 95       	ret

0000072a <_exit>:
 72a:	f8 94       	cli

0000072c <__stop_program>:
 72c:	ff cf       	rjmp	.-2      	; 0x72c <__stop_program>
